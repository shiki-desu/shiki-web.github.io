{"version":3,"file":"js/5428.0a551df5.js","mappings":"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","sources":["webpack://shiki-web/../../../../../../Mad%20Scientist/Desktop/Learn%20everthing/vue%E8%87%AA%E6%90%AD%E5%BB%BA%E7%BD%91%E7%AB%99+%E5%89%8D%E7%AB%AF%E4%B8%89%E5%89%91%E5%AE%A2/vue%E9%A1%B9%E7%9B%AE/shiki-web/src/components/ArticleCard.vue?6088","webpack://shiki-web/../../../../../../Mad%20Scientist/Desktop/Learn%20everthing/vue%E8%87%AA%E6%90%AD%E5%BB%BA%E7%BD%91%E7%AB%99+%E5%89%8D%E7%AB%AF%E4%B8%89%E5%89%91%E5%AE%A2/vue%E9%A1%B9%E7%9B%AE/shiki-web/src/components/ArticleCard.vue","webpack://shiki-web/../../../vue%E8%87%AA%E6%90%AD%E5%BB%BA%E7%BD%91%E7%AB%99+%E5%89%8D%E7%AB%AF%E4%B8%89%E5%89%91%E5%AE%A2/vue%E9%A1%B9%E7%9B%AE/shiki-web/src/components/ArticleCard.vue","webpack://shiki-web/./src/components/ArticleCard.vue","webpack://shiki-web/./src/assets/music/ sync ^\\.\\/.*$","webpack://shiki-web/../../../../../../Mad%20Scientist/Desktop/Learn%20everthing/vue%E8%87%AA%E6%90%AD%E5%BB%BA%E7%BD%91%E7%AB%99+%E5%89%8D%E7%AB%AF%E4%B8%89%E5%89%91%E5%AE%A2/vue%E9%A1%B9%E7%9B%AE/shiki-web/src/components/BackToTop.vue?cdf0","webpack://shiki-web/../../../../../../Mad%20Scientist/Desktop/Learn%20everthing/vue%E8%87%AA%E6%90%AD%E5%BB%BA%E7%BD%91%E7%AB%99+%E5%89%8D%E7%AB%AF%E4%B8%89%E5%89%91%E5%AE%A2/vue%E9%A1%B9%E7%9B%AE/shiki-web/src/components/BackToTop.vue","webpack://shiki-web/../../../vue%E8%87%AA%E6%90%AD%E5%BB%BA%E7%BD%91%E7%AB%99+%E5%89%8D%E7%AB%AF%E4%B8%89%E5%89%91%E5%AE%A2/vue%E9%A1%B9%E7%9B%AE/shiki-web/src/components/BackToTop.vue","webpack://shiki-web/./src/components/BackToTop.vue","webpack://shiki-web/../../../../../../Mad%20Scientist/Desktop/Learn%20everthing/vue%E8%87%AA%E6%90%AD%E5%BB%BA%E7%BD%91%E7%AB%99+%E5%89%8D%E7%AB%AF%E4%B8%89%E5%89%91%E5%AE%A2/vue%E9%A1%B9%E7%9B%AE/shiki-web/src/components/DataDisplay.vue?37f7","webpack://shiki-web/../../../../../../Mad%20Scientist/Desktop/Learn%20everthing/vue%E8%87%AA%E6%90%AD%E5%BB%BA%E7%BD%91%E7%AB%99+%E5%89%8D%E7%AB%AF%E4%B8%89%E5%89%91%E5%AE%A2/vue%E9%A1%B9%E7%9B%AE/shiki-web/src/components/DataDisplay.vue","webpack://shiki-web/../../../vue%E8%87%AA%E6%90%AD%E5%BB%BA%E7%BD%91%E7%AB%99+%E5%89%8D%E7%AB%AF%E4%B8%89%E5%89%91%E5%AE%A2/vue%E9%A1%B9%E7%9B%AE/shiki-web/src/components/DataDisplay.vue","webpack://shiki-web/./src/components/DataDisplay.vue","webpack://shiki-web/../../../../../../Mad%20Scientist/Desktop/Learn%20everthing/vue%E8%87%AA%E6%90%AD%E5%BB%BA%E7%BD%91%E7%AB%99+%E5%89%8D%E7%AB%AF%E4%B8%89%E5%89%91%E5%AE%A2/vue%E9%A1%B9%E7%9B%AE/shiki-web/src/components/AnimeRecommendation.vue?180c","webpack://shiki-web/../../../../../../Mad%20Scientist/Desktop/Learn%20everthing/vue%E8%87%AA%E6%90%AD%E5%BB%BA%E7%BD%91%E7%AB%99+%E5%89%8D%E7%AB%AF%E4%B8%89%E5%89%91%E5%AE%A2/vue%E9%A1%B9%E7%9B%AE/shiki-web/src/components/AnimeRecommendation.vue","webpack://shiki-web/../../../vue%E8%87%AA%E6%90%AD%E5%BB%BA%E7%BD%91%E7%AB%99+%E5%89%8D%E7%AB%AF%E4%B8%89%E5%89%91%E5%AE%A2/vue%E9%A1%B9%E7%9B%AE/shiki-web/src/components/AnimeRecommendation.vue","webpack://shiki-web/./src/components/AnimeRecommendation.vue","webpack://shiki-web/../../../../../../Mad%20Scientist/Desktop/Learn%20everthing/vue%E8%87%AA%E6%90%AD%E5%BB%BA%E7%BD%91%E7%AB%99+%E5%89%8D%E7%AB%AF%E4%B8%89%E5%89%91%E5%AE%A2/vue%E9%A1%B9%E7%9B%AE/shiki-web/src/components/DetailModal.vue","webpack://shiki-web/../../../vue%E8%87%AA%E6%90%AD%E5%BB%BA%E7%BD%91%E7%AB%99+%E5%89%8D%E7%AB%AF%E4%B8%89%E5%89%91%E5%AE%A2/vue%E9%A1%B9%E7%9B%AE/shiki-web/src/components/DetailModal.vue","webpack://shiki-web/../../../../../../Mad%20Scientist/Desktop/Learn%20everthing/vue%E8%87%AA%E6%90%AD%E5%BB%BA%E7%BD%91%E7%AB%99+%E5%89%8D%E7%AB%AF%E4%B8%89%E5%89%91%E5%AE%A2/vue%E9%A1%B9%E7%9B%AE/shiki-web/src/components/BannerSection.vue?773c","webpack://shiki-web/../../../../../../Mad%20Scientist/Desktop/Learn%20everthing/vue%E8%87%AA%E6%90%AD%E5%BB%BA%E7%BD%91%E7%AB%99+%E5%89%8D%E7%AB%AF%E4%B8%89%E5%89%91%E5%AE%A2/vue%E9%A1%B9%E7%9B%AE/shiki-web/src/components/BannerSection.vue","webpack://shiki-web/../../../vue%E8%87%AA%E6%90%AD%E5%BB%BA%E7%BD%91%E7%AB%99+%E5%89%8D%E7%AB%AF%E4%B8%89%E5%89%91%E5%AE%A2/vue%E9%A1%B9%E7%9B%AE/shiki-web/src/components/BannerSection.vue","webpack://shiki-web/./src/components/BannerSection.vue"],"sourcesContent":["import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"image-container\" }\nconst _hoisted_2 = [\"src\", \"alt\"]\n\nimport type { PropType } from \"vue\";\r\n\r\n// 定义文章数据类型\r\ninterface Article {\r\n  id: number;\r\n  title: string;\r\n  date: string;\r\n  content: string;\r\n  coverImg: string;\r\n}\r\n\r\n// 接收文章数据作为prop\r\n// eslint-disable-next-line no-undef\r\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'ArticleCard',\n  props: {\r\n  article: {\r\n    type: Object as PropType<Article>,\r\n    required: true,\r\n  },\r\n},\n  emits: [\"click\"],\n  setup(__props, { emit: __emit }) {\n\r\nconst props = __props;\r\n\r\n// 定义点击事件\r\n// eslint-disable-next-line no-undef\r\nconst emit = __emit;\r\n\r\nconst handleClick = () => {\r\n  emit(\"click\", props.article.id);\r\n};\r\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_a_card_meta = _resolveComponent(\"a-card-meta\")!\n  const _component_a_card = _resolveComponent(\"a-card\")!\n\n  return (_openBlock(), _createBlock(_component_a_card, {\n    hoverable: \"\",\n    class: \"article-card\",\n    onClick: handleClick\n  }, {\n    cover: _withCtx(() => [\n      _createElementVNode(\"div\", _hoisted_1, [\n        _createElementVNode(\"img\", {\n          src: __props.article.coverImg,\n          alt: __props.article.title,\n          class: \"article-image\",\n          loading: \"lazy\"\n        }, null, 8, _hoisted_2),\n        _cache[0] || (_cache[0] = _createElementVNode(\"div\", { class: \"image-overlay\" }, null, -1))\n      ])\n    ]),\n    default: _withCtx(() => [\n      _createVNode(_component_a_card_meta, {\n        title: __props.article.title,\n        description: __props.article.date,\n        class: \"card-meta\"\n      }, null, 8, [\"title\", \"description\"]),\n      _cache[1] || (_cache[1] = _createElementVNode(\"div\", { class: \"click-indicator\" }, [\n        _createElementVNode(\"span\", null, \"点击查看详情\")\n      ], -1))\n    ]),\n    _: 1\n  }))\n}\n}\n\n})","<!-- eslint-disable -->\r\n<template>\r\n  <a-card hoverable class=\"article-card\" @click=\"handleClick\">\r\n    <!-- 封面图区域 -->\r\n    <template #cover>\r\n      <div class=\"image-container\">\r\n        <img\r\n          :src=\"article.coverImg\"\r\n          :alt=\"article.title\"\r\n          class=\"article-image\"\r\n          loading=\"lazy\"\r\n        />\r\n        <!-- 悬停时的渐变遮罩 -->\r\n        <div class=\"image-overlay\"></div>\r\n      </div>\r\n    </template>\r\n\r\n    <!-- 卡片内容 -->\r\n    <a-card-meta\r\n      :title=\"article.title\"\r\n      :description=\"article.date\"\r\n      class=\"card-meta\"\r\n    />\r\n\r\n    <!-- 点击指示器 -->\r\n    <div class=\"click-indicator\">\r\n      <span>点击查看详情</span>\r\n    </div>\r\n  </a-card>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport type { PropType } from \"vue\";\r\n\r\n// 定义文章数据类型\r\ninterface Article {\r\n  id: number;\r\n  title: string;\r\n  date: string;\r\n  content: string;\r\n  coverImg: string;\r\n}\r\n\r\n// 接收文章数据作为prop\r\n// eslint-disable-next-line no-undef\r\nconst props = defineProps({\r\n  article: {\r\n    type: Object as PropType<Article>,\r\n    required: true,\r\n  },\r\n});\r\n\r\n// 定义点击事件\r\n// eslint-disable-next-line no-undef\r\nconst emit = defineEmits([\"click\"]);\r\n\r\nconst handleClick = () => {\r\n  emit(\"click\", props.article.id);\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* 卡片基础样式 */\r\n.article-card {\r\n  border-radius: var(--radius-lg);\r\n  overflow: hidden;\r\n  cursor: pointer;\r\n  transition: all var(--transition-normal);\r\n  background-color: var(--bg-color);\r\n  border: 1px solid var(--border-color);\r\n  box-shadow: var(--shadow-light);\r\n  position: relative;\r\n}\r\n\r\n/* 卡片悬停效果 */\r\n.article-card:hover {\r\n  transform: translateY(-6px);\r\n  box-shadow: var(--shadow-medium);\r\n  border-color: var(--primary-light);\r\n}\r\n\r\n/* 卡片点击效果 */\r\n.article-card:active {\r\n  transform: translateY(-3px);\r\n}\r\n\r\n/* 图片容器 - 设置固定宽高比 */\r\n.image-container {\r\n  position: relative;\r\n  width: 100%;\r\n  padding-bottom: 66.67%; /* 3:2的宽高比 */\r\n  overflow: hidden;\r\n  transition: all var(--transition-normal);\r\n}\r\n\r\n/* 悬停时图片缩放效果 */\r\n.article-card:hover .image-container {\r\n  transform: scale(1.02);\r\n}\r\n\r\n/* 文章图片样式 */\r\n.article-image {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover;\r\n  transition: transform var(--transition-slow);\r\n}\r\n\r\n/* 图片悬停缩放 */\r\n.article-card:hover .article-image {\r\n  transform: scale(1.05);\r\n}\r\n\r\n/* 图片悬停渐变遮罩 */\r\n.image-overlay {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background: linear-gradient(\r\n    135deg,\r\n    rgba(24, 144, 255, 0) 0%,\r\n    rgba(24, 144, 255, 0.1) 100%\r\n  );\r\n  opacity: 0;\r\n  transition: opacity var(--transition-normal);\r\n}\r\n\r\n.article-card:hover .image-overlay {\r\n  opacity: 1;\r\n}\r\n\r\n/* 卡片元数据样式 */\r\n.card-meta {\r\n  padding: var(--spacing-lg);\r\n  transition: all var(--transition-normal);\r\n}\r\n\r\n/* Ant Design 卡片标题样式覆盖 */\r\n:deep(.ant-card-meta-title) {\r\n  font-size: var(--font-size-lg);\r\n  font-weight: 600;\r\n  color: var(--text-primary);\r\n  margin-bottom: var(--spacing-xs);\r\n  display: -webkit-box;\r\n  -webkit-box-orient: vertical;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  transition: color var(--transition-fast);\r\n}\r\n\r\n:deep(.ant-card-meta-title:hover) {\r\n  color: var(--primary-color);\r\n}\r\n\r\n/* Ant Design 卡片描述样式覆盖 */\r\n:deep(.ant-card-meta-description) {\r\n  font-size: var(--font-size-sm);\r\n  color: var(--text-tertiary);\r\n  margin-bottom: 0;\r\n}\r\n\r\n/* 点击指示器 */\r\n.click-indicator {\r\n  position: absolute;\r\n  bottom: 10px;\r\n  right: 15px;\r\n  opacity: 0;\r\n  transform: translateY(10px);\r\n  transition: all var(--transition-normal);\r\n}\r\n\r\n.article-card:hover .click-indicator {\r\n  opacity: 1;\r\n  transform: translateY(0);\r\n}\r\n\r\n.click-indicator span {\r\n  display: inline-block;\r\n  background-color: rgba(255, 255, 255, 0.9);\r\n  color: var(--primary-color);\r\n  font-size: var(--font-size-xs);\r\n  padding: 4px 10px;\r\n  border-radius: var(--radius-full);\r\n  box-shadow: var(--shadow-light);\r\n}\r\n\r\n/* 加载动画 */\r\n@keyframes fadeInUp {\r\n  from {\r\n    opacity: 0;\r\n    transform: translateY(20px);\r\n  }\r\n  to {\r\n    opacity: 1;\r\n    transform: translateY(0);\r\n  }\r\n}\r\n\r\n/* 延迟动画效果，用于多个卡片时产生错开的动画效果 */\r\n.article-card {\r\n  animation: fadeInUp 0.5s ease forwards;\r\n}\r\n\r\n/* 响应式设计 */\r\n@media (max-width: 768px) {\r\n  .article-card {\r\n    border-radius: var(--radius-md);\r\n  }\r\n\r\n  .card-meta {\r\n    padding: var(--spacing-md);\r\n  }\r\n\r\n  :deep(.ant-card-meta-title) {\r\n    font-size: var(--font-size-base);\r\n  }\r\n}\r\n</style>\r\n","<!-- eslint-disable -->\r\n<template>\r\n  <a-card hoverable class=\"article-card\" @click=\"handleClick\">\r\n    <!-- 封面图区域 -->\r\n    <template #cover>\r\n      <div class=\"image-container\">\r\n        <img\r\n          :src=\"article.coverImg\"\r\n          :alt=\"article.title\"\r\n          class=\"article-image\"\r\n          loading=\"lazy\"\r\n        />\r\n        <!-- 悬停时的渐变遮罩 -->\r\n        <div class=\"image-overlay\"></div>\r\n      </div>\r\n    </template>\r\n\r\n    <!-- 卡片内容 -->\r\n    <a-card-meta\r\n      :title=\"article.title\"\r\n      :description=\"article.date\"\r\n      class=\"card-meta\"\r\n    />\r\n\r\n    <!-- 点击指示器 -->\r\n    <div class=\"click-indicator\">\r\n      <span>点击查看详情</span>\r\n    </div>\r\n  </a-card>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport type { PropType } from \"vue\";\r\n\r\n// 定义文章数据类型\r\ninterface Article {\r\n  id: number;\r\n  title: string;\r\n  date: string;\r\n  content: string;\r\n  coverImg: string;\r\n}\r\n\r\n// 接收文章数据作为prop\r\n// eslint-disable-next-line no-undef\r\nconst props = defineProps({\r\n  article: {\r\n    type: Object as PropType<Article>,\r\n    required: true,\r\n  },\r\n});\r\n\r\n// 定义点击事件\r\n// eslint-disable-next-line no-undef\r\nconst emit = defineEmits([\"click\"]);\r\n\r\nconst handleClick = () => {\r\n  emit(\"click\", props.article.id);\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* 卡片基础样式 */\r\n.article-card {\r\n  border-radius: var(--radius-lg);\r\n  overflow: hidden;\r\n  cursor: pointer;\r\n  transition: all var(--transition-normal);\r\n  background-color: var(--bg-color);\r\n  border: 1px solid var(--border-color);\r\n  box-shadow: var(--shadow-light);\r\n  position: relative;\r\n}\r\n\r\n/* 卡片悬停效果 */\r\n.article-card:hover {\r\n  transform: translateY(-6px);\r\n  box-shadow: var(--shadow-medium);\r\n  border-color: var(--primary-light);\r\n}\r\n\r\n/* 卡片点击效果 */\r\n.article-card:active {\r\n  transform: translateY(-3px);\r\n}\r\n\r\n/* 图片容器 - 设置固定宽高比 */\r\n.image-container {\r\n  position: relative;\r\n  width: 100%;\r\n  padding-bottom: 66.67%; /* 3:2的宽高比 */\r\n  overflow: hidden;\r\n  transition: all var(--transition-normal);\r\n}\r\n\r\n/* 悬停时图片缩放效果 */\r\n.article-card:hover .image-container {\r\n  transform: scale(1.02);\r\n}\r\n\r\n/* 文章图片样式 */\r\n.article-image {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover;\r\n  transition: transform var(--transition-slow);\r\n}\r\n\r\n/* 图片悬停缩放 */\r\n.article-card:hover .article-image {\r\n  transform: scale(1.05);\r\n}\r\n\r\n/* 图片悬停渐变遮罩 */\r\n.image-overlay {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background: linear-gradient(\r\n    135deg,\r\n    rgba(24, 144, 255, 0) 0%,\r\n    rgba(24, 144, 255, 0.1) 100%\r\n  );\r\n  opacity: 0;\r\n  transition: opacity var(--transition-normal);\r\n}\r\n\r\n.article-card:hover .image-overlay {\r\n  opacity: 1;\r\n}\r\n\r\n/* 卡片元数据样式 */\r\n.card-meta {\r\n  padding: var(--spacing-lg);\r\n  transition: all var(--transition-normal);\r\n}\r\n\r\n/* Ant Design 卡片标题样式覆盖 */\r\n:deep(.ant-card-meta-title) {\r\n  font-size: var(--font-size-lg);\r\n  font-weight: 600;\r\n  color: var(--text-primary);\r\n  margin-bottom: var(--spacing-xs);\r\n  display: -webkit-box;\r\n  -webkit-box-orient: vertical;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  transition: color var(--transition-fast);\r\n}\r\n\r\n:deep(.ant-card-meta-title:hover) {\r\n  color: var(--primary-color);\r\n}\r\n\r\n/* Ant Design 卡片描述样式覆盖 */\r\n:deep(.ant-card-meta-description) {\r\n  font-size: var(--font-size-sm);\r\n  color: var(--text-tertiary);\r\n  margin-bottom: 0;\r\n}\r\n\r\n/* 点击指示器 */\r\n.click-indicator {\r\n  position: absolute;\r\n  bottom: 10px;\r\n  right: 15px;\r\n  opacity: 0;\r\n  transform: translateY(10px);\r\n  transition: all var(--transition-normal);\r\n}\r\n\r\n.article-card:hover .click-indicator {\r\n  opacity: 1;\r\n  transform: translateY(0);\r\n}\r\n\r\n.click-indicator span {\r\n  display: inline-block;\r\n  background-color: rgba(255, 255, 255, 0.9);\r\n  color: var(--primary-color);\r\n  font-size: var(--font-size-xs);\r\n  padding: 4px 10px;\r\n  border-radius: var(--radius-full);\r\n  box-shadow: var(--shadow-light);\r\n}\r\n\r\n/* 加载动画 */\r\n@keyframes fadeInUp {\r\n  from {\r\n    opacity: 0;\r\n    transform: translateY(20px);\r\n  }\r\n  to {\r\n    opacity: 1;\r\n    transform: translateY(0);\r\n  }\r\n}\r\n\r\n/* 延迟动画效果，用于多个卡片时产生错开的动画效果 */\r\n.article-card {\r\n  animation: fadeInUp 0.5s ease forwards;\r\n}\r\n\r\n/* 响应式设计 */\r\n@media (max-width: 768px) {\r\n  .article-card {\r\n    border-radius: var(--radius-md);\r\n  }\r\n\r\n  .card-meta {\r\n    padding: var(--spacing-md);\r\n  }\r\n\r\n  :deep(.ant-card-meta-title) {\r\n    font-size: var(--font-size-base);\r\n  }\r\n}\r\n</style>\r\n","import script from \"./ArticleCard.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./ArticleCard.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./ArticleCard.vue?vue&type=style&index=0&id=6a1e9c7c&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-6a1e9c7c\"]])\n\nexport default __exports__","var map = {\n\t\"./MAN WITH A MISSION,milet - 絆ノ奇跡.mp3\": 61036,\n\t\"./milet & Aimer & 幾田りら - おもかげ (produced by Vaundy).mp3\": 50956,\n\t\"./milet - Again and Again.mp3\": 23362,\n\t\"./milet - Anytime Anywhere.mp3\": 86031,\n\t\"./milet - Bluer.mp3\": 46455,\n\t\"./milet - Come Here (Session1).mp3\": 10523,\n\t\"./milet - December.mp3\": 41102,\n\t\"./milet - Final Call.mp3\": 82859,\n\t\"./milet - Fine Line.mp3\": 56799,\n\t\"./milet - Flare.mp3\": 34325,\n\t\"./milet - Fly High.mp3\": 80310,\n\t\"./milet - Grab the air.mp3\": 88172,\n\t\"./milet - HALFWAY.mp3\": 17801,\n\t\"./milet - Hey Song.mp3\": 8598,\n\t\"./milet - Higher.mp3\": 17438,\n\t\"./milet - Hit the Lights.mp3\": 14270,\n\t\"./milet - I still.mp3\": 52326,\n\t\"./milet - Nobody Knows.mp3\": 13570,\n\t\"./milet - Noёl In July.mp3\": 91604,\n\t\"./milet - On the Edge.mp3\": 14236,\n\t\"./milet - One Reason.mp3\": 88163,\n\t\"./milet - One Touch.mp3\": 74196,\n\t\"./milet - Ordinary days.mp3\": 60710,\n\t\"./milet - Outsider.mp3\": 90730,\n\t\"./milet - Parachute.mp3\": 76344,\n\t\"./milet - Prover.mp3\": 53783,\n\t\"./milet - Rewrite.mp3\": 82573,\n\t\"./milet - SEVENTH HEAVEN.mp3\": 84111,\n\t\"./milet - Tell me.mp3\": 24344,\n\t\"./milet - The Love We've Made.mp3\": 3007,\n\t\"./milet - Time Is On Our Side.mp3\": 39966,\n\t\"./milet - Walkin' In My Lane.mp3\": 55841,\n\t\"./milet - Waterfall.mp3\": 37195,\n\t\"./milet - Who I Am.mp3\": 11990,\n\t\"./milet - You & I.mp3\": 83299,\n\t\"./milet - Your Light.mp3\": 33626,\n\t\"./milet - b r o k e n.mp3\": 22262,\n\t\"./milet - checkmate.mp3\": 66514,\n\t\"./milet - hanataba.mp3\": 24271,\n\t\"./milet - inside you - From THE FIRST TAKE.mp3\": 25979,\n\t\"./milet - inside you.mp3\": 2280,\n\t\"./milet - jam.mp3\": 37585,\n\t\"./milet - us - From THE FIRST TAKE.mp3\": 20434,\n\t\"./milet - us.mp3\": 33595,\n\t\"./milet,Aimer,幾田りら - おもかげ (produced by Vaundy).mp3\": 5444,\n\t\"./milet,MAN WITH A MISSION - コイコガレ.mp3\": 13946\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 3958;","import { defineComponent as _defineComponent } from 'vue'\nimport { unref as _unref, createVNode as _createVNode, createElementVNode as _createElementVNode, vShow as _vShow, normalizeClass as _normalizeClass, withDirectives as _withDirectives, Transition as _Transition, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"back-to-top-inner\" }\n\nimport { UpOutlined } from '@ant-design/icons-vue';\r\nimport { ref, onMounted, onUnmounted } from 'vue';\r\n\r\n// 控制按钮显示状态\r\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'BackToTop',\n  setup(__props) {\n\r\nconst show = ref(false);\r\n\r\n// 监听滚动事件\r\nconst handleScroll = () => {\r\n  // 滚动超过300px时显示按钮\r\n  show.value = window.scrollY > 300;\r\n};\r\n\r\n// 回到顶部方法\r\nconst backToTop = () => {\r\n  // 添加滚动动画\r\n  const scrollDuration = 500; // 滚动动画持续时间（毫秒）\r\n  const scrollStep = -window.scrollY / (scrollDuration / 15);\r\n  \r\n  const scrollInterval = setInterval(() => {\r\n    if (window.scrollY > 0) {\r\n      window.scrollBy(0, scrollStep);\r\n    } else {\r\n      clearInterval(scrollInterval);\r\n    }\r\n  }, 15);\r\n};\r\n\r\n// 挂载时添加滚动监听\r\nonMounted(() => {\r\n  window.addEventListener('scroll', handleScroll);\r\n});\r\n\r\n// 卸载时移除滚动监听\r\nonUnmounted(() => {\r\n  window.removeEventListener('scroll', handleScroll);\r\n});\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createBlock(_Transition, { name: \"fade\" }, {\n    default: _withCtx(() => [\n      _withDirectives(_createElementVNode(\"button\", {\n        class: _normalizeClass([\"back-to-top\", { 'is-visible': show.value }]),\n        onClick: backToTop,\n        \"aria-label\": \"回到顶部\"\n      }, [\n        _createElementVNode(\"div\", _hoisted_1, [\n          _createVNode(_unref(UpOutlined), { class: \"back-to-top-icon\" })\n        ]),\n        _cache[0] || (_cache[0] = _createElementVNode(\"span\", { class: \"back-to-top-text\" }, \"回到顶部\", -1))\n      ], 2), [\n        [_vShow, show.value]\n      ])\n    ]),\n    _: 1\n  }))\n}\n}\n\n})","<template>\r\n  <transition name=\"fade\">\r\n    <button\r\n      v-show=\"show\"\r\n      class=\"back-to-top\"\r\n      :class=\"{ 'is-visible': show }\"\r\n      @click=\"backToTop\"\r\n      aria-label=\"回到顶部\"\r\n    >\r\n      <div class=\"back-to-top-inner\">\r\n        <UpOutlined class=\"back-to-top-icon\" />\r\n      </div>\r\n      <span class=\"back-to-top-text\">回到顶部</span>\r\n    </button>\r\n  </transition>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { UpOutlined } from '@ant-design/icons-vue';\r\nimport { ref, onMounted, onUnmounted } from 'vue';\r\n\r\n// 控制按钮显示状态\r\nconst show = ref(false);\r\n\r\n// 监听滚动事件\r\nconst handleScroll = () => {\r\n  // 滚动超过300px时显示按钮\r\n  show.value = window.scrollY > 300;\r\n};\r\n\r\n// 回到顶部方法\r\nconst backToTop = () => {\r\n  // 添加滚动动画\r\n  const scrollDuration = 500; // 滚动动画持续时间（毫秒）\r\n  const scrollStep = -window.scrollY / (scrollDuration / 15);\r\n  \r\n  const scrollInterval = setInterval(() => {\r\n    if (window.scrollY > 0) {\r\n      window.scrollBy(0, scrollStep);\r\n    } else {\r\n      clearInterval(scrollInterval);\r\n    }\r\n  }, 15);\r\n};\r\n\r\n// 挂载时添加滚动监听\r\nonMounted(() => {\r\n  window.addEventListener('scroll', handleScroll);\r\n});\r\n\r\n// 卸载时移除滚动监听\r\nonUnmounted(() => {\r\n  window.removeEventListener('scroll', handleScroll);\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n/* 淡入淡出动画 */\r\n.fade-enter-active,\r\n.fade-leave-active {\r\n  transition: opacity 0.3s;\r\n}\r\n\r\n.fade-enter-from,\r\n.fade-leave-to {\r\n  opacity: 0;\r\n}\r\n\r\n/* 回到顶部按钮容器 */\r\n.back-to-top {\r\n  position: fixed;\r\n  bottom: 40px;\r\n  right: 40px;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 16px;\r\n  cursor: pointer;\r\n  z-index: 100;\r\n  transform: translateY(20px);\r\n  opacity: 0;\r\n  transition: all 0.3s;\r\n  border: none;\r\n  background: none;\r\n}\r\n\r\n/* 按钮可见时的样式 */\r\n.back-to-top.is-visible {\r\n  transform: translateY(0);\r\n  opacity: 1;\r\n}\r\n\r\n/* 按钮内部圆形容器 */\r\n.back-to-top-inner {\r\n  width: 56px;\r\n  height: 56px;\r\n  background-color: #1890ff;\r\n  border-radius: 50%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  position: relative;\r\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\r\n  transition: all 0.3s;\r\n  overflow: hidden;\r\n}\r\n\r\n/* 按钮悬停效果 */\r\n.back-to-top:hover .back-to-top-inner {\r\n  background-color: #40a9ff;\r\n  transform: translateY(-2px);\r\n  box-shadow: 0 6px 16px rgba(0, 0, 0, 0.2);\r\n}\r\n\r\n/* 按钮点击效果 */\r\n.back-to-top:active .back-to-top-inner {\r\n  transform: translateY(0);\r\n}\r\n\r\n/* 渐变背景效果 */\r\n.back-to-top-inner::before {\r\n  content: '';\r\n  position: absolute;\r\n  top: -50%;\r\n  left: -50%;\r\n  width: 200%;\r\n  height: 200%;\r\n  background: linear-gradient(\r\n    45deg,\r\n    transparent 0%,\r\n    rgba(255, 255, 255, 0.2) 50%,\r\n    transparent 100%\r\n  );\r\n  transform: rotate(-45deg);\r\n  transition: all 0.6s;\r\n}\r\n\r\n.back-to-top:hover .back-to-top-inner::before {\r\n  animation: shimmer 1.5s infinite;\r\n}\r\n\r\n/* 闪烁动画 */\r\n@keyframes shimmer {\r\n  0% {\r\n    transform: translateX(-100%) rotate(-45deg);\r\n  }\r\n  100% {\r\n    transform: translateX(100%) rotate(-45deg);\r\n  }\r\n}\r\n\r\n/* 图标样式 */\r\n.back-to-top-icon {\r\n  font-size: 20px;\r\n  color: white;\r\n  animation: pulse 2s infinite;\r\n}\r\n\r\n/* 脉冲动画 */\r\n@keyframes pulse {\r\n  0%, 100% {\r\n    transform: scale(1);\r\n  }\r\n  50% {\r\n    transform: scale(1.1);\r\n  }\r\n}\r\n\r\n/* 文字样式 */\r\n.back-to-top-text {\r\n  position: absolute;\r\n  right: 65px;\r\n  background-color: white;\r\n  color: #333;\r\n  font-size: 14px;\r\n  padding: 8px 16px;\r\n  border-radius: 20px;\r\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\r\n  white-space: nowrap;\r\n  opacity: 0;\r\n  transform: translateX(10px);\r\n  transition: all 0.3s;\r\n  pointer-events: none;\r\n}\r\n\r\n/* 悬停时显示文字 */\r\n.back-to-top:hover .back-to-top-text {\r\n  opacity: 1;\r\n  transform: translateX(0);\r\n}\r\n\r\n/* 响应式设计 */\r\n@media (max-width: 768px) {\r\n  .back-to-top {\r\n    bottom: 30px;\r\n    right: 30px;\r\n  }\r\n  \r\n  .back-to-top-inner {\r\n    width: 48px;\r\n    height: 48px;\r\n  }\r\n  \r\n  .back-to-top-icon {\r\n    font-size: 18px;\r\n  }\r\n  \r\n  .back-to-top-text {\r\n    display: none;\r\n  }\r\n}\r\n</style>","<template>\r\n  <transition name=\"fade\">\r\n    <button\r\n      v-show=\"show\"\r\n      class=\"back-to-top\"\r\n      :class=\"{ 'is-visible': show }\"\r\n      @click=\"backToTop\"\r\n      aria-label=\"回到顶部\"\r\n    >\r\n      <div class=\"back-to-top-inner\">\r\n        <UpOutlined class=\"back-to-top-icon\" />\r\n      </div>\r\n      <span class=\"back-to-top-text\">回到顶部</span>\r\n    </button>\r\n  </transition>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { UpOutlined } from '@ant-design/icons-vue';\r\nimport { ref, onMounted, onUnmounted } from 'vue';\r\n\r\n// 控制按钮显示状态\r\nconst show = ref(false);\r\n\r\n// 监听滚动事件\r\nconst handleScroll = () => {\r\n  // 滚动超过300px时显示按钮\r\n  show.value = window.scrollY > 300;\r\n};\r\n\r\n// 回到顶部方法\r\nconst backToTop = () => {\r\n  // 添加滚动动画\r\n  const scrollDuration = 500; // 滚动动画持续时间（毫秒）\r\n  const scrollStep = -window.scrollY / (scrollDuration / 15);\r\n  \r\n  const scrollInterval = setInterval(() => {\r\n    if (window.scrollY > 0) {\r\n      window.scrollBy(0, scrollStep);\r\n    } else {\r\n      clearInterval(scrollInterval);\r\n    }\r\n  }, 15);\r\n};\r\n\r\n// 挂载时添加滚动监听\r\nonMounted(() => {\r\n  window.addEventListener('scroll', handleScroll);\r\n});\r\n\r\n// 卸载时移除滚动监听\r\nonUnmounted(() => {\r\n  window.removeEventListener('scroll', handleScroll);\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n/* 淡入淡出动画 */\r\n.fade-enter-active,\r\n.fade-leave-active {\r\n  transition: opacity 0.3s;\r\n}\r\n\r\n.fade-enter-from,\r\n.fade-leave-to {\r\n  opacity: 0;\r\n}\r\n\r\n/* 回到顶部按钮容器 */\r\n.back-to-top {\r\n  position: fixed;\r\n  bottom: 40px;\r\n  right: 40px;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 16px;\r\n  cursor: pointer;\r\n  z-index: 100;\r\n  transform: translateY(20px);\r\n  opacity: 0;\r\n  transition: all 0.3s;\r\n  border: none;\r\n  background: none;\r\n}\r\n\r\n/* 按钮可见时的样式 */\r\n.back-to-top.is-visible {\r\n  transform: translateY(0);\r\n  opacity: 1;\r\n}\r\n\r\n/* 按钮内部圆形容器 */\r\n.back-to-top-inner {\r\n  width: 56px;\r\n  height: 56px;\r\n  background-color: #1890ff;\r\n  border-radius: 50%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  position: relative;\r\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\r\n  transition: all 0.3s;\r\n  overflow: hidden;\r\n}\r\n\r\n/* 按钮悬停效果 */\r\n.back-to-top:hover .back-to-top-inner {\r\n  background-color: #40a9ff;\r\n  transform: translateY(-2px);\r\n  box-shadow: 0 6px 16px rgba(0, 0, 0, 0.2);\r\n}\r\n\r\n/* 按钮点击效果 */\r\n.back-to-top:active .back-to-top-inner {\r\n  transform: translateY(0);\r\n}\r\n\r\n/* 渐变背景效果 */\r\n.back-to-top-inner::before {\r\n  content: '';\r\n  position: absolute;\r\n  top: -50%;\r\n  left: -50%;\r\n  width: 200%;\r\n  height: 200%;\r\n  background: linear-gradient(\r\n    45deg,\r\n    transparent 0%,\r\n    rgba(255, 255, 255, 0.2) 50%,\r\n    transparent 100%\r\n  );\r\n  transform: rotate(-45deg);\r\n  transition: all 0.6s;\r\n}\r\n\r\n.back-to-top:hover .back-to-top-inner::before {\r\n  animation: shimmer 1.5s infinite;\r\n}\r\n\r\n/* 闪烁动画 */\r\n@keyframes shimmer {\r\n  0% {\r\n    transform: translateX(-100%) rotate(-45deg);\r\n  }\r\n  100% {\r\n    transform: translateX(100%) rotate(-45deg);\r\n  }\r\n}\r\n\r\n/* 图标样式 */\r\n.back-to-top-icon {\r\n  font-size: 20px;\r\n  color: white;\r\n  animation: pulse 2s infinite;\r\n}\r\n\r\n/* 脉冲动画 */\r\n@keyframes pulse {\r\n  0%, 100% {\r\n    transform: scale(1);\r\n  }\r\n  50% {\r\n    transform: scale(1.1);\r\n  }\r\n}\r\n\r\n/* 文字样式 */\r\n.back-to-top-text {\r\n  position: absolute;\r\n  right: 65px;\r\n  background-color: white;\r\n  color: #333;\r\n  font-size: 14px;\r\n  padding: 8px 16px;\r\n  border-radius: 20px;\r\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\r\n  white-space: nowrap;\r\n  opacity: 0;\r\n  transform: translateX(10px);\r\n  transition: all 0.3s;\r\n  pointer-events: none;\r\n}\r\n\r\n/* 悬停时显示文字 */\r\n.back-to-top:hover .back-to-top-text {\r\n  opacity: 1;\r\n  transform: translateX(0);\r\n}\r\n\r\n/* 响应式设计 */\r\n@media (max-width: 768px) {\r\n  .back-to-top {\r\n    bottom: 30px;\r\n    right: 30px;\r\n  }\r\n  \r\n  .back-to-top-inner {\r\n    width: 48px;\r\n    height: 48px;\r\n  }\r\n  \r\n  .back-to-top-icon {\r\n    font-size: 18px;\r\n  }\r\n  \r\n  .back-to-top-text {\r\n    display: none;\r\n  }\r\n}\r\n</style>","import script from \"./BackToTop.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./BackToTop.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./BackToTop.vue?vue&type=style&index=0&id=01289707&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-01289707\"]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\"\n\nconst _hoisted_1 = { class: \"data-display\" }\nconst _hoisted_2 = { class: \"data-container\" }\nconst _hoisted_3 = { class: \"data-title\" }\nconst _hoisted_4 = [\"href\"]\nconst _hoisted_5 = { class: \"data-date\" }\n\nimport { ref, onMounted } from 'vue';\r\n\r\n// 定义数据类型\r\ninterface DataItem {\r\n  '标题': string;\r\n  '链接': string;\r\n  '日期': string;\r\n}\r\n\r\n// 数据状态\r\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'DataDisplay',\n  setup(__props) {\n\r\nconst dataItems = ref<DataItem[]>([]);\r\n\r\n// 加载数据\r\nonMounted(async () => {\r\n  try {\r\n    // 从GitHub仓库获取JSON数据\r\n    const response = await fetch('https://raw.githubusercontent.com/shiki-desu/shiki-web.github.io/main/data/notices.json');\r\n    if (!response.ok) {\r\n      throw new Error('网络响应异常');\r\n    }\r\n    dataItems.value = await response.json();\r\n  } catch (error) {\r\n    console.error('加载数据失败:', error);\r\n    // 可以在这里添加备用方案，比如使用本地数据\r\n  }\r\n});\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _cache[0] || (_cache[0] = _createElementVNode(\"h2\", { class: \"section-title\" }, \"📋 蜗师通知实时更新\", -1)),\n    _createElementVNode(\"div\", _hoisted_2, [\n      (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(dataItems.value, (item, index) => {\n        return (_openBlock(), _createElementBlock(\"div\", {\n          key: index,\n          class: \"data-item\"\n        }, [\n          _createElementVNode(\"div\", _hoisted_3, [\n            _createElementVNode(\"a\", {\n              href: item['链接'],\n              target: \"_blank\",\n              rel: \"noopener noreferrer\"\n            }, _toDisplayString(item['标题']), 9, _hoisted_4)\n          ]),\n          _createElementVNode(\"div\", _hoisted_5, _toDisplayString(item['日期']), 1)\n        ]))\n      }), 128))\n    ])\n  ]))\n}\n}\n\n})","<template>\r\n  <div class=\"data-display\">\r\n    <h2 class=\"section-title\">📋 蜗师通知实时更新</h2>\r\n    <div class=\"data-container\">\r\n      <div v-for=\"(item, index) in dataItems\" :key=\"index\" class=\"data-item\">\r\n        <div class=\"data-title\">\r\n          <a :href=\"item['链接']\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n            {{ item['标题'] }}\r\n          </a>\r\n        </div>\r\n        <div class=\"data-date\">{{ item['日期'] }}</div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { ref, onMounted } from 'vue';\r\n\r\n// 定义数据类型\r\ninterface DataItem {\r\n  '标题': string;\r\n  '链接': string;\r\n  '日期': string;\r\n}\r\n\r\n// 数据状态\r\nconst dataItems = ref<DataItem[]>([]);\r\n\r\n// 加载数据\r\nonMounted(async () => {\r\n  try {\r\n    // 从GitHub仓库获取JSON数据\r\n    const response = await fetch('https://raw.githubusercontent.com/shiki-desu/shiki-web.github.io/main/data/notices.json');\r\n    if (!response.ok) {\r\n      throw new Error('网络响应异常');\r\n    }\r\n    dataItems.value = await response.json();\r\n  } catch (error) {\r\n    console.error('加载数据失败:', error);\r\n    // 可以在这里添加备用方案，比如使用本地数据\r\n  }\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n.data-display {\r\n  background-color: var(--bg-color);\r\n  border-radius: var(--radius-lg);\r\n  padding: var(--spacing-xl);\r\n  box-shadow: var(--shadow-light);\r\n  margin-bottom: var(--spacing-xl);\r\n}\r\n\r\n.section-title {\r\n  font-size: var(--font-size-xl);\r\n  color: var(--text-primary);\r\n  margin-bottom: var(--spacing-xl);\r\n  text-align: center;\r\n}\r\n\r\n.data-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: var(--spacing-md);\r\n}\r\n\r\n.data-item {\r\n  background-color: var(--bg-secondary);\r\n  border-radius: var(--radius-md);\r\n  padding: var(--spacing-lg);\r\n  transition: all var(--transition-normal);\r\n  border-left: 4px solid var(--primary-color);\r\n}\r\n\r\n.data-item:hover {\r\n  transform: translateX(5px);\r\n  box-shadow: var(--shadow-medium);\r\n  border-left-color: var(--primary-light);\r\n}\r\n\r\n.data-title {\r\n  font-size: var(--font-size-base);\r\n  font-weight: 600;\r\n  margin-bottom: var(--spacing-xs);\r\n}\r\n\r\n.data-title a {\r\n  color: var(--text-primary);\r\n  text-decoration: none;\r\n  transition: color var(--transition-fast);\r\n}\r\n\r\n.data-title a:hover {\r\n  color: var(--primary-color);\r\n  text-decoration: underline;\r\n}\r\n\r\n.data-date {\r\n  font-size: var(--font-size-sm);\r\n  color: var(--text-tertiary);\r\n}\r\n\r\n/* 响应式设计 */\r\n@media (max-width: 768px) {\r\n  .data-display {\r\n    padding: var(--spacing-lg);\r\n  }\r\n  \r\n  .section-title {\r\n    font-size: var(--font-size-lg);\r\n  }\r\n  \r\n  .data-item {\r\n    padding: var(--spacing-md);\r\n  }\r\n}\r\n</style>","<template>\r\n  <div class=\"data-display\">\r\n    <h2 class=\"section-title\">📋 蜗师通知实时更新</h2>\r\n    <div class=\"data-container\">\r\n      <div v-for=\"(item, index) in dataItems\" :key=\"index\" class=\"data-item\">\r\n        <div class=\"data-title\">\r\n          <a :href=\"item['链接']\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n            {{ item['标题'] }}\r\n          </a>\r\n        </div>\r\n        <div class=\"data-date\">{{ item['日期'] }}</div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { ref, onMounted } from 'vue';\r\n\r\n// 定义数据类型\r\ninterface DataItem {\r\n  '标题': string;\r\n  '链接': string;\r\n  '日期': string;\r\n}\r\n\r\n// 数据状态\r\nconst dataItems = ref<DataItem[]>([]);\r\n\r\n// 加载数据\r\nonMounted(async () => {\r\n  try {\r\n    // 从GitHub仓库获取JSON数据\r\n    const response = await fetch('https://raw.githubusercontent.com/shiki-desu/shiki-web.github.io/main/data/notices.json');\r\n    if (!response.ok) {\r\n      throw new Error('网络响应异常');\r\n    }\r\n    dataItems.value = await response.json();\r\n  } catch (error) {\r\n    console.error('加载数据失败:', error);\r\n    // 可以在这里添加备用方案，比如使用本地数据\r\n  }\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n.data-display {\r\n  background-color: var(--bg-color);\r\n  border-radius: var(--radius-lg);\r\n  padding: var(--spacing-xl);\r\n  box-shadow: var(--shadow-light);\r\n  margin-bottom: var(--spacing-xl);\r\n}\r\n\r\n.section-title {\r\n  font-size: var(--font-size-xl);\r\n  color: var(--text-primary);\r\n  margin-bottom: var(--spacing-xl);\r\n  text-align: center;\r\n}\r\n\r\n.data-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: var(--spacing-md);\r\n}\r\n\r\n.data-item {\r\n  background-color: var(--bg-secondary);\r\n  border-radius: var(--radius-md);\r\n  padding: var(--spacing-lg);\r\n  transition: all var(--transition-normal);\r\n  border-left: 4px solid var(--primary-color);\r\n}\r\n\r\n.data-item:hover {\r\n  transform: translateX(5px);\r\n  box-shadow: var(--shadow-medium);\r\n  border-left-color: var(--primary-light);\r\n}\r\n\r\n.data-title {\r\n  font-size: var(--font-size-base);\r\n  font-weight: 600;\r\n  margin-bottom: var(--spacing-xs);\r\n}\r\n\r\n.data-title a {\r\n  color: var(--text-primary);\r\n  text-decoration: none;\r\n  transition: color var(--transition-fast);\r\n}\r\n\r\n.data-title a:hover {\r\n  color: var(--primary-color);\r\n  text-decoration: underline;\r\n}\r\n\r\n.data-date {\r\n  font-size: var(--font-size-sm);\r\n  color: var(--text-tertiary);\r\n}\r\n\r\n/* 响应式设计 */\r\n@media (max-width: 768px) {\r\n  .data-display {\r\n    padding: var(--spacing-lg);\r\n  }\r\n  \r\n  .section-title {\r\n    font-size: var(--font-size-lg);\r\n  }\r\n  \r\n  .data-item {\r\n    padding: var(--spacing-md);\r\n  }\r\n}\r\n</style>","import script from \"./DataDisplay.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./DataDisplay.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./DataDisplay.vue?vue&type=style&index=0&id=c7adfd6a&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-c7adfd6a\"]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, unref as _unref, createVNode as _createVNode, toDisplayString as _toDisplayString, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeClass as _normalizeClass } from \"vue\"\n\nconst _hoisted_1 = { class: \"anime-recommendation\" }\nconst _hoisted_2 = { class: \"current-recommendation\" }\nconst _hoisted_3 = { class: \"recommendation-content\" }\nconst _hoisted_4 = { class: \"anime-image-container\" }\nconst _hoisted_5 = [\"src\", \"alt\"]\nconst _hoisted_6 = { class: \"anime-info\" }\nconst _hoisted_7 = { class: \"anime-title\" }\nconst _hoisted_8 = { class: \"anime-description\" }\nconst _hoisted_9 = { class: \"recommendation-reason\" }\nconst _hoisted_10 = { class: \"reason-text\" }\nconst _hoisted_11 = { class: \"indicator-container\" }\nconst _hoisted_12 = [\"onClick\"]\n\nimport { ref, computed, onMounted } from 'vue';\nimport { LeftOutlined, RightOutlined } from '@ant-design/icons-vue';\n\n// 定义动画推荐数据类型\ninterface AnimeRecommendation {\n  id: number;\n  title: string;\n  description: string;\n  imageUrl: string;\n  originalImageUrl: string;\n  reason: string;\n}\n\n// 动画推荐数据 - 初始imageUrl为空，originalImageUrl存储实际路径\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'AnimeRecommendation',\n  setup(__props) {\n\nconst animeList = ref<AnimeRecommendation[]>([\n  {\n    id: 1,\n    title: '死亡笔记',\n    description: '一部关于天才与死亡的心理战动画',\n    imageUrl: '',\n    originalImageUrl: '../assets/images/animation/death note。jpg.jpg',\n    reason: '智斗启蒙作了属于是，难以超越的经典'\n  },\n  {\n    id: 2,\n    title: 'Fate/Zero',\n    description: '圣杯战争的史诗篇章',\n    imageUrl: '',\n    originalImageUrl: '../assets/images/animation/fz.jpg',\n    reason: '同样的，开启我月丑生涯的启蒙作，也是fate系列最喜欢的一作，切嗣也是我觉得最有魅力的男主角'\n  },\n  {\n    id: 3,\n    title: '游戏人生',\n    description: '空白永不败北',\n    imageUrl: '',\n    originalImageUrl: '../assets/images/animation/no game no life.jpg',\n    reason: '智斗和有趣的神作，剧场版更是传说。但你说的对，我第二季呢'\n  },\n  {\n    id: 4,\n    title: 'OVERLORD',\n    description: '骨傲天的异世界冒险',\n    imageUrl: '',\n    originalImageUrl: '../assets/images/animation/overlord.jpg',\n    reason: '世界观和人设十分有趣，牢骨和旧友的关系是最吸引人的'\n  },\n  {\n    id: 5,\n    title: '魔法少女小圆',\n    description: '爱的战士虚渊玄的代表作',\n    imageUrl: '',\n    originalImageUrl: '../assets/images/animation/圆神.jpg',\n    reason: '军火女王和圆神是这部番吸引我的G点'\n  },\n  {\n    id: 6,\n    title: '无职转生',\n    description: '关于成长与救赎的异世界物语',\n    imageUrl: '',\n    originalImageUrl: '../assets/images/animation/无职转生.jpg',\n    reason: '没什么好说的，异世界的神'\n  },\n  {\n    id: 7,\n    title: '想要成为影之实力者',\n    description: '迪化最严重的一集',\n    imageUrl: '',\n    originalImageUrl: '../assets/images/animation/暗影大人.jpg',\n    reason: '主打一个黄金厕纸有趣就完了'\n  },\n  {\n    id: 8,\n    title: '为美好的世界献上祝福！',\n    description: '轻松搞笑的异世界喜剧',\n    imageUrl: '',\n    originalImageUrl: '../assets/images/animation/素晴.jpg',\n    reason: '这类型的神，什么时候看到和真能不笑呢'\n  },\n  {\n    id: 9,\n    title: '某科学的超电磁炮',\n    description: '炮姐的传奇故事',\n    imageUrl: '',\n    originalImageUrl: '../assets/images/animation/超炮.jpg',\n    reason: '学园都市发生的一切都深刻吸引着我，那还说啥了，黑子是我的'\n  },\n  {\n    id: 10,\n    title: '反叛的鲁路修',\n    description: '关于权谋与复仇的经典之作',\n    imageUrl: '',\n    originalImageUrl: '../assets/images/animation/鲁鲁修.jpg',\n    reason: '你说的对，这部在智斗上略显儿科，但鲁鲁修最后我是真的掉小珍珠了好不好'\n  }\n]);\n\n// 当前显示的动画索引\nconst currentIndex = ref(0);\n\n// 计算当前显示的动画\nconst currentAnime = computed(() => {\n  return animeList.value[currentIndex.value];\n});\n\n// 加载动画图片\nconst loadAnimeImage = (index: number) => {\n  if (!animeList.value[index].imageUrl && animeList.value[index].originalImageUrl) {\n    animeList.value[index].imageUrl = require(animeList.value[index].originalImageUrl);\n  }\n};\n\n// 跳转到指定动画\nconst goToAnime = (index: number) => {\n  currentIndex.value = index;\n  loadAnimeImage(index);\n  \n  // 预加载下一张图片，提升用户体验\n  const nextIndex = (index + 1) % animeList.value.length;\n  setTimeout(() => {\n    loadAnimeImage(nextIndex);\n  }, 500);\n};\n\n// 切换到上一个动画\nconst prevAnime = () => {\n  currentIndex.value = (currentIndex.value - 1 + animeList.value.length) % animeList.value.length;\n  loadAnimeImage(currentIndex.value);\n};\n\n// 切换到下一个动画\nconst nextAnime = () => {\n  currentIndex.value = (currentIndex.value + 1) % animeList.value.length;\n  loadAnimeImage(currentIndex.value);\n};\n\n// 组件挂载时加载第一张图片\nonMounted(() => {\n  loadAnimeImage(currentIndex.value);\n});\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _cache[1] || (_cache[1] = _createElementVNode(\"h2\", {\n      class: \"section-title\",\n      \"data-aos\": \"fade-up\"\n    }, \"🎬 动画推荐\", -1)),\n    _createElementVNode(\"div\", _hoisted_2, [\n      _createElementVNode(\"button\", {\n        class: \"nav-button left-button\",\n        onClick: prevAnime,\n        \"aria-label\": \"上一个推荐\"\n      }, [\n        _createVNode(_unref(LeftOutlined))\n      ]),\n      _createElementVNode(\"div\", _hoisted_3, [\n        _createElementVNode(\"div\", _hoisted_4, [\n          _createElementVNode(\"img\", {\n            src: currentAnime.value.imageUrl,\n            alt: currentAnime.value.title,\n            class: \"anime-image\",\n            loading: \"lazy\"\n          }, null, 8, _hoisted_5)\n        ]),\n        _createElementVNode(\"div\", _hoisted_6, [\n          _createElementVNode(\"h3\", _hoisted_7, _toDisplayString(currentAnime.value.title), 1),\n          _createElementVNode(\"p\", _hoisted_8, _toDisplayString(currentAnime.value.description), 1)\n        ])\n      ]),\n      _createElementVNode(\"button\", {\n        class: \"nav-button right-button\",\n        onClick: nextAnime,\n        \"aria-label\": \"下一个推荐\"\n      }, [\n        _createVNode(_unref(RightOutlined))\n      ])\n    ]),\n    _createElementVNode(\"div\", _hoisted_9, [\n      _cache[0] || (_cache[0] = _createElementVNode(\"h4\", { class: \"reason-title\" }, \"推荐理由\", -1)),\n      _createElementVNode(\"p\", _hoisted_10, _toDisplayString(currentAnime.value.reason), 1)\n    ]),\n    _createElementVNode(\"div\", _hoisted_11, [\n      (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(animeList.value, (anime, index) => {\n        return (_openBlock(), _createElementBlock(\"div\", {\n          key: anime.id,\n          class: _normalizeClass([\"indicator\", { 'active': currentIndex.value === index }]),\n          onClick: ($event: any) => (goToAnime(index))\n        }, null, 10, _hoisted_12))\n      }), 128))\n    ])\n  ]))\n}\n}\n\n})","<template>\n  <div class=\"anime-recommendation\">\n    <h2 class=\"section-title\" data-aos=\"fade-up\">🎬 动画推荐</h2>\n    \n    <!-- 当前推荐显示区域 -->\n    <div class=\"current-recommendation\">\n      <!-- 切换按钮 -->\n      <button \n        class=\"nav-button left-button\" \n        @click=\"prevAnime\" \n        aria-label=\"上一个推荐\"\n      >\n        <LeftOutlined />\n      </button>\n      \n      <!-- 推荐内容 -->\n      <div class=\"recommendation-content\">\n        <div class=\"anime-image-container\">\n          <img \n            :src=\"currentAnime.imageUrl\" \n            :alt=\"currentAnime.title\" \n            class=\"anime-image\" \n            loading=\"lazy\"\n          />\n        </div>\n        <div class=\"anime-info\">\n          <h3 class=\"anime-title\">{{ currentAnime.title }}</h3>\n          <p class=\"anime-description\">{{ currentAnime.description }}</p>\n        </div>\n      </div>\n      \n      <button \n        class=\"nav-button right-button\" \n        @click=\"nextAnime\" \n        aria-label=\"下一个推荐\"\n      >\n        <RightOutlined />\n      </button>\n    </div>\n    \n    <!-- 推荐理由区域 -->\n    <div class=\"recommendation-reason\">\n      <h4 class=\"reason-title\">推荐理由</h4>\n      <p class=\"reason-text\">{{ currentAnime.reason }}</p>\n    </div>\n    \n    <!-- 指示器 -->\n    <div class=\"indicator-container\">\n      <div \n        v-for=\"(anime, index) in animeList\" \n        :key=\"anime.id\"\n        class=\"indicator\"\n        :class=\"{ 'active': currentIndex === index }\"\n        @click=\"goToAnime(index)\"\n      ></div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, computed, onMounted } from 'vue';\nimport { LeftOutlined, RightOutlined } from '@ant-design/icons-vue';\n\n// 定义动画推荐数据类型\ninterface AnimeRecommendation {\n  id: number;\n  title: string;\n  description: string;\n  imageUrl: string;\n  originalImageUrl: string;\n  reason: string;\n}\n\n// 动画推荐数据 - 初始imageUrl为空，originalImageUrl存储实际路径\nconst animeList = ref<AnimeRecommendation[]>([\n  {\n    id: 1,\n    title: '死亡笔记',\n    description: '一部关于天才与死亡的心理战动画',\n    imageUrl: '',\n    originalImageUrl: '../assets/images/animation/death note。jpg.jpg',\n    reason: '智斗启蒙作了属于是，难以超越的经典'\n  },\n  {\n    id: 2,\n    title: 'Fate/Zero',\n    description: '圣杯战争的史诗篇章',\n    imageUrl: '',\n    originalImageUrl: '../assets/images/animation/fz.jpg',\n    reason: '同样的，开启我月丑生涯的启蒙作，也是fate系列最喜欢的一作，切嗣也是我觉得最有魅力的男主角'\n  },\n  {\n    id: 3,\n    title: '游戏人生',\n    description: '空白永不败北',\n    imageUrl: '',\n    originalImageUrl: '../assets/images/animation/no game no life.jpg',\n    reason: '智斗和有趣的神作，剧场版更是传说。但你说的对，我第二季呢'\n  },\n  {\n    id: 4,\n    title: 'OVERLORD',\n    description: '骨傲天的异世界冒险',\n    imageUrl: '',\n    originalImageUrl: '../assets/images/animation/overlord.jpg',\n    reason: '世界观和人设十分有趣，牢骨和旧友的关系是最吸引人的'\n  },\n  {\n    id: 5,\n    title: '魔法少女小圆',\n    description: '爱的战士虚渊玄的代表作',\n    imageUrl: '',\n    originalImageUrl: '../assets/images/animation/圆神.jpg',\n    reason: '军火女王和圆神是这部番吸引我的G点'\n  },\n  {\n    id: 6,\n    title: '无职转生',\n    description: '关于成长与救赎的异世界物语',\n    imageUrl: '',\n    originalImageUrl: '../assets/images/animation/无职转生.jpg',\n    reason: '没什么好说的，异世界的神'\n  },\n  {\n    id: 7,\n    title: '想要成为影之实力者',\n    description: '迪化最严重的一集',\n    imageUrl: '',\n    originalImageUrl: '../assets/images/animation/暗影大人.jpg',\n    reason: '主打一个黄金厕纸有趣就完了'\n  },\n  {\n    id: 8,\n    title: '为美好的世界献上祝福！',\n    description: '轻松搞笑的异世界喜剧',\n    imageUrl: '',\n    originalImageUrl: '../assets/images/animation/素晴.jpg',\n    reason: '这类型的神，什么时候看到和真能不笑呢'\n  },\n  {\n    id: 9,\n    title: '某科学的超电磁炮',\n    description: '炮姐的传奇故事',\n    imageUrl: '',\n    originalImageUrl: '../assets/images/animation/超炮.jpg',\n    reason: '学园都市发生的一切都深刻吸引着我，那还说啥了，黑子是我的'\n  },\n  {\n    id: 10,\n    title: '反叛的鲁路修',\n    description: '关于权谋与复仇的经典之作',\n    imageUrl: '',\n    originalImageUrl: '../assets/images/animation/鲁鲁修.jpg',\n    reason: '你说的对，这部在智斗上略显儿科，但鲁鲁修最后我是真的掉小珍珠了好不好'\n  }\n]);\n\n// 当前显示的动画索引\nconst currentIndex = ref(0);\n\n// 计算当前显示的动画\nconst currentAnime = computed(() => {\n  return animeList.value[currentIndex.value];\n});\n\n// 加载动画图片\nconst loadAnimeImage = (index: number) => {\n  if (!animeList.value[index].imageUrl && animeList.value[index].originalImageUrl) {\n    animeList.value[index].imageUrl = require(animeList.value[index].originalImageUrl);\n  }\n};\n\n// 跳转到指定动画\nconst goToAnime = (index: number) => {\n  currentIndex.value = index;\n  loadAnimeImage(index);\n  \n  // 预加载下一张图片，提升用户体验\n  const nextIndex = (index + 1) % animeList.value.length;\n  setTimeout(() => {\n    loadAnimeImage(nextIndex);\n  }, 500);\n};\n\n// 切换到上一个动画\nconst prevAnime = () => {\n  currentIndex.value = (currentIndex.value - 1 + animeList.value.length) % animeList.value.length;\n  loadAnimeImage(currentIndex.value);\n};\n\n// 切换到下一个动画\nconst nextAnime = () => {\n  currentIndex.value = (currentIndex.value + 1) % animeList.value.length;\n  loadAnimeImage(currentIndex.value);\n};\n\n// 组件挂载时加载第一张图片\nonMounted(() => {\n  loadAnimeImage(currentIndex.value);\n});\n</script>\n\n<style scoped>\n.anime-recommendation {\n  background-color: var(--bg-color);\n  border-radius: var(--radius-lg);\n  padding: var(--spacing-xl);\n  box-shadow: var(--shadow-light);\n  margin-bottom: var(--spacing-xl);\n}\n\n.section-title {\n  font-size: var(--font-size-xl);\n  color: var(--text-primary);\n  margin-bottom: var(--spacing-xl);\n  text-align: center;\n}\n\n.current-recommendation {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: relative;\n  margin-bottom: var(--spacing-xl);\n}\n\n.nav-button {\n  position: absolute;\n  width: 48px;\n  height: 48px;\n  border-radius: var(--radius-full);\n  background-color: rgba(255, 255, 255, 0.9);\n  border: none;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  box-shadow: var(--shadow-medium);\n  transition: all var(--transition-normal);\n  z-index: 10;\n}\n\n.nav-button:hover {\n  background-color: var(--bg-color);\n  transform: scale(1.1);\n}\n\n.left-button {\n  left: -24px;\n}\n\n.right-button {\n  right: -24px;\n}\n\n.recommendation-content {\n  width: 100%;\n  max-width: 800px;\n  text-align: center;\n}\n\n.anime-image-container {\n  margin-bottom: var(--spacing-lg);\n  border-radius: var(--radius-lg);\n  overflow: hidden;\n  box-shadow: var(--shadow-medium);\n  transition: all var(--transition-normal);\n}\n\n.anime-image-container:hover {\n  box-shadow: var(--shadow-heavy);\n  transform: translateY(-4px);\n}\n\n.anime-image {\n  width: 100%;\n  height: auto;\n  display: block;\n  transition: transform var(--transition-normal);\n}\n\n.anime-image:hover {\n  transform: scale(1.02);\n}\n\n.anime-info {\n  padding: 0 var(--spacing-lg);\n}\n\n.anime-title {\n  font-size: var(--font-size-lg);\n  color: var(--text-primary);\n  margin-bottom: var(--spacing-md);\n}\n\n.anime-description {\n  font-size: var(--font-size-base);\n  color: var(--text-secondary);\n  margin-bottom: var(--spacing-lg);\n}\n\n.recommendation-reason {\n  background-color: var(--bg-secondary);\n  border-radius: var(--radius-lg);\n  padding: var(--spacing-lg);\n  margin-bottom: var(--spacing-lg);\n}\n\n.reason-title {\n  font-size: var(--font-size-lg);\n  color: var(--text-primary);\n  margin-bottom: var(--spacing-md);\n}\n\n.reason-text {\n  font-size: var(--font-size-base);\n  color: var(--text-secondary);\n  line-height: 1.8;\n}\n\n.indicator-container {\n  display: flex;\n  justify-content: center;\n  gap: var(--spacing-sm);\n}\n\n.indicator {\n  width: 12px;\n  height: 12px;\n  border-radius: var(--radius-full);\n  background-color: var(--border-color);\n  cursor: pointer;\n  transition: all var(--transition-normal);\n}\n\n.indicator:hover {\n  background-color: var(--text-tertiary);\n}\n\n.indicator.active {\n  background-color: var(--primary-color);\n  width: 32px;\n}\n\n/* 响应式设计 */\n@media (max-width: 768px) {\n  .anime-recommendation {\n    padding: var(--spacing-lg);\n  }\n  \n  .nav-button {\n    width: 40px;\n    height: 40px;\n  }\n  \n  .left-button {\n    left: -20px;\n  }\n  \n  .right-button {\n    right: -20px;\n  }\n  \n  .anime-image {\n    max-height: 300px;\n    object-fit: cover;\n  }\n}\n\n@media (max-width: 480px) {\n  .nav-button {\n    width: 32px;\n    height: 32px;\n  }\n  \n  .left-button {\n    left: -16px;\n  }\n  \n  .right-button {\n    right: -16px;\n  }\n  \n  .anime-image {\n    max-height: 200px;\n  }\n}\n</style>","<template>\n  <div class=\"anime-recommendation\">\n    <h2 class=\"section-title\" data-aos=\"fade-up\">🎬 动画推荐</h2>\n    \n    <!-- 当前推荐显示区域 -->\n    <div class=\"current-recommendation\">\n      <!-- 切换按钮 -->\n      <button \n        class=\"nav-button left-button\" \n        @click=\"prevAnime\" \n        aria-label=\"上一个推荐\"\n      >\n        <LeftOutlined />\n      </button>\n      \n      <!-- 推荐内容 -->\n      <div class=\"recommendation-content\">\n        <div class=\"anime-image-container\">\n          <img \n            :src=\"currentAnime.imageUrl\" \n            :alt=\"currentAnime.title\" \n            class=\"anime-image\" \n            loading=\"lazy\"\n          />\n        </div>\n        <div class=\"anime-info\">\n          <h3 class=\"anime-title\">{{ currentAnime.title }}</h3>\n          <p class=\"anime-description\">{{ currentAnime.description }}</p>\n        </div>\n      </div>\n      \n      <button \n        class=\"nav-button right-button\" \n        @click=\"nextAnime\" \n        aria-label=\"下一个推荐\"\n      >\n        <RightOutlined />\n      </button>\n    </div>\n    \n    <!-- 推荐理由区域 -->\n    <div class=\"recommendation-reason\">\n      <h4 class=\"reason-title\">推荐理由</h4>\n      <p class=\"reason-text\">{{ currentAnime.reason }}</p>\n    </div>\n    \n    <!-- 指示器 -->\n    <div class=\"indicator-container\">\n      <div \n        v-for=\"(anime, index) in animeList\" \n        :key=\"anime.id\"\n        class=\"indicator\"\n        :class=\"{ 'active': currentIndex === index }\"\n        @click=\"goToAnime(index)\"\n      ></div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, computed, onMounted } from 'vue';\nimport { LeftOutlined, RightOutlined } from '@ant-design/icons-vue';\n\n// 定义动画推荐数据类型\ninterface AnimeRecommendation {\n  id: number;\n  title: string;\n  description: string;\n  imageUrl: string;\n  originalImageUrl: string;\n  reason: string;\n}\n\n// 动画推荐数据 - 初始imageUrl为空，originalImageUrl存储实际路径\nconst animeList = ref<AnimeRecommendation[]>([\n  {\n    id: 1,\n    title: '死亡笔记',\n    description: '一部关于天才与死亡的心理战动画',\n    imageUrl: '',\n    originalImageUrl: '../assets/images/animation/death note。jpg.jpg',\n    reason: '智斗启蒙作了属于是，难以超越的经典'\n  },\n  {\n    id: 2,\n    title: 'Fate/Zero',\n    description: '圣杯战争的史诗篇章',\n    imageUrl: '',\n    originalImageUrl: '../assets/images/animation/fz.jpg',\n    reason: '同样的，开启我月丑生涯的启蒙作，也是fate系列最喜欢的一作，切嗣也是我觉得最有魅力的男主角'\n  },\n  {\n    id: 3,\n    title: '游戏人生',\n    description: '空白永不败北',\n    imageUrl: '',\n    originalImageUrl: '../assets/images/animation/no game no life.jpg',\n    reason: '智斗和有趣的神作，剧场版更是传说。但你说的对，我第二季呢'\n  },\n  {\n    id: 4,\n    title: 'OVERLORD',\n    description: '骨傲天的异世界冒险',\n    imageUrl: '',\n    originalImageUrl: '../assets/images/animation/overlord.jpg',\n    reason: '世界观和人设十分有趣，牢骨和旧友的关系是最吸引人的'\n  },\n  {\n    id: 5,\n    title: '魔法少女小圆',\n    description: '爱的战士虚渊玄的代表作',\n    imageUrl: '',\n    originalImageUrl: '../assets/images/animation/圆神.jpg',\n    reason: '军火女王和圆神是这部番吸引我的G点'\n  },\n  {\n    id: 6,\n    title: '无职转生',\n    description: '关于成长与救赎的异世界物语',\n    imageUrl: '',\n    originalImageUrl: '../assets/images/animation/无职转生.jpg',\n    reason: '没什么好说的，异世界的神'\n  },\n  {\n    id: 7,\n    title: '想要成为影之实力者',\n    description: '迪化最严重的一集',\n    imageUrl: '',\n    originalImageUrl: '../assets/images/animation/暗影大人.jpg',\n    reason: '主打一个黄金厕纸有趣就完了'\n  },\n  {\n    id: 8,\n    title: '为美好的世界献上祝福！',\n    description: '轻松搞笑的异世界喜剧',\n    imageUrl: '',\n    originalImageUrl: '../assets/images/animation/素晴.jpg',\n    reason: '这类型的神，什么时候看到和真能不笑呢'\n  },\n  {\n    id: 9,\n    title: '某科学的超电磁炮',\n    description: '炮姐的传奇故事',\n    imageUrl: '',\n    originalImageUrl: '../assets/images/animation/超炮.jpg',\n    reason: '学园都市发生的一切都深刻吸引着我，那还说啥了，黑子是我的'\n  },\n  {\n    id: 10,\n    title: '反叛的鲁路修',\n    description: '关于权谋与复仇的经典之作',\n    imageUrl: '',\n    originalImageUrl: '../assets/images/animation/鲁鲁修.jpg',\n    reason: '你说的对，这部在智斗上略显儿科，但鲁鲁修最后我是真的掉小珍珠了好不好'\n  }\n]);\n\n// 当前显示的动画索引\nconst currentIndex = ref(0);\n\n// 计算当前显示的动画\nconst currentAnime = computed(() => {\n  return animeList.value[currentIndex.value];\n});\n\n// 加载动画图片\nconst loadAnimeImage = (index: number) => {\n  if (!animeList.value[index].imageUrl && animeList.value[index].originalImageUrl) {\n    animeList.value[index].imageUrl = require(animeList.value[index].originalImageUrl);\n  }\n};\n\n// 跳转到指定动画\nconst goToAnime = (index: number) => {\n  currentIndex.value = index;\n  loadAnimeImage(index);\n  \n  // 预加载下一张图片，提升用户体验\n  const nextIndex = (index + 1) % animeList.value.length;\n  setTimeout(() => {\n    loadAnimeImage(nextIndex);\n  }, 500);\n};\n\n// 切换到上一个动画\nconst prevAnime = () => {\n  currentIndex.value = (currentIndex.value - 1 + animeList.value.length) % animeList.value.length;\n  loadAnimeImage(currentIndex.value);\n};\n\n// 切换到下一个动画\nconst nextAnime = () => {\n  currentIndex.value = (currentIndex.value + 1) % animeList.value.length;\n  loadAnimeImage(currentIndex.value);\n};\n\n// 组件挂载时加载第一张图片\nonMounted(() => {\n  loadAnimeImage(currentIndex.value);\n});\n</script>\n\n<style scoped>\n.anime-recommendation {\n  background-color: var(--bg-color);\n  border-radius: var(--radius-lg);\n  padding: var(--spacing-xl);\n  box-shadow: var(--shadow-light);\n  margin-bottom: var(--spacing-xl);\n}\n\n.section-title {\n  font-size: var(--font-size-xl);\n  color: var(--text-primary);\n  margin-bottom: var(--spacing-xl);\n  text-align: center;\n}\n\n.current-recommendation {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: relative;\n  margin-bottom: var(--spacing-xl);\n}\n\n.nav-button {\n  position: absolute;\n  width: 48px;\n  height: 48px;\n  border-radius: var(--radius-full);\n  background-color: rgba(255, 255, 255, 0.9);\n  border: none;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  box-shadow: var(--shadow-medium);\n  transition: all var(--transition-normal);\n  z-index: 10;\n}\n\n.nav-button:hover {\n  background-color: var(--bg-color);\n  transform: scale(1.1);\n}\n\n.left-button {\n  left: -24px;\n}\n\n.right-button {\n  right: -24px;\n}\n\n.recommendation-content {\n  width: 100%;\n  max-width: 800px;\n  text-align: center;\n}\n\n.anime-image-container {\n  margin-bottom: var(--spacing-lg);\n  border-radius: var(--radius-lg);\n  overflow: hidden;\n  box-shadow: var(--shadow-medium);\n  transition: all var(--transition-normal);\n}\n\n.anime-image-container:hover {\n  box-shadow: var(--shadow-heavy);\n  transform: translateY(-4px);\n}\n\n.anime-image {\n  width: 100%;\n  height: auto;\n  display: block;\n  transition: transform var(--transition-normal);\n}\n\n.anime-image:hover {\n  transform: scale(1.02);\n}\n\n.anime-info {\n  padding: 0 var(--spacing-lg);\n}\n\n.anime-title {\n  font-size: var(--font-size-lg);\n  color: var(--text-primary);\n  margin-bottom: var(--spacing-md);\n}\n\n.anime-description {\n  font-size: var(--font-size-base);\n  color: var(--text-secondary);\n  margin-bottom: var(--spacing-lg);\n}\n\n.recommendation-reason {\n  background-color: var(--bg-secondary);\n  border-radius: var(--radius-lg);\n  padding: var(--spacing-lg);\n  margin-bottom: var(--spacing-lg);\n}\n\n.reason-title {\n  font-size: var(--font-size-lg);\n  color: var(--text-primary);\n  margin-bottom: var(--spacing-md);\n}\n\n.reason-text {\n  font-size: var(--font-size-base);\n  color: var(--text-secondary);\n  line-height: 1.8;\n}\n\n.indicator-container {\n  display: flex;\n  justify-content: center;\n  gap: var(--spacing-sm);\n}\n\n.indicator {\n  width: 12px;\n  height: 12px;\n  border-radius: var(--radius-full);\n  background-color: var(--border-color);\n  cursor: pointer;\n  transition: all var(--transition-normal);\n}\n\n.indicator:hover {\n  background-color: var(--text-tertiary);\n}\n\n.indicator.active {\n  background-color: var(--primary-color);\n  width: 32px;\n}\n\n/* 响应式设计 */\n@media (max-width: 768px) {\n  .anime-recommendation {\n    padding: var(--spacing-lg);\n  }\n  \n  .nav-button {\n    width: 40px;\n    height: 40px;\n  }\n  \n  .left-button {\n    left: -20px;\n  }\n  \n  .right-button {\n    right: -20px;\n  }\n  \n  .anime-image {\n    max-height: 300px;\n    object-fit: cover;\n  }\n}\n\n@media (max-width: 480px) {\n  .nav-button {\n    width: 32px;\n    height: 32px;\n  }\n  \n  .left-button {\n    left: -16px;\n  }\n  \n  .right-button {\n    right: -16px;\n  }\n  \n  .anime-image {\n    max-height: 200px;\n  }\n}\n</style>","import script from \"./AnimeRecommendation.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./AnimeRecommendation.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./AnimeRecommendation.vue?vue&type=style&index=0&id=5b68103c&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-5b68103c\"]])\n\nexport default __exports__","import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createBlock as _createBlock } from \"vue\"\n\nconst _hoisted_1 = {\n  key: 0,\n  class: \"modal-content\"\n}\nconst _hoisted_2 = { class: \"modal-title\" }\nconst _hoisted_3 = { class: \"modal-date\" }\nconst _hoisted_4 = { class: \"content-wrapper\" }\nconst _hoisted_5 = [\"src\", \"alt\"]\nconst _hoisted_6 = { key: 1 }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_a_modal = _resolveComponent(\"a-modal\")!\n\n  return (_openBlock(), _createBlock(_component_a_modal, {\n    open: _ctx.show,\n    title: \"文章详情\",\n    onCancel: _ctx.closeModal,\n    \"onUpdate:open\": _ctx.handleOpenChange,\n    width: \"800px\",\n    footer: null\n  }, {\n    default: _withCtx(() => [\n      (_ctx.detail)\n        ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n            _createElementVNode(\"h2\", _hoisted_2, _toDisplayString(_ctx.detail.title), 1),\n            _createElementVNode(\"p\", _hoisted_3, _toDisplayString(_ctx.detail.date), 1),\n            _createElementVNode(\"div\", _hoisted_4, [\n              (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.contentParagraphs, (paragraph, index) => {\n                return (_openBlock(), _createElementBlock(\"div\", {\n                  key: index,\n                  class: \"content-paragraph\"\n                }, [\n                  (paragraph.trim())\n                    ? (_openBlock(), _createElementBlock(\"img\", {\n                        key: 0,\n                        src: _ctx.getImageForParagraph(index),\n                        alt: `装饰图片 ${index+1}`,\n                        class: \"paragraph-image\"\n                      }, null, 8, _hoisted_5))\n                    : _createCommentVNode(\"\", true),\n                  _createElementVNode(\"span\", null, _toDisplayString(paragraph), 1)\n                ]))\n              }), 128))\n            ])\n          ]))\n        : (_openBlock(), _createElementBlock(\"div\", _hoisted_6, [...(_cache[0] || (_cache[0] = [\n            _createElementVNode(\"p\", null, \"暂无内容\", -1)\n          ]))]))\n    ]),\n    _: 1\n  }, 8, [\"open\", \"onCancel\", \"onUpdate:open\"]))\n}","<template>\n  <a-modal\n    :open=\"show\"\n    title=\"文章详情\"\n    @cancel=\"closeModal\"\n    @update:open=\"handleOpenChange\"\n    width=\"800px\"\n    :footer=\"null\"\n  >\n    <div v-if=\"detail\" class=\"modal-content\">\n      <h2 class=\"modal-title\">{{ detail.title }}</h2>\n      <p class=\"modal-date\">{{ detail.date }}</p>\n      <div class=\"content-wrapper\">\n        <div \n          v-for=\"(paragraph, index) in contentParagraphs\"\n          :key=\"index\"\n          class=\"content-paragraph\"\n        >\n          <img \n            v-if=\"paragraph.trim()\" \n            :src=\"getImageForParagraph(index)\"\n            :alt=\"`装饰图片 ${index+1}`\"\n            class=\"paragraph-image\"\n          />\n          <span>{{ paragraph }}</span>\n        </div>\n      </div>\n    </div>\n    <div v-else>\n      <p>暂无内容</p>\n    </div>\n  </a-modal>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, computed } from 'vue';\nimport { Modal } from 'ant-design-vue';\n\n// 定义详情数据类型\ninterface Detail {\n  id: number;\n  title: string;\n  date: string;\n  content: string;\n  coverImg: string;\n}\n\nexport default defineComponent({\n  name: 'DetailModal',\n  components: {\n    'a-modal': Modal\n  },\n  props: {\n    show: {\n      type: Boolean,\n      default: false\n    },\n    detail: {\n      type: Object as () => Detail | null,\n      default: null\n    }\n  },\n  emits: ['close'],\n  setup(props) {\n    // 将内容按换行符分割成段落\n    const contentParagraphs = computed(() => {\n      if (!props.detail?.content) return [];\n      return props.detail.content.split('\\n\\n');\n    });\n\n    // 可用的装饰图片列表\n    const decorativeImages = [\n      require('../assets/images/C.C.png'),\n      require('../assets/images/你别死啊.png'),\n      require('../assets/images/我要打十个.png'),\n      require('../assets/images/鬼雾.png'),\n      require('../assets/images/鲁鲁修.png'),\n      require('../assets/images/鲜血女王.png')\n    ];\n\n    // 根据段落索引获取图片\n    const getImageForParagraph = (index: number) => {\n      // 循环使用图片列表\n      return decorativeImages[index % decorativeImages.length];\n    };\n\n    return {\n      contentParagraphs,\n      getImageForParagraph\n    };\n  },\n  methods: {\n    closeModal() {\n      this.$emit('close');\n    },\n    handleOpenChange(newValue: boolean) {\n      if (!newValue) {\n        this.$emit('close');\n      }\n    }\n  }\n});\n</script>\n\n<style scoped>\n.modal-content {\n  padding: 16px 0;\n}\n\n.modal-title {\n  color: #333;\n  font-size: 24px;\n  margin-bottom: 12px;\n  font-weight: 600;\n}\n\n.modal-date {\n  color: #999;\n  font-size: 14px;\n  margin-bottom: 24px;\n}\n\n.content-wrapper {\n  font-size: 16px;\n  line-height: 1.8;\n}\n\n.content-paragraph {\n  display: flex;\n  align-items: flex-start;\n  margin-bottom: 20px;\n  padding: 12px;\n  background-color: #f8f9fa;\n  border-radius: 8px;\n  transition: all 0.3s ease;\n}\n\n.content-paragraph:hover {\n  background-color: #e9ecef;\n  transform: translateX(5px);\n}\n\n.paragraph-image {\n  width: 40px;\n  height: 40px;\n  object-fit: cover;\n  margin-right: 12px;\n  border-radius: 50%;\n  flex-shrink: 0;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n</style>","import { defineComponent as _defineComponent } from 'vue'\nimport { normalizeStyle as _normalizeStyle, createElementVNode as _createElementVNode, unref as _unref, createVNode as _createVNode, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nimport { CaretDownOutlined } from '@ant-design/icons-vue';\nimport { ref, onMounted, onUnmounted } from 'vue';\n\n// 滚动进度值 (0-1)\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'BannerSection',\n  setup(__props) {\n\nconst scrollProgress = ref(0);\n\n// 滚动到文章区域\nconst scrollToArticles = () => {\n  const articleSection = document.querySelector('.article-section');\n  if (articleSection) {\n    articleSection.scrollIntoView({ behavior: 'smooth' });\n  }\n};\n\n// 处理滚动事件\nconst handleScroll = () => {\n  // 获取滚动位置\n  const scrollTop = window.scrollY;\n  // 获取banner区域的高度\n  const bannerElement = document.querySelector('.banner');\n  const bannerHeight = bannerElement instanceof HTMLElement ? bannerElement.offsetHeight : 0;\n  \n  // 计算滚动进度 (0-1)\n  scrollProgress.value = Math.min(scrollTop / (bannerHeight * 0.8), 1);\n};\n\n// 组件挂载时添加滚动事件监听\nonMounted(() => {\n  window.addEventListener('scroll', handleScroll);\n});\n\n// 组件卸载时移除滚动事件监听\nonUnmounted(() => {\n  window.removeEventListener('scroll', handleScroll);\n});\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", {\n    class: _normalizeClass([\"banner\", { 'scrolled': scrollProgress.value > 0 }])\n  }, [\n    _createElementVNode(\"div\", {\n      class: \"banner-background\",\n      style: _normalizeStyle({ opacity: 1 - scrollProgress.value * 0.8 })\n    }, null, 4),\n    _createElementVNode(\"div\", {\n      class: \"banner-content fade-in\",\n      style: _normalizeStyle({\n        opacity: 1 - scrollProgress.value,\n        transform: `translateY(${scrollProgress.value * 50}px)`\n      })\n    }, [...(_cache[0] || (_cache[0] = [\n      _createElementVNode(\"h1\", { class: \"banner-title slide-up\" }, \"Shiki的小站\", -1),\n      _createElementVNode(\"p\", { class: \"banner-slogan slide-up\" }, \"记录日常 & 碎碎念\", -1)\n    ]))], 4),\n    _createElementVNode(\"div\", {\n      class: \"banner-scroll-indicator\",\n      style: _normalizeStyle({ opacity: 1 - scrollProgress.value * 2 }),\n      onClick: scrollToArticles\n    }, [\n      _createVNode(_unref(CaretDownOutlined), { class: \"banner-arrow float\" })\n    ], 4),\n    _createElementVNode(\"div\", {\n      class: \"banner-top-mask\",\n      style: _normalizeStyle({ opacity: scrollProgress.value * 2 })\n    }, null, 4)\n  ], 2))\n}\n}\n\n})","<template>\n  <div class=\"banner\" :class=\"{ 'scrolled': scrollProgress > 0 }\">\n    <!-- 增强的背景效果 -->\n    <div class=\"banner-background\" :style=\"{ opacity: 1 - scrollProgress * 0.8 }\"></div>\n    \n    <!-- 内容区 -->\n    <div \n      class=\"banner-content fade-in\"\n      :style=\"{\n        opacity: 1 - scrollProgress,\n        transform: `translateY(${scrollProgress * 50}px)`\n      }\"\n    >\n      <h1 class=\"banner-title slide-up\">Shiki的小站</h1>\n      <p class=\"banner-slogan slide-up\">记录日常 & 碎碎念</p>\n    </div>\n    \n    <!-- 滚动指示器 -->\n    <div \n      class=\"banner-scroll-indicator\"\n      :style=\"{ opacity: 1 - scrollProgress * 2 }\"\n      @click=\"scrollToArticles\"\n    >\n      <CaretDownOutlined class=\"banner-arrow float\" />\n    </div>\n    \n    <!-- 顶部渐变遮罩 -->\n    <div \n      class=\"banner-top-mask\"\n      :style=\"{ opacity: scrollProgress * 2 }\"\n    ></div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { CaretDownOutlined } from '@ant-design/icons-vue';\nimport { ref, onMounted, onUnmounted } from 'vue';\n\n// 滚动进度值 (0-1)\nconst scrollProgress = ref(0);\n\n// 滚动到文章区域\nconst scrollToArticles = () => {\n  const articleSection = document.querySelector('.article-section');\n  if (articleSection) {\n    articleSection.scrollIntoView({ behavior: 'smooth' });\n  }\n};\n\n// 处理滚动事件\nconst handleScroll = () => {\n  // 获取滚动位置\n  const scrollTop = window.scrollY;\n  // 获取banner区域的高度\n  const bannerElement = document.querySelector('.banner');\n  const bannerHeight = bannerElement instanceof HTMLElement ? bannerElement.offsetHeight : 0;\n  \n  // 计算滚动进度 (0-1)\n  scrollProgress.value = Math.min(scrollTop / (bannerHeight * 0.8), 1);\n};\n\n// 组件挂载时添加滚动事件监听\nonMounted(() => {\n  window.addEventListener('scroll', handleScroll);\n});\n\n// 组件卸载时移除滚动事件监听\nonUnmounted(() => {\n  window.removeEventListener('scroll', handleScroll);\n});\n</script>\n\n<style scoped>\n/* Banner样式：占满首屏，背景图居中 */\n.banner {\n  min-height: 100vh; /* 占满当前屏幕高度 */\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  color: white; /* 文字白色，适配深色背景 */\n  padding: 20px;\n  border-radius: 24px;\n  overflow: hidden;\n  box-sizing: border-box;\n  position: relative;\n  cursor: pointer;\n  transition: all 0.5s ease;\n}\n\n/* 背景层增强 */\n.banner-background {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: url('../assets/images/两仪式.png') center/cover no-repeat;\n  filter: brightness(0.8); /* 稍微调暗背景，增强文字可读性 */\n  z-index: 0;\n}\n\n/* 渐变遮罩 */\n.banner::before {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: linear-gradient(\n    135deg,\n    rgba(24, 144, 255, 0.2) 0%,\n    rgba(114, 28, 195, 0.2) 100%\n  );\n  z-index: 1;\n}\n\n.banner::after {\n  content: '';\n  position: absolute;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  height: 200px;\n  background: linear-gradient(\n    transparent,\n    rgba(0, 0, 0, 0.5)\n  );\n  z-index: 1;\n}\n\n/* 内容区域 */\n.banner-content {\n  text-align: center;\n  position: relative;\n  z-index: 2;\n  max-width: 800px;\n  margin: 0 auto;\n}\n\n/* 标题样式 - 像素字体风格 */\n.banner-title {\n  font-size: clamp(2.5rem, 6vw, 4rem); /* 响应式字体大小 */\n  margin-bottom: 20px;\n  font-weight: 700;\n  letter-spacing: 2px;\n  font-family: 'Courier New', monospace;\n  color: #ffcc00;\n  text-shadow: \n    4px 4px 0px #000000,\n    -2px -2px 0px #000000,\n    2px -2px 0px #000000,\n    -2px 2px 0px #000000,\n    2px 2px 0px #000000;\n  transform: perspective(500px) rotateX(0deg);\n  image-rendering: pixelated;\n}\n\n/* 副标题样式 - 像素字体风格 */\n.banner-slogan {\n  font-size: clamp(1.2rem, 3vw, 1.8rem);\n  opacity: 0.95;\n  font-weight: 700;\n  letter-spacing: 1px;\n  margin-bottom: 40px;\n  font-family: 'Courier New', monospace;\n  color: #ffffff;\n  text-shadow: \n    3px 3px 0px #000000,\n    -1px -1px 0px #000000,\n    1px -1px 0px #000000,\n    -1px 1px 0px #000000,\n    1px 1px 0px #000000;\n  image-rendering: pixelated;\n}\n\n/* 滚动指示器 */\n.scroll-indicator {\n  position: absolute;\n  bottom: 30px;\n  z-index: 2;\n  transition: opacity 0.3s ease;\n}\n\n.banner-arrow {\n  font-size: 2.5rem;\n  color: rgba(255, 255, 255, 0.8);\n  transition: all var(--transition-normal);\n}\n\n.banner-arrow:hover {\n  color: white;\n  transform: scale(1.2);\n}\n\n/* 点击波纹效果 */\n.banner:active {\n  transform: scale(0.98);\n}\n\n/* 顶部渐变遮罩 - 实现向下滚动时内容逐渐白化的效果 */\n.banner-top-mask {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: linear-gradient(\n    to bottom, \n    rgba(255, 255, 255, 0.8) 0%, \n    rgba(255, 255, 255, 0.3) 50%, \n    rgba(255, 255, 255, 0) 100%\n  );\n  z-index: 3;\n  transition: opacity 0.5s ease;\n}\n\n/* 滚动时的额外效果 */\n.banner.scrolled {\n  border-radius: 0;\n}\n\n/* 响应式设计 */\n@media (max-width: 768px) {\n  .banner {\n    padding: 15px;\n  }\n  \n  .banner::after {\n    height: 150px;\n  }\n}\n</style>","<template>\n  <div class=\"banner\" :class=\"{ 'scrolled': scrollProgress > 0 }\">\n    <!-- 增强的背景效果 -->\n    <div class=\"banner-background\" :style=\"{ opacity: 1 - scrollProgress * 0.8 }\"></div>\n    \n    <!-- 内容区 -->\n    <div \n      class=\"banner-content fade-in\"\n      :style=\"{\n        opacity: 1 - scrollProgress,\n        transform: `translateY(${scrollProgress * 50}px)`\n      }\"\n    >\n      <h1 class=\"banner-title slide-up\">Shiki的小站</h1>\n      <p class=\"banner-slogan slide-up\">记录日常 & 碎碎念</p>\n    </div>\n    \n    <!-- 滚动指示器 -->\n    <div \n      class=\"banner-scroll-indicator\"\n      :style=\"{ opacity: 1 - scrollProgress * 2 }\"\n      @click=\"scrollToArticles\"\n    >\n      <CaretDownOutlined class=\"banner-arrow float\" />\n    </div>\n    \n    <!-- 顶部渐变遮罩 -->\n    <div \n      class=\"banner-top-mask\"\n      :style=\"{ opacity: scrollProgress * 2 }\"\n    ></div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { CaretDownOutlined } from '@ant-design/icons-vue';\nimport { ref, onMounted, onUnmounted } from 'vue';\n\n// 滚动进度值 (0-1)\nconst scrollProgress = ref(0);\n\n// 滚动到文章区域\nconst scrollToArticles = () => {\n  const articleSection = document.querySelector('.article-section');\n  if (articleSection) {\n    articleSection.scrollIntoView({ behavior: 'smooth' });\n  }\n};\n\n// 处理滚动事件\nconst handleScroll = () => {\n  // 获取滚动位置\n  const scrollTop = window.scrollY;\n  // 获取banner区域的高度\n  const bannerElement = document.querySelector('.banner');\n  const bannerHeight = bannerElement instanceof HTMLElement ? bannerElement.offsetHeight : 0;\n  \n  // 计算滚动进度 (0-1)\n  scrollProgress.value = Math.min(scrollTop / (bannerHeight * 0.8), 1);\n};\n\n// 组件挂载时添加滚动事件监听\nonMounted(() => {\n  window.addEventListener('scroll', handleScroll);\n});\n\n// 组件卸载时移除滚动事件监听\nonUnmounted(() => {\n  window.removeEventListener('scroll', handleScroll);\n});\n</script>\n\n<style scoped>\n/* Banner样式：占满首屏，背景图居中 */\n.banner {\n  min-height: 100vh; /* 占满当前屏幕高度 */\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  color: white; /* 文字白色，适配深色背景 */\n  padding: 20px;\n  border-radius: 24px;\n  overflow: hidden;\n  box-sizing: border-box;\n  position: relative;\n  cursor: pointer;\n  transition: all 0.5s ease;\n}\n\n/* 背景层增强 */\n.banner-background {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: url('../assets/images/两仪式.png') center/cover no-repeat;\n  filter: brightness(0.8); /* 稍微调暗背景，增强文字可读性 */\n  z-index: 0;\n}\n\n/* 渐变遮罩 */\n.banner::before {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: linear-gradient(\n    135deg,\n    rgba(24, 144, 255, 0.2) 0%,\n    rgba(114, 28, 195, 0.2) 100%\n  );\n  z-index: 1;\n}\n\n.banner::after {\n  content: '';\n  position: absolute;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  height: 200px;\n  background: linear-gradient(\n    transparent,\n    rgba(0, 0, 0, 0.5)\n  );\n  z-index: 1;\n}\n\n/* 内容区域 */\n.banner-content {\n  text-align: center;\n  position: relative;\n  z-index: 2;\n  max-width: 800px;\n  margin: 0 auto;\n}\n\n/* 标题样式 - 像素字体风格 */\n.banner-title {\n  font-size: clamp(2.5rem, 6vw, 4rem); /* 响应式字体大小 */\n  margin-bottom: 20px;\n  font-weight: 700;\n  letter-spacing: 2px;\n  font-family: 'Courier New', monospace;\n  color: #ffcc00;\n  text-shadow: \n    4px 4px 0px #000000,\n    -2px -2px 0px #000000,\n    2px -2px 0px #000000,\n    -2px 2px 0px #000000,\n    2px 2px 0px #000000;\n  transform: perspective(500px) rotateX(0deg);\n  image-rendering: pixelated;\n}\n\n/* 副标题样式 - 像素字体风格 */\n.banner-slogan {\n  font-size: clamp(1.2rem, 3vw, 1.8rem);\n  opacity: 0.95;\n  font-weight: 700;\n  letter-spacing: 1px;\n  margin-bottom: 40px;\n  font-family: 'Courier New', monospace;\n  color: #ffffff;\n  text-shadow: \n    3px 3px 0px #000000,\n    -1px -1px 0px #000000,\n    1px -1px 0px #000000,\n    -1px 1px 0px #000000,\n    1px 1px 0px #000000;\n  image-rendering: pixelated;\n}\n\n/* 滚动指示器 */\n.scroll-indicator {\n  position: absolute;\n  bottom: 30px;\n  z-index: 2;\n  transition: opacity 0.3s ease;\n}\n\n.banner-arrow {\n  font-size: 2.5rem;\n  color: rgba(255, 255, 255, 0.8);\n  transition: all var(--transition-normal);\n}\n\n.banner-arrow:hover {\n  color: white;\n  transform: scale(1.2);\n}\n\n/* 点击波纹效果 */\n.banner:active {\n  transform: scale(0.98);\n}\n\n/* 顶部渐变遮罩 - 实现向下滚动时内容逐渐白化的效果 */\n.banner-top-mask {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: linear-gradient(\n    to bottom, \n    rgba(255, 255, 255, 0.8) 0%, \n    rgba(255, 255, 255, 0.3) 50%, \n    rgba(255, 255, 255, 0) 100%\n  );\n  z-index: 3;\n  transition: opacity 0.5s ease;\n}\n\n/* 滚动时的额外效果 */\n.banner.scrolled {\n  border-radius: 0;\n}\n\n/* 响应式设计 */\n@media (max-width: 768px) {\n  .banner {\n    padding: 15px;\n  }\n  \n  .banner::after {\n    height: 150px;\n  }\n}\n</style>","import script from \"./BannerSection.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./BannerSection.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./BannerSection.vue?vue&type=style&index=0&id=4a731b98&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-4a731b98\"]])\n\nexport default __exports__"],"names":["_hoisted_1","class","_hoisted_2","_defineComponent","__name","props","article","type","Object","required","emits","setup","__props","emit","__emit","handleClick","id","_ctx","_cache","_component_a_card_meta","_resolveComponent","_component_a_card","_openBlock","_createBlock","hoverable","onClick","cover","_withCtx","_createElementVNode","src","coverImg","alt","title","loading","default","_createVNode","description","date","_","__exports__","map","webpackContext","req","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","resolve","module","exports","show","ref","handleScroll","value","window","scrollY","backToTop","scrollDuration","scrollStep","scrollInterval","setInterval","scrollBy","clearInterval","onMounted","addEventListener","onUnmounted","removeEventListener","_Transition","name","_withDirectives","_normalizeClass","_unref","UpOutlined","_vShow","_hoisted_3","_hoisted_4","_hoisted_5","dataItems","async","response","fetch","ok","json","error","console","_createElementBlock","_Fragment","_renderList","item","index","key","href","target","rel","_toDisplayString","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","animeList","imageUrl","originalImageUrl","reason","currentIndex","currentAnime","computed","loadAnimeImage","require","goToAnime","nextIndex","length","setTimeout","prevAnime","nextAnime","LeftOutlined","RightOutlined","anime","$event","render","$props","$setup","$data","$options","_component_a_modal","open","onCancel","closeModal","handleOpenChange","width","footer","detail","contentParagraphs","paragraph","trim","getImageForParagraph","_createCommentVNode","scrollProgress","scrollToArticles","articleSection","document","querySelector","scrollIntoView","behavior","scrollTop","bannerElement","bannerHeight","HTMLElement","offsetHeight","Math","min","style","_normalizeStyle","opacity","transform","CaretDownOutlined"],"sourceRoot":""}