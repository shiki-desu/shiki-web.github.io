{"version":3,"file":"js/995.81702912.js","mappings":"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","sources":["webpack://shiki-web/./node_modules/core-js/modules/es.iterator.find.js","webpack://shiki-web/../../../../../../Mad%20Scientist/Desktop/Learn%20everthing/vue%E8%87%AA%E6%90%AD%E5%BB%BA%E7%BD%91%E7%AB%99+%E5%89%8D%E7%AB%AF%E4%B8%89%E5%89%91%E5%AE%A2/vue%E9%A1%B9%E7%9B%AE/shiki-web/src/components/BannerSection.vue?773c","webpack://shiki-web/../../../../../../Mad%20Scientist/Desktop/Learn%20everthing/vue%E8%87%AA%E6%90%AD%E5%BB%BA%E7%BD%91%E7%AB%99+%E5%89%8D%E7%AB%AF%E4%B8%89%E5%89%91%E5%AE%A2/vue%E9%A1%B9%E7%9B%AE/shiki-web/src/components/BannerSection.vue","webpack://shiki-web/../../../vue%E8%87%AA%E6%90%AD%E5%BB%BA%E7%BD%91%E7%AB%99+%E5%89%8D%E7%AB%AF%E4%B8%89%E5%89%91%E5%AE%A2/vue%E9%A1%B9%E7%9B%AE/shiki-web/src/components/BannerSection.vue","webpack://shiki-web/./src/components/BannerSection.vue","webpack://shiki-web/../../../../../../Mad%20Scientist/Desktop/Learn%20everthing/vue%E8%87%AA%E6%90%AD%E5%BB%BA%E7%BD%91%E7%AB%99+%E5%89%8D%E7%AB%AF%E4%B8%89%E5%89%91%E5%AE%A2/vue%E9%A1%B9%E7%9B%AE/shiki-web/src/components/ArticleCard.vue?6088","webpack://shiki-web/../../../../../../Mad%20Scientist/Desktop/Learn%20everthing/vue%E8%87%AA%E6%90%AD%E5%BB%BA%E7%BD%91%E7%AB%99+%E5%89%8D%E7%AB%AF%E4%B8%89%E5%89%91%E5%AE%A2/vue%E9%A1%B9%E7%9B%AE/shiki-web/src/components/ArticleCard.vue","webpack://shiki-web/../../../vue%E8%87%AA%E6%90%AD%E5%BB%BA%E7%BD%91%E7%AB%99+%E5%89%8D%E7%AB%AF%E4%B8%89%E5%89%91%E5%AE%A2/vue%E9%A1%B9%E7%9B%AE/shiki-web/src/components/ArticleCard.vue","webpack://shiki-web/./src/components/ArticleCard.vue","webpack://shiki-web/../../../../../../Mad%20Scientist/Desktop/Learn%20everthing/vue%E8%87%AA%E6%90%AD%E5%BB%BA%E7%BD%91%E7%AB%99+%E5%89%8D%E7%AB%AF%E4%B8%89%E5%89%91%E5%AE%A2/vue%E9%A1%B9%E7%9B%AE/shiki-web/src/components/DetailModal.vue","webpack://shiki-web/../../../vue%E8%87%AA%E6%90%AD%E5%BB%BA%E7%BD%91%E7%AB%99+%E5%89%8D%E7%AB%AF%E4%B8%89%E5%89%91%E5%AE%A2/vue%E9%A1%B9%E7%9B%AE/shiki-web/src/components/DetailModal.vue","webpack://shiki-web/./src/components/DetailModal.vue","webpack://shiki-web/../../../../../../Mad%20Scientist/Desktop/Learn%20everthing/vue%E8%87%AA%E6%90%AD%E5%BB%BA%E7%BD%91%E7%AB%99+%E5%89%8D%E7%AB%AF%E4%B8%89%E5%89%91%E5%AE%A2/vue%E9%A1%B9%E7%9B%AE/shiki-web/src/components/BackToTop.vue?cdf0","webpack://shiki-web/../../../../../../Mad%20Scientist/Desktop/Learn%20everthing/vue%E8%87%AA%E6%90%AD%E5%BB%BA%E7%BD%91%E7%AB%99+%E5%89%8D%E7%AB%AF%E4%B8%89%E5%89%91%E5%AE%A2/vue%E9%A1%B9%E7%9B%AE/shiki-web/src/components/BackToTop.vue","webpack://shiki-web/../../../vue%E8%87%AA%E6%90%AD%E5%BB%BA%E7%BD%91%E7%AB%99+%E5%89%8D%E7%AB%AF%E4%B8%89%E5%89%91%E5%AE%A2/vue%E9%A1%B9%E7%9B%AE/shiki-web/src/components/BackToTop.vue","webpack://shiki-web/./src/components/BackToTop.vue","webpack://shiki-web/../../../../../../Mad%20Scientist/Desktop/Learn%20everthing/vue%E8%87%AA%E6%90%AD%E5%BB%BA%E7%BD%91%E7%AB%99+%E5%89%8D%E7%AB%AF%E4%B8%89%E5%89%91%E5%AE%A2/vue%E9%A1%B9%E7%9B%AE/shiki-web/src/components/MusicPlayer.vue?37e3","webpack://shiki-web/../../../../../../Mad%20Scientist/Desktop/Learn%20everthing/vue%E8%87%AA%E6%90%AD%E5%BB%BA%E7%BD%91%E7%AB%99+%E5%89%8D%E7%AB%AF%E4%B8%89%E5%89%91%E5%AE%A2/vue%E9%A1%B9%E7%9B%AE/shiki-web/src/components/MusicPlayer.vue","webpack://shiki-web/../../../vue%E8%87%AA%E6%90%AD%E5%BB%BA%E7%BD%91%E7%AB%99+%E5%89%8D%E7%AB%AF%E4%B8%89%E5%89%91%E5%AE%A2/vue%E9%A1%B9%E7%9B%AE/shiki-web/src/components/MusicPlayer.vue","webpack://shiki-web/./src/components/MusicPlayer.vue","webpack://shiki-web/../../../../../../Mad%20Scientist/Desktop/Learn%20everthing/vue%E8%87%AA%E6%90%AD%E5%BB%BA%E7%BD%91%E7%AB%99+%E5%89%8D%E7%AB%AF%E4%B8%89%E5%89%91%E5%AE%A2/vue%E9%A1%B9%E7%9B%AE/shiki-web/src/components/AnimeRecommendation.vue?180c","webpack://shiki-web/../../../../../../Mad%20Scientist/Desktop/Learn%20everthing/vue%E8%87%AA%E6%90%AD%E5%BB%BA%E7%BD%91%E7%AB%99+%E5%89%8D%E7%AB%AF%E4%B8%89%E5%89%91%E5%AE%A2/vue%E9%A1%B9%E7%9B%AE/shiki-web/src/components/AnimeRecommendation.vue","webpack://shiki-web/../../../vue%E8%87%AA%E6%90%AD%E5%BB%BA%E7%BD%91%E7%AB%99+%E5%89%8D%E7%AB%AF%E4%B8%89%E5%89%91%E5%AE%A2/vue%E9%A1%B9%E7%9B%AE/shiki-web/src/components/AnimeRecommendation.vue","webpack://shiki-web/./src/components/AnimeRecommendation.vue","webpack://shiki-web/../../../../../../Mad%20Scientist/Desktop/Learn%20everthing/vue%E8%87%AA%E6%90%AD%E5%BB%BA%E7%BD%91%E7%AB%99+%E5%89%8D%E7%AB%AF%E4%B8%89%E5%89%91%E5%AE%A2/vue%E9%A1%B9%E7%9B%AE/shiki-web/src/components/DataDisplay.vue?37f7","webpack://shiki-web/../../../../../../Mad%20Scientist/Desktop/Learn%20everthing/vue%E8%87%AA%E6%90%AD%E5%BB%BA%E7%BD%91%E7%AB%99+%E5%89%8D%E7%AB%AF%E4%B8%89%E5%89%91%E5%AE%A2/vue%E9%A1%B9%E7%9B%AE/shiki-web/src/components/DataDisplay.vue","webpack://shiki-web/../../../vue%E8%87%AA%E6%90%AD%E5%BB%BA%E7%BD%91%E7%AB%99+%E5%89%8D%E7%AB%AF%E4%B8%89%E5%89%91%E5%AE%A2/vue%E9%A1%B9%E7%9B%AE/shiki-web/src/components/DataDisplay.vue","webpack://shiki-web/./src/components/DataDisplay.vue","webpack://shiki-web/./src/services/articleService.ts","webpack://shiki-web/./src/utils/scrollUtils.ts","webpack://shiki-web/../../../../../../Mad%20Scientist/Desktop/Learn%20everthing/vue%E8%87%AA%E6%90%AD%E5%BB%BA%E7%BD%91%E7%AB%99+%E5%89%8D%E7%AB%AF%E4%B8%89%E5%89%91%E5%AE%A2/vue%E9%A1%B9%E7%9B%AE/shiki-web/src/views/ShikiHome.vue?f5a3","webpack://shiki-web/../../../../../../Mad%20Scientist/Desktop/Learn%20everthing/vue%E8%87%AA%E6%90%AD%E5%BB%BA%E7%BD%91%E7%AB%99+%E5%89%8D%E7%AB%AF%E4%B8%89%E5%89%91%E5%AE%A2/vue%E9%A1%B9%E7%9B%AE/shiki-web/src/views/ShikiHome.vue","webpack://shiki-web/../../../vue%E8%87%AA%E6%90%AD%E5%BB%BA%E7%BD%91%E7%AB%99+%E5%89%8D%E7%AB%AF%E4%B8%89%E5%89%91%E5%AE%A2/vue%E9%A1%B9%E7%9B%AE/shiki-web/src/views/ShikiHome.vue","webpack://shiki-web/./src/views/ShikiHome.vue","webpack://shiki-web/./src/assets/music/ sync ^\\.\\/.*$"],"sourcesContent":["'use strict';\nvar $ = require('../internals/export');\nvar call = require('../internals/function-call');\nvar iterate = require('../internals/iterate');\nvar aCallable = require('../internals/a-callable');\nvar anObject = require('../internals/an-object');\nvar getIteratorDirect = require('../internals/get-iterator-direct');\nvar iteratorClose = require('../internals/iterator-close');\nvar iteratorHelperWithoutClosingOnEarlyError = require('../internals/iterator-helper-without-closing-on-early-error');\n\nvar findWithoutClosingOnEarlyError = iteratorHelperWithoutClosingOnEarlyError('find', TypeError);\n\n// `Iterator.prototype.find` method\n// https://tc39.es/ecma262/#sec-iterator.prototype.find\n$({ target: 'Iterator', proto: true, real: true, forced: findWithoutClosingOnEarlyError }, {\n  find: function find(predicate) {\n    anObject(this);\n    try {\n      aCallable(predicate);\n    } catch (error) {\n      iteratorClose(this, 'throw', error);\n    }\n\n    if (findWithoutClosingOnEarlyError) return call(findWithoutClosingOnEarlyError, this, predicate);\n\n    var record = getIteratorDirect(this);\n    var counter = 0;\n    return iterate(record, function (value, stop) {\n      if (predicate(value, counter++)) return stop(value);\n    }, { IS_RECORD: true, INTERRUPTED: true }).result;\n  }\n});\n","import { defineComponent as _defineComponent } from 'vue'\nimport { normalizeStyle as _normalizeStyle, createElementVNode as _createElementVNode, unref as _unref, createVNode as _createVNode, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nimport { CaretDownOutlined } from '@ant-design/icons-vue';\nimport { ref, onMounted, onUnmounted } from 'vue';\n\n// 滚动进度值 (0-1)\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'BannerSection',\n  setup(__props) {\n\nconst scrollProgress = ref(0);\n\n// 滚动到文章区域\nconst scrollToArticles = () => {\n  const articleSection = document.querySelector('.article-section');\n  if (articleSection) {\n    articleSection.scrollIntoView({ behavior: 'smooth' });\n  }\n};\n\n// 处理滚动事件\nconst handleScroll = () => {\n  // 获取滚动位置\n  const scrollTop = window.scrollY;\n  // 获取banner区域的高度\n  const bannerElement = document.querySelector('.banner');\n  const bannerHeight = bannerElement instanceof HTMLElement ? bannerElement.offsetHeight : 0;\n  \n  // 计算滚动进度 (0-1)\n  scrollProgress.value = Math.min(scrollTop / (bannerHeight * 0.8), 1);\n};\n\n// 组件挂载时添加滚动事件监听\nonMounted(() => {\n  window.addEventListener('scroll', handleScroll);\n});\n\n// 组件卸载时移除滚动事件监听\nonUnmounted(() => {\n  window.removeEventListener('scroll', handleScroll);\n});\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", {\n    class: _normalizeClass([\"banner\", { 'scrolled': scrollProgress.value > 0 }])\n  }, [\n    _createElementVNode(\"div\", {\n      class: \"banner-background\",\n      style: _normalizeStyle({ opacity: 1 - scrollProgress.value * 0.8 })\n    }, null, 4),\n    _createElementVNode(\"div\", {\n      class: \"banner-content fade-in\",\n      style: _normalizeStyle({\n        opacity: 1 - scrollProgress.value,\n        transform: `translateY(${scrollProgress.value * 50}px)`\n      })\n    }, [...(_cache[0] || (_cache[0] = [\n      _createElementVNode(\"h1\", { class: \"banner-title slide-up\" }, \"Shiki的小站\", -1),\n      _createElementVNode(\"p\", { class: \"banner-slogan slide-up\" }, \"记录日常 & 碎碎念\", -1)\n    ]))], 4),\n    _createElementVNode(\"div\", {\n      class: \"banner-scroll-indicator\",\n      style: _normalizeStyle({ opacity: 1 - scrollProgress.value * 2 }),\n      onClick: scrollToArticles\n    }, [\n      _createVNode(_unref(CaretDownOutlined), { class: \"banner-arrow float\" })\n    ], 4),\n    _createElementVNode(\"div\", {\n      class: \"banner-top-mask\",\n      style: _normalizeStyle({ opacity: scrollProgress.value * 2 })\n    }, null, 4)\n  ], 2))\n}\n}\n\n})","<template>\n  <div class=\"banner\" :class=\"{ 'scrolled': scrollProgress > 0 }\">\n    <!-- 增强的背景效果 -->\n    <div class=\"banner-background\" :style=\"{ opacity: 1 - scrollProgress * 0.8 }\"></div>\n    \n    <!-- 内容区 -->\n    <div \n      class=\"banner-content fade-in\"\n      :style=\"{\n        opacity: 1 - scrollProgress,\n        transform: `translateY(${scrollProgress * 50}px)`\n      }\"\n    >\n      <h1 class=\"banner-title slide-up\">Shiki的小站</h1>\n      <p class=\"banner-slogan slide-up\">记录日常 & 碎碎念</p>\n    </div>\n    \n    <!-- 滚动指示器 -->\n    <div \n      class=\"banner-scroll-indicator\"\n      :style=\"{ opacity: 1 - scrollProgress * 2 }\"\n      @click=\"scrollToArticles\"\n    >\n      <CaretDownOutlined class=\"banner-arrow float\" />\n    </div>\n    \n    <!-- 顶部渐变遮罩 -->\n    <div \n      class=\"banner-top-mask\"\n      :style=\"{ opacity: scrollProgress * 2 }\"\n    ></div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { CaretDownOutlined } from '@ant-design/icons-vue';\nimport { ref, onMounted, onUnmounted } from 'vue';\n\n// 滚动进度值 (0-1)\nconst scrollProgress = ref(0);\n\n// 滚动到文章区域\nconst scrollToArticles = () => {\n  const articleSection = document.querySelector('.article-section');\n  if (articleSection) {\n    articleSection.scrollIntoView({ behavior: 'smooth' });\n  }\n};\n\n// 处理滚动事件\nconst handleScroll = () => {\n  // 获取滚动位置\n  const scrollTop = window.scrollY;\n  // 获取banner区域的高度\n  const bannerElement = document.querySelector('.banner');\n  const bannerHeight = bannerElement instanceof HTMLElement ? bannerElement.offsetHeight : 0;\n  \n  // 计算滚动进度 (0-1)\n  scrollProgress.value = Math.min(scrollTop / (bannerHeight * 0.8), 1);\n};\n\n// 组件挂载时添加滚动事件监听\nonMounted(() => {\n  window.addEventListener('scroll', handleScroll);\n});\n\n// 组件卸载时移除滚动事件监听\nonUnmounted(() => {\n  window.removeEventListener('scroll', handleScroll);\n});\n</script>\n\n<style scoped>\n/* Banner样式：占满首屏，背景图居中 */\n.banner {\n  min-height: 100vh; /* 占满当前屏幕高度 */\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  color: white; /* 文字白色，适配深色背景 */\n  padding: 20px;\n  border-radius: 24px;\n  overflow: hidden;\n  box-sizing: border-box;\n  position: relative;\n  cursor: pointer;\n  transition: all 0.5s ease;\n}\n\n/* 背景层增强 */\n.banner-background {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: url('../assets/images/两仪式.png') center/cover no-repeat;\n  filter: brightness(0.8); /* 稍微调暗背景，增强文字可读性 */\n  z-index: 0;\n}\n\n/* 渐变遮罩 */\n.banner::before {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: linear-gradient(\n    135deg,\n    rgba(24, 144, 255, 0.2) 0%,\n    rgba(114, 28, 195, 0.2) 100%\n  );\n  z-index: 1;\n}\n\n.banner::after {\n  content: '';\n  position: absolute;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  height: 200px;\n  background: linear-gradient(\n    transparent,\n    rgba(0, 0, 0, 0.5)\n  );\n  z-index: 1;\n}\n\n/* 内容区域 */\n.banner-content {\n  text-align: center;\n  position: relative;\n  z-index: 2;\n  max-width: 800px;\n  margin: 0 auto;\n}\n\n/* 标题样式 - 像素字体风格 */\n.banner-title {\n  font-size: clamp(2.5rem, 6vw, 4rem); /* 响应式字体大小 */\n  margin-bottom: 20px;\n  font-weight: 700;\n  letter-spacing: 2px;\n  font-family: 'Courier New', monospace;\n  color: #ffcc00;\n  text-shadow: \n    4px 4px 0px #000000,\n    -2px -2px 0px #000000,\n    2px -2px 0px #000000,\n    -2px 2px 0px #000000,\n    2px 2px 0px #000000;\n  transform: perspective(500px) rotateX(0deg);\n  image-rendering: pixelated;\n}\n\n/* 副标题样式 - 像素字体风格 */\n.banner-slogan {\n  font-size: clamp(1.2rem, 3vw, 1.8rem);\n  opacity: 0.95;\n  font-weight: 700;\n  letter-spacing: 1px;\n  margin-bottom: 40px;\n  font-family: 'Courier New', monospace;\n  color: #ffffff;\n  text-shadow: \n    3px 3px 0px #000000,\n    -1px -1px 0px #000000,\n    1px -1px 0px #000000,\n    -1px 1px 0px #000000,\n    1px 1px 0px #000000;\n  image-rendering: pixelated;\n}\n\n/* 滚动指示器 */\n.scroll-indicator {\n  position: absolute;\n  bottom: 30px;\n  z-index: 2;\n  transition: opacity 0.3s ease;\n}\n\n.banner-arrow {\n  font-size: 2.5rem;\n  color: rgba(255, 255, 255, 0.8);\n  transition: all var(--transition-normal);\n}\n\n.banner-arrow:hover {\n  color: white;\n  transform: scale(1.2);\n}\n\n/* 点击波纹效果 */\n.banner:active {\n  transform: scale(0.98);\n}\n\n/* 顶部渐变遮罩 - 实现向下滚动时内容逐渐白化的效果 */\n.banner-top-mask {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: linear-gradient(\n    to bottom, \n    rgba(255, 255, 255, 0.8) 0%, \n    rgba(255, 255, 255, 0.3) 50%, \n    rgba(255, 255, 255, 0) 100%\n  );\n  z-index: 3;\n  transition: opacity 0.5s ease;\n}\n\n/* 滚动时的额外效果 */\n.banner.scrolled {\n  border-radius: 0;\n}\n\n/* 响应式设计 */\n@media (max-width: 768px) {\n  .banner {\n    padding: 15px;\n  }\n  \n  .banner::after {\n    height: 150px;\n  }\n}\n</style>","<template>\n  <div class=\"banner\" :class=\"{ 'scrolled': scrollProgress > 0 }\">\n    <!-- 增强的背景效果 -->\n    <div class=\"banner-background\" :style=\"{ opacity: 1 - scrollProgress * 0.8 }\"></div>\n    \n    <!-- 内容区 -->\n    <div \n      class=\"banner-content fade-in\"\n      :style=\"{\n        opacity: 1 - scrollProgress,\n        transform: `translateY(${scrollProgress * 50}px)`\n      }\"\n    >\n      <h1 class=\"banner-title slide-up\">Shiki的小站</h1>\n      <p class=\"banner-slogan slide-up\">记录日常 & 碎碎念</p>\n    </div>\n    \n    <!-- 滚动指示器 -->\n    <div \n      class=\"banner-scroll-indicator\"\n      :style=\"{ opacity: 1 - scrollProgress * 2 }\"\n      @click=\"scrollToArticles\"\n    >\n      <CaretDownOutlined class=\"banner-arrow float\" />\n    </div>\n    \n    <!-- 顶部渐变遮罩 -->\n    <div \n      class=\"banner-top-mask\"\n      :style=\"{ opacity: scrollProgress * 2 }\"\n    ></div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { CaretDownOutlined } from '@ant-design/icons-vue';\nimport { ref, onMounted, onUnmounted } from 'vue';\n\n// 滚动进度值 (0-1)\nconst scrollProgress = ref(0);\n\n// 滚动到文章区域\nconst scrollToArticles = () => {\n  const articleSection = document.querySelector('.article-section');\n  if (articleSection) {\n    articleSection.scrollIntoView({ behavior: 'smooth' });\n  }\n};\n\n// 处理滚动事件\nconst handleScroll = () => {\n  // 获取滚动位置\n  const scrollTop = window.scrollY;\n  // 获取banner区域的高度\n  const bannerElement = document.querySelector('.banner');\n  const bannerHeight = bannerElement instanceof HTMLElement ? bannerElement.offsetHeight : 0;\n  \n  // 计算滚动进度 (0-1)\n  scrollProgress.value = Math.min(scrollTop / (bannerHeight * 0.8), 1);\n};\n\n// 组件挂载时添加滚动事件监听\nonMounted(() => {\n  window.addEventListener('scroll', handleScroll);\n});\n\n// 组件卸载时移除滚动事件监听\nonUnmounted(() => {\n  window.removeEventListener('scroll', handleScroll);\n});\n</script>\n\n<style scoped>\n/* Banner样式：占满首屏，背景图居中 */\n.banner {\n  min-height: 100vh; /* 占满当前屏幕高度 */\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  color: white; /* 文字白色，适配深色背景 */\n  padding: 20px;\n  border-radius: 24px;\n  overflow: hidden;\n  box-sizing: border-box;\n  position: relative;\n  cursor: pointer;\n  transition: all 0.5s ease;\n}\n\n/* 背景层增强 */\n.banner-background {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: url('../assets/images/两仪式.png') center/cover no-repeat;\n  filter: brightness(0.8); /* 稍微调暗背景，增强文字可读性 */\n  z-index: 0;\n}\n\n/* 渐变遮罩 */\n.banner::before {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: linear-gradient(\n    135deg,\n    rgba(24, 144, 255, 0.2) 0%,\n    rgba(114, 28, 195, 0.2) 100%\n  );\n  z-index: 1;\n}\n\n.banner::after {\n  content: '';\n  position: absolute;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  height: 200px;\n  background: linear-gradient(\n    transparent,\n    rgba(0, 0, 0, 0.5)\n  );\n  z-index: 1;\n}\n\n/* 内容区域 */\n.banner-content {\n  text-align: center;\n  position: relative;\n  z-index: 2;\n  max-width: 800px;\n  margin: 0 auto;\n}\n\n/* 标题样式 - 像素字体风格 */\n.banner-title {\n  font-size: clamp(2.5rem, 6vw, 4rem); /* 响应式字体大小 */\n  margin-bottom: 20px;\n  font-weight: 700;\n  letter-spacing: 2px;\n  font-family: 'Courier New', monospace;\n  color: #ffcc00;\n  text-shadow: \n    4px 4px 0px #000000,\n    -2px -2px 0px #000000,\n    2px -2px 0px #000000,\n    -2px 2px 0px #000000,\n    2px 2px 0px #000000;\n  transform: perspective(500px) rotateX(0deg);\n  image-rendering: pixelated;\n}\n\n/* 副标题样式 - 像素字体风格 */\n.banner-slogan {\n  font-size: clamp(1.2rem, 3vw, 1.8rem);\n  opacity: 0.95;\n  font-weight: 700;\n  letter-spacing: 1px;\n  margin-bottom: 40px;\n  font-family: 'Courier New', monospace;\n  color: #ffffff;\n  text-shadow: \n    3px 3px 0px #000000,\n    -1px -1px 0px #000000,\n    1px -1px 0px #000000,\n    -1px 1px 0px #000000,\n    1px 1px 0px #000000;\n  image-rendering: pixelated;\n}\n\n/* 滚动指示器 */\n.scroll-indicator {\n  position: absolute;\n  bottom: 30px;\n  z-index: 2;\n  transition: opacity 0.3s ease;\n}\n\n.banner-arrow {\n  font-size: 2.5rem;\n  color: rgba(255, 255, 255, 0.8);\n  transition: all var(--transition-normal);\n}\n\n.banner-arrow:hover {\n  color: white;\n  transform: scale(1.2);\n}\n\n/* 点击波纹效果 */\n.banner:active {\n  transform: scale(0.98);\n}\n\n/* 顶部渐变遮罩 - 实现向下滚动时内容逐渐白化的效果 */\n.banner-top-mask {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: linear-gradient(\n    to bottom, \n    rgba(255, 255, 255, 0.8) 0%, \n    rgba(255, 255, 255, 0.3) 50%, \n    rgba(255, 255, 255, 0) 100%\n  );\n  z-index: 3;\n  transition: opacity 0.5s ease;\n}\n\n/* 滚动时的额外效果 */\n.banner.scrolled {\n  border-radius: 0;\n}\n\n/* 响应式设计 */\n@media (max-width: 768px) {\n  .banner {\n    padding: 15px;\n  }\n  \n  .banner::after {\n    height: 150px;\n  }\n}\n</style>","import script from \"./BannerSection.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./BannerSection.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./BannerSection.vue?vue&type=style&index=0&id=4a731b98&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-4a731b98\"]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"image-container\" }\nconst _hoisted_2 = [\"src\", \"alt\"]\n\nimport type { PropType } from \"vue\";\r\n\r\n// 定义文章数据类型\r\ninterface Article {\r\n  id: number;\r\n  title: string;\r\n  date: string;\r\n  content: string;\r\n  coverImg: string;\r\n}\r\n\r\n// 接收文章数据作为prop\r\n// eslint-disable-next-line no-undef\r\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'ArticleCard',\n  props: {\r\n  article: {\r\n    type: Object as PropType<Article>,\r\n    required: true,\r\n  },\r\n},\n  emits: [\"click\"],\n  setup(__props, { emit: __emit }) {\n\r\nconst props = __props;\r\n\r\n// 定义点击事件\r\n// eslint-disable-next-line no-undef\r\nconst emit = __emit;\r\n\r\nconst handleClick = () => {\r\n  emit(\"click\", props.article.id);\r\n};\r\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_a_card_meta = _resolveComponent(\"a-card-meta\")!\n  const _component_a_card = _resolveComponent(\"a-card\")!\n\n  return (_openBlock(), _createBlock(_component_a_card, {\n    hoverable: \"\",\n    class: \"article-card\",\n    onClick: handleClick\n  }, {\n    cover: _withCtx(() => [\n      _createElementVNode(\"div\", _hoisted_1, [\n        _createElementVNode(\"img\", {\n          src: __props.article.coverImg,\n          alt: __props.article.title,\n          class: \"article-image\",\n          loading: \"lazy\"\n        }, null, 8, _hoisted_2),\n        _cache[0] || (_cache[0] = _createElementVNode(\"div\", { class: \"image-overlay\" }, null, -1))\n      ])\n    ]),\n    default: _withCtx(() => [\n      _createVNode(_component_a_card_meta, {\n        title: __props.article.title,\n        description: __props.article.date,\n        class: \"card-meta\"\n      }, null, 8, [\"title\", \"description\"]),\n      _cache[1] || (_cache[1] = _createElementVNode(\"div\", { class: \"click-indicator\" }, [\n        _createElementVNode(\"span\", null, \"点击查看详情\")\n      ], -1))\n    ]),\n    _: 1\n  }))\n}\n}\n\n})","<!-- eslint-disable -->\r\n<template>\r\n  <a-card hoverable class=\"article-card\" @click=\"handleClick\">\r\n    <!-- 封面图区域 -->\r\n    <template #cover>\r\n      <div class=\"image-container\">\r\n        <img\r\n          :src=\"article.coverImg\"\r\n          :alt=\"article.title\"\r\n          class=\"article-image\"\r\n          loading=\"lazy\"\r\n        />\r\n        <!-- 悬停时的渐变遮罩 -->\r\n        <div class=\"image-overlay\"></div>\r\n      </div>\r\n    </template>\r\n\r\n    <!-- 卡片内容 -->\r\n    <a-card-meta\r\n      :title=\"article.title\"\r\n      :description=\"article.date\"\r\n      class=\"card-meta\"\r\n    />\r\n\r\n    <!-- 点击指示器 -->\r\n    <div class=\"click-indicator\">\r\n      <span>点击查看详情</span>\r\n    </div>\r\n  </a-card>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport type { PropType } from \"vue\";\r\n\r\n// 定义文章数据类型\r\ninterface Article {\r\n  id: number;\r\n  title: string;\r\n  date: string;\r\n  content: string;\r\n  coverImg: string;\r\n}\r\n\r\n// 接收文章数据作为prop\r\n// eslint-disable-next-line no-undef\r\nconst props = defineProps({\r\n  article: {\r\n    type: Object as PropType<Article>,\r\n    required: true,\r\n  },\r\n});\r\n\r\n// 定义点击事件\r\n// eslint-disable-next-line no-undef\r\nconst emit = defineEmits([\"click\"]);\r\n\r\nconst handleClick = () => {\r\n  emit(\"click\", props.article.id);\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* 卡片基础样式 */\r\n.article-card {\r\n  border-radius: var(--radius-lg);\r\n  overflow: hidden;\r\n  cursor: pointer;\r\n  transition: all var(--transition-normal);\r\n  background-color: var(--bg-color);\r\n  border: 1px solid var(--border-color);\r\n  box-shadow: var(--shadow-light);\r\n  position: relative;\r\n}\r\n\r\n/* 卡片悬停效果 */\r\n.article-card:hover {\r\n  transform: translateY(-6px);\r\n  box-shadow: var(--shadow-medium);\r\n  border-color: var(--primary-light);\r\n}\r\n\r\n/* 卡片点击效果 */\r\n.article-card:active {\r\n  transform: translateY(-3px);\r\n}\r\n\r\n/* 图片容器 - 设置固定宽高比 */\r\n.image-container {\r\n  position: relative;\r\n  width: 100%;\r\n  padding-bottom: 66.67%; /* 3:2的宽高比 */\r\n  overflow: hidden;\r\n  transition: all var(--transition-normal);\r\n}\r\n\r\n/* 悬停时图片缩放效果 */\r\n.article-card:hover .image-container {\r\n  transform: scale(1.02);\r\n}\r\n\r\n/* 文章图片样式 */\r\n.article-image {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover;\r\n  transition: transform var(--transition-slow);\r\n}\r\n\r\n/* 图片悬停缩放 */\r\n.article-card:hover .article-image {\r\n  transform: scale(1.05);\r\n}\r\n\r\n/* 图片悬停渐变遮罩 */\r\n.image-overlay {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background: linear-gradient(\r\n    135deg,\r\n    rgba(24, 144, 255, 0) 0%,\r\n    rgba(24, 144, 255, 0.1) 100%\r\n  );\r\n  opacity: 0;\r\n  transition: opacity var(--transition-normal);\r\n}\r\n\r\n.article-card:hover .image-overlay {\r\n  opacity: 1;\r\n}\r\n\r\n/* 卡片元数据样式 */\r\n.card-meta {\r\n  padding: var(--spacing-lg);\r\n  transition: all var(--transition-normal);\r\n}\r\n\r\n/* Ant Design 卡片标题样式覆盖 */\r\n:deep(.ant-card-meta-title) {\r\n  font-size: var(--font-size-lg);\r\n  font-weight: 600;\r\n  color: var(--text-primary);\r\n  margin-bottom: var(--spacing-xs);\r\n  display: -webkit-box;\r\n  -webkit-box-orient: vertical;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  transition: color var(--transition-fast);\r\n}\r\n\r\n:deep(.ant-card-meta-title:hover) {\r\n  color: var(--primary-color);\r\n}\r\n\r\n/* Ant Design 卡片描述样式覆盖 */\r\n:deep(.ant-card-meta-description) {\r\n  font-size: var(--font-size-sm);\r\n  color: var(--text-tertiary);\r\n  margin-bottom: 0;\r\n}\r\n\r\n/* 点击指示器 */\r\n.click-indicator {\r\n  position: absolute;\r\n  bottom: 10px;\r\n  right: 15px;\r\n  opacity: 0;\r\n  transform: translateY(10px);\r\n  transition: all var(--transition-normal);\r\n}\r\n\r\n.article-card:hover .click-indicator {\r\n  opacity: 1;\r\n  transform: translateY(0);\r\n}\r\n\r\n.click-indicator span {\r\n  display: inline-block;\r\n  background-color: rgba(255, 255, 255, 0.9);\r\n  color: var(--primary-color);\r\n  font-size: var(--font-size-xs);\r\n  padding: 4px 10px;\r\n  border-radius: var(--radius-full);\r\n  box-shadow: var(--shadow-light);\r\n}\r\n\r\n/* 加载动画 */\r\n@keyframes fadeInUp {\r\n  from {\r\n    opacity: 0;\r\n    transform: translateY(20px);\r\n  }\r\n  to {\r\n    opacity: 1;\r\n    transform: translateY(0);\r\n  }\r\n}\r\n\r\n/* 延迟动画效果，用于多个卡片时产生错开的动画效果 */\r\n.article-card {\r\n  animation: fadeInUp 0.5s ease forwards;\r\n}\r\n\r\n/* 响应式设计 */\r\n@media (max-width: 768px) {\r\n  .article-card {\r\n    border-radius: var(--radius-md);\r\n  }\r\n\r\n  .card-meta {\r\n    padding: var(--spacing-md);\r\n  }\r\n\r\n  :deep(.ant-card-meta-title) {\r\n    font-size: var(--font-size-base);\r\n  }\r\n}\r\n</style>\r\n","<!-- eslint-disable -->\r\n<template>\r\n  <a-card hoverable class=\"article-card\" @click=\"handleClick\">\r\n    <!-- 封面图区域 -->\r\n    <template #cover>\r\n      <div class=\"image-container\">\r\n        <img\r\n          :src=\"article.coverImg\"\r\n          :alt=\"article.title\"\r\n          class=\"article-image\"\r\n          loading=\"lazy\"\r\n        />\r\n        <!-- 悬停时的渐变遮罩 -->\r\n        <div class=\"image-overlay\"></div>\r\n      </div>\r\n    </template>\r\n\r\n    <!-- 卡片内容 -->\r\n    <a-card-meta\r\n      :title=\"article.title\"\r\n      :description=\"article.date\"\r\n      class=\"card-meta\"\r\n    />\r\n\r\n    <!-- 点击指示器 -->\r\n    <div class=\"click-indicator\">\r\n      <span>点击查看详情</span>\r\n    </div>\r\n  </a-card>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport type { PropType } from \"vue\";\r\n\r\n// 定义文章数据类型\r\ninterface Article {\r\n  id: number;\r\n  title: string;\r\n  date: string;\r\n  content: string;\r\n  coverImg: string;\r\n}\r\n\r\n// 接收文章数据作为prop\r\n// eslint-disable-next-line no-undef\r\nconst props = defineProps({\r\n  article: {\r\n    type: Object as PropType<Article>,\r\n    required: true,\r\n  },\r\n});\r\n\r\n// 定义点击事件\r\n// eslint-disable-next-line no-undef\r\nconst emit = defineEmits([\"click\"]);\r\n\r\nconst handleClick = () => {\r\n  emit(\"click\", props.article.id);\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* 卡片基础样式 */\r\n.article-card {\r\n  border-radius: var(--radius-lg);\r\n  overflow: hidden;\r\n  cursor: pointer;\r\n  transition: all var(--transition-normal);\r\n  background-color: var(--bg-color);\r\n  border: 1px solid var(--border-color);\r\n  box-shadow: var(--shadow-light);\r\n  position: relative;\r\n}\r\n\r\n/* 卡片悬停效果 */\r\n.article-card:hover {\r\n  transform: translateY(-6px);\r\n  box-shadow: var(--shadow-medium);\r\n  border-color: var(--primary-light);\r\n}\r\n\r\n/* 卡片点击效果 */\r\n.article-card:active {\r\n  transform: translateY(-3px);\r\n}\r\n\r\n/* 图片容器 - 设置固定宽高比 */\r\n.image-container {\r\n  position: relative;\r\n  width: 100%;\r\n  padding-bottom: 66.67%; /* 3:2的宽高比 */\r\n  overflow: hidden;\r\n  transition: all var(--transition-normal);\r\n}\r\n\r\n/* 悬停时图片缩放效果 */\r\n.article-card:hover .image-container {\r\n  transform: scale(1.02);\r\n}\r\n\r\n/* 文章图片样式 */\r\n.article-image {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover;\r\n  transition: transform var(--transition-slow);\r\n}\r\n\r\n/* 图片悬停缩放 */\r\n.article-card:hover .article-image {\r\n  transform: scale(1.05);\r\n}\r\n\r\n/* 图片悬停渐变遮罩 */\r\n.image-overlay {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background: linear-gradient(\r\n    135deg,\r\n    rgba(24, 144, 255, 0) 0%,\r\n    rgba(24, 144, 255, 0.1) 100%\r\n  );\r\n  opacity: 0;\r\n  transition: opacity var(--transition-normal);\r\n}\r\n\r\n.article-card:hover .image-overlay {\r\n  opacity: 1;\r\n}\r\n\r\n/* 卡片元数据样式 */\r\n.card-meta {\r\n  padding: var(--spacing-lg);\r\n  transition: all var(--transition-normal);\r\n}\r\n\r\n/* Ant Design 卡片标题样式覆盖 */\r\n:deep(.ant-card-meta-title) {\r\n  font-size: var(--font-size-lg);\r\n  font-weight: 600;\r\n  color: var(--text-primary);\r\n  margin-bottom: var(--spacing-xs);\r\n  display: -webkit-box;\r\n  -webkit-box-orient: vertical;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  transition: color var(--transition-fast);\r\n}\r\n\r\n:deep(.ant-card-meta-title:hover) {\r\n  color: var(--primary-color);\r\n}\r\n\r\n/* Ant Design 卡片描述样式覆盖 */\r\n:deep(.ant-card-meta-description) {\r\n  font-size: var(--font-size-sm);\r\n  color: var(--text-tertiary);\r\n  margin-bottom: 0;\r\n}\r\n\r\n/* 点击指示器 */\r\n.click-indicator {\r\n  position: absolute;\r\n  bottom: 10px;\r\n  right: 15px;\r\n  opacity: 0;\r\n  transform: translateY(10px);\r\n  transition: all var(--transition-normal);\r\n}\r\n\r\n.article-card:hover .click-indicator {\r\n  opacity: 1;\r\n  transform: translateY(0);\r\n}\r\n\r\n.click-indicator span {\r\n  display: inline-block;\r\n  background-color: rgba(255, 255, 255, 0.9);\r\n  color: var(--primary-color);\r\n  font-size: var(--font-size-xs);\r\n  padding: 4px 10px;\r\n  border-radius: var(--radius-full);\r\n  box-shadow: var(--shadow-light);\r\n}\r\n\r\n/* 加载动画 */\r\n@keyframes fadeInUp {\r\n  from {\r\n    opacity: 0;\r\n    transform: translateY(20px);\r\n  }\r\n  to {\r\n    opacity: 1;\r\n    transform: translateY(0);\r\n  }\r\n}\r\n\r\n/* 延迟动画效果，用于多个卡片时产生错开的动画效果 */\r\n.article-card {\r\n  animation: fadeInUp 0.5s ease forwards;\r\n}\r\n\r\n/* 响应式设计 */\r\n@media (max-width: 768px) {\r\n  .article-card {\r\n    border-radius: var(--radius-md);\r\n  }\r\n\r\n  .card-meta {\r\n    padding: var(--spacing-md);\r\n  }\r\n\r\n  :deep(.ant-card-meta-title) {\r\n    font-size: var(--font-size-base);\r\n  }\r\n}\r\n</style>\r\n","import script from \"./ArticleCard.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./ArticleCard.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./ArticleCard.vue?vue&type=style&index=0&id=6a1e9c7c&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-6a1e9c7c\"]])\n\nexport default __exports__","import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createBlock as _createBlock } from \"vue\"\n\nconst _hoisted_1 = {\n  key: 0,\n  class: \"modal-content\"\n}\nconst _hoisted_2 = { class: \"modal-title\" }\nconst _hoisted_3 = { class: \"modal-date\" }\nconst _hoisted_4 = { class: \"content-wrapper\" }\nconst _hoisted_5 = [\"src\", \"alt\"]\nconst _hoisted_6 = { key: 1 }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_a_modal = _resolveComponent(\"a-modal\")!\n\n  return (_openBlock(), _createBlock(_component_a_modal, {\n    open: _ctx.show,\n    title: \"文章详情\",\n    onCancel: _ctx.closeModal,\n    \"onUpdate:open\": _ctx.handleOpenChange,\n    width: \"800px\",\n    footer: null\n  }, {\n    default: _withCtx(() => [\n      (_ctx.detail)\n        ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n            _createElementVNode(\"h2\", _hoisted_2, _toDisplayString(_ctx.detail.title), 1),\n            _createElementVNode(\"p\", _hoisted_3, _toDisplayString(_ctx.detail.date), 1),\n            _createElementVNode(\"div\", _hoisted_4, [\n              (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.contentParagraphs, (paragraph, index) => {\n                return (_openBlock(), _createElementBlock(\"div\", {\n                  key: index,\n                  class: \"content-paragraph\"\n                }, [\n                  (paragraph.trim())\n                    ? (_openBlock(), _createElementBlock(\"img\", {\n                        key: 0,\n                        src: _ctx.getImageForParagraph(index),\n                        alt: `装饰图片 ${index+1}`,\n                        class: \"paragraph-image\"\n                      }, null, 8, _hoisted_5))\n                    : _createCommentVNode(\"\", true),\n                  _createElementVNode(\"span\", null, _toDisplayString(paragraph), 1)\n                ]))\n              }), 128))\n            ])\n          ]))\n        : (_openBlock(), _createElementBlock(\"div\", _hoisted_6, [...(_cache[0] || (_cache[0] = [\n            _createElementVNode(\"p\", null, \"暂无内容\", -1)\n          ]))]))\n    ]),\n    _: 1\n  }, 8, [\"open\", \"onCancel\", \"onUpdate:open\"]))\n}","<template>\n  <a-modal\n    :open=\"show\"\n    title=\"文章详情\"\n    @cancel=\"closeModal\"\n    @update:open=\"handleOpenChange\"\n    width=\"800px\"\n    :footer=\"null\"\n  >\n    <div v-if=\"detail\" class=\"modal-content\">\n      <h2 class=\"modal-title\">{{ detail.title }}</h2>\n      <p class=\"modal-date\">{{ detail.date }}</p>\n      <div class=\"content-wrapper\">\n        <div \n          v-for=\"(paragraph, index) in contentParagraphs\"\n          :key=\"index\"\n          class=\"content-paragraph\"\n        >\n          <img \n            v-if=\"paragraph.trim()\" \n            :src=\"getImageForParagraph(index)\"\n            :alt=\"`装饰图片 ${index+1}`\"\n            class=\"paragraph-image\"\n          />\n          <span>{{ paragraph }}</span>\n        </div>\n      </div>\n    </div>\n    <div v-else>\n      <p>暂无内容</p>\n    </div>\n  </a-modal>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, computed } from 'vue';\nimport { Modal } from 'ant-design-vue';\n\n// 定义详情数据类型\ninterface Detail {\n  id: number;\n  title: string;\n  date: string;\n  content: string;\n  coverImg: string;\n}\n\nexport default defineComponent({\n  name: 'DetailModal',\n  components: {\n    'a-modal': Modal\n  },\n  props: {\n    show: {\n      type: Boolean,\n      default: false\n    },\n    detail: {\n      type: Object as () => Detail | null,\n      default: null\n    }\n  },\n  emits: ['close'],\n  setup(props) {\n    // 将内容按换行符分割成段落\n    const contentParagraphs = computed(() => {\n      if (!props.detail?.content) return [];\n      return props.detail.content.split('\\n\\n');\n    });\n\n    // 可用的装饰图片列表\n    const decorativeImages = [\n      require('../assets/images/C.C.png'),\n      require('../assets/images/你别死啊.png'),\n      require('../assets/images/我要打十个.png'),\n      require('../assets/images/鬼雾.png'),\n      require('../assets/images/鲁鲁修.png'),\n      require('../assets/images/鲜血女王.png')\n    ];\n\n    // 根据段落索引获取图片\n    const getImageForParagraph = (index: number) => {\n      // 循环使用图片列表\n      return decorativeImages[index % decorativeImages.length];\n    };\n\n    return {\n      contentParagraphs,\n      getImageForParagraph\n    };\n  },\n  methods: {\n    closeModal() {\n      this.$emit('close');\n    },\n    handleOpenChange(newValue: boolean) {\n      if (!newValue) {\n        this.$emit('close');\n      }\n    }\n  }\n});\n</script>\n\n<style scoped>\n.modal-content {\n  padding: 16px 0;\n}\n\n.modal-title {\n  color: #333;\n  font-size: 24px;\n  margin-bottom: 12px;\n  font-weight: 600;\n}\n\n.modal-date {\n  color: #999;\n  font-size: 14px;\n  margin-bottom: 24px;\n}\n\n.content-wrapper {\n  font-size: 16px;\n  line-height: 1.8;\n}\n\n.content-paragraph {\n  display: flex;\n  align-items: flex-start;\n  margin-bottom: 20px;\n  padding: 12px;\n  background-color: #f8f9fa;\n  border-radius: 8px;\n  transition: all 0.3s ease;\n}\n\n.content-paragraph:hover {\n  background-color: #e9ecef;\n  transform: translateX(5px);\n}\n\n.paragraph-image {\n  width: 40px;\n  height: 40px;\n  object-fit: cover;\n  margin-right: 12px;\n  border-radius: 50%;\n  flex-shrink: 0;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n</style>","import { render } from \"./DetailModal.vue?vue&type=template&id=f9ff0fac&scoped=true&ts=true\"\nimport script from \"./DetailModal.vue?vue&type=script&lang=ts\"\nexport * from \"./DetailModal.vue?vue&type=script&lang=ts\"\n\nimport \"./DetailModal.vue?vue&type=style&index=0&id=f9ff0fac&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-f9ff0fac\"]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { unref as _unref, createVNode as _createVNode, createElementVNode as _createElementVNode, vShow as _vShow, normalizeClass as _normalizeClass, withDirectives as _withDirectives, Transition as _Transition, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"back-to-top-inner\" }\n\nimport { UpOutlined } from '@ant-design/icons-vue';\r\nimport { ref, onMounted, onUnmounted } from 'vue';\r\n\r\n// 控制按钮显示状态\r\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'BackToTop',\n  setup(__props) {\n\r\nconst show = ref(false);\r\n\r\n// 监听滚动事件\r\nconst handleScroll = () => {\r\n  // 滚动超过300px时显示按钮\r\n  show.value = window.scrollY > 300;\r\n};\r\n\r\n// 回到顶部方法\r\nconst backToTop = () => {\r\n  // 添加滚动动画\r\n  const scrollDuration = 500; // 滚动动画持续时间（毫秒）\r\n  const scrollStep = -window.scrollY / (scrollDuration / 15);\r\n  \r\n  const scrollInterval = setInterval(() => {\r\n    if (window.scrollY > 0) {\r\n      window.scrollBy(0, scrollStep);\r\n    } else {\r\n      clearInterval(scrollInterval);\r\n    }\r\n  }, 15);\r\n};\r\n\r\n// 挂载时添加滚动监听\r\nonMounted(() => {\r\n  window.addEventListener('scroll', handleScroll);\r\n});\r\n\r\n// 卸载时移除滚动监听\r\nonUnmounted(() => {\r\n  window.removeEventListener('scroll', handleScroll);\r\n});\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createBlock(_Transition, { name: \"fade\" }, {\n    default: _withCtx(() => [\n      _withDirectives(_createElementVNode(\"button\", {\n        class: _normalizeClass([\"back-to-top\", { 'is-visible': show.value }]),\n        onClick: backToTop,\n        \"aria-label\": \"回到顶部\"\n      }, [\n        _createElementVNode(\"div\", _hoisted_1, [\n          _createVNode(_unref(UpOutlined), { class: \"back-to-top-icon\" })\n        ]),\n        _cache[0] || (_cache[0] = _createElementVNode(\"span\", { class: \"back-to-top-text\" }, \"回到顶部\", -1))\n      ], 2), [\n        [_vShow, show.value]\n      ])\n    ]),\n    _: 1\n  }))\n}\n}\n\n})","<template>\r\n  <transition name=\"fade\">\r\n    <button\r\n      v-show=\"show\"\r\n      class=\"back-to-top\"\r\n      :class=\"{ 'is-visible': show }\"\r\n      @click=\"backToTop\"\r\n      aria-label=\"回到顶部\"\r\n    >\r\n      <div class=\"back-to-top-inner\">\r\n        <UpOutlined class=\"back-to-top-icon\" />\r\n      </div>\r\n      <span class=\"back-to-top-text\">回到顶部</span>\r\n    </button>\r\n  </transition>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { UpOutlined } from '@ant-design/icons-vue';\r\nimport { ref, onMounted, onUnmounted } from 'vue';\r\n\r\n// 控制按钮显示状态\r\nconst show = ref(false);\r\n\r\n// 监听滚动事件\r\nconst handleScroll = () => {\r\n  // 滚动超过300px时显示按钮\r\n  show.value = window.scrollY > 300;\r\n};\r\n\r\n// 回到顶部方法\r\nconst backToTop = () => {\r\n  // 添加滚动动画\r\n  const scrollDuration = 500; // 滚动动画持续时间（毫秒）\r\n  const scrollStep = -window.scrollY / (scrollDuration / 15);\r\n  \r\n  const scrollInterval = setInterval(() => {\r\n    if (window.scrollY > 0) {\r\n      window.scrollBy(0, scrollStep);\r\n    } else {\r\n      clearInterval(scrollInterval);\r\n    }\r\n  }, 15);\r\n};\r\n\r\n// 挂载时添加滚动监听\r\nonMounted(() => {\r\n  window.addEventListener('scroll', handleScroll);\r\n});\r\n\r\n// 卸载时移除滚动监听\r\nonUnmounted(() => {\r\n  window.removeEventListener('scroll', handleScroll);\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n/* 淡入淡出动画 */\r\n.fade-enter-active,\r\n.fade-leave-active {\r\n  transition: opacity 0.3s;\r\n}\r\n\r\n.fade-enter-from,\r\n.fade-leave-to {\r\n  opacity: 0;\r\n}\r\n\r\n/* 回到顶部按钮容器 */\r\n.back-to-top {\r\n  position: fixed;\r\n  bottom: 40px;\r\n  right: 40px;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 16px;\r\n  cursor: pointer;\r\n  z-index: 100;\r\n  transform: translateY(20px);\r\n  opacity: 0;\r\n  transition: all 0.3s;\r\n  border: none;\r\n  background: none;\r\n}\r\n\r\n/* 按钮可见时的样式 */\r\n.back-to-top.is-visible {\r\n  transform: translateY(0);\r\n  opacity: 1;\r\n}\r\n\r\n/* 按钮内部圆形容器 */\r\n.back-to-top-inner {\r\n  width: 56px;\r\n  height: 56px;\r\n  background-color: #1890ff;\r\n  border-radius: 50%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  position: relative;\r\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\r\n  transition: all 0.3s;\r\n  overflow: hidden;\r\n}\r\n\r\n/* 按钮悬停效果 */\r\n.back-to-top:hover .back-to-top-inner {\r\n  background-color: #40a9ff;\r\n  transform: translateY(-2px);\r\n  box-shadow: 0 6px 16px rgba(0, 0, 0, 0.2);\r\n}\r\n\r\n/* 按钮点击效果 */\r\n.back-to-top:active .back-to-top-inner {\r\n  transform: translateY(0);\r\n}\r\n\r\n/* 渐变背景效果 */\r\n.back-to-top-inner::before {\r\n  content: '';\r\n  position: absolute;\r\n  top: -50%;\r\n  left: -50%;\r\n  width: 200%;\r\n  height: 200%;\r\n  background: linear-gradient(\r\n    45deg,\r\n    transparent 0%,\r\n    rgba(255, 255, 255, 0.2) 50%,\r\n    transparent 100%\r\n  );\r\n  transform: rotate(-45deg);\r\n  transition: all 0.6s;\r\n}\r\n\r\n.back-to-top:hover .back-to-top-inner::before {\r\n  animation: shimmer 1.5s infinite;\r\n}\r\n\r\n/* 闪烁动画 */\r\n@keyframes shimmer {\r\n  0% {\r\n    transform: translateX(-100%) rotate(-45deg);\r\n  }\r\n  100% {\r\n    transform: translateX(100%) rotate(-45deg);\r\n  }\r\n}\r\n\r\n/* 图标样式 */\r\n.back-to-top-icon {\r\n  font-size: 20px;\r\n  color: white;\r\n  animation: pulse 2s infinite;\r\n}\r\n\r\n/* 脉冲动画 */\r\n@keyframes pulse {\r\n  0%, 100% {\r\n    transform: scale(1);\r\n  }\r\n  50% {\r\n    transform: scale(1.1);\r\n  }\r\n}\r\n\r\n/* 文字样式 */\r\n.back-to-top-text {\r\n  position: absolute;\r\n  right: 65px;\r\n  background-color: white;\r\n  color: #333;\r\n  font-size: 14px;\r\n  padding: 8px 16px;\r\n  border-radius: 20px;\r\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\r\n  white-space: nowrap;\r\n  opacity: 0;\r\n  transform: translateX(10px);\r\n  transition: all 0.3s;\r\n  pointer-events: none;\r\n}\r\n\r\n/* 悬停时显示文字 */\r\n.back-to-top:hover .back-to-top-text {\r\n  opacity: 1;\r\n  transform: translateX(0);\r\n}\r\n\r\n/* 响应式设计 */\r\n@media (max-width: 768px) {\r\n  .back-to-top {\r\n    bottom: 30px;\r\n    right: 30px;\r\n  }\r\n  \r\n  .back-to-top-inner {\r\n    width: 48px;\r\n    height: 48px;\r\n  }\r\n  \r\n  .back-to-top-icon {\r\n    font-size: 18px;\r\n  }\r\n  \r\n  .back-to-top-text {\r\n    display: none;\r\n  }\r\n}\r\n</style>","<template>\r\n  <transition name=\"fade\">\r\n    <button\r\n      v-show=\"show\"\r\n      class=\"back-to-top\"\r\n      :class=\"{ 'is-visible': show }\"\r\n      @click=\"backToTop\"\r\n      aria-label=\"回到顶部\"\r\n    >\r\n      <div class=\"back-to-top-inner\">\r\n        <UpOutlined class=\"back-to-top-icon\" />\r\n      </div>\r\n      <span class=\"back-to-top-text\">回到顶部</span>\r\n    </button>\r\n  </transition>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { UpOutlined } from '@ant-design/icons-vue';\r\nimport { ref, onMounted, onUnmounted } from 'vue';\r\n\r\n// 控制按钮显示状态\r\nconst show = ref(false);\r\n\r\n// 监听滚动事件\r\nconst handleScroll = () => {\r\n  // 滚动超过300px时显示按钮\r\n  show.value = window.scrollY > 300;\r\n};\r\n\r\n// 回到顶部方法\r\nconst backToTop = () => {\r\n  // 添加滚动动画\r\n  const scrollDuration = 500; // 滚动动画持续时间（毫秒）\r\n  const scrollStep = -window.scrollY / (scrollDuration / 15);\r\n  \r\n  const scrollInterval = setInterval(() => {\r\n    if (window.scrollY > 0) {\r\n      window.scrollBy(0, scrollStep);\r\n    } else {\r\n      clearInterval(scrollInterval);\r\n    }\r\n  }, 15);\r\n};\r\n\r\n// 挂载时添加滚动监听\r\nonMounted(() => {\r\n  window.addEventListener('scroll', handleScroll);\r\n});\r\n\r\n// 卸载时移除滚动监听\r\nonUnmounted(() => {\r\n  window.removeEventListener('scroll', handleScroll);\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n/* 淡入淡出动画 */\r\n.fade-enter-active,\r\n.fade-leave-active {\r\n  transition: opacity 0.3s;\r\n}\r\n\r\n.fade-enter-from,\r\n.fade-leave-to {\r\n  opacity: 0;\r\n}\r\n\r\n/* 回到顶部按钮容器 */\r\n.back-to-top {\r\n  position: fixed;\r\n  bottom: 40px;\r\n  right: 40px;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 16px;\r\n  cursor: pointer;\r\n  z-index: 100;\r\n  transform: translateY(20px);\r\n  opacity: 0;\r\n  transition: all 0.3s;\r\n  border: none;\r\n  background: none;\r\n}\r\n\r\n/* 按钮可见时的样式 */\r\n.back-to-top.is-visible {\r\n  transform: translateY(0);\r\n  opacity: 1;\r\n}\r\n\r\n/* 按钮内部圆形容器 */\r\n.back-to-top-inner {\r\n  width: 56px;\r\n  height: 56px;\r\n  background-color: #1890ff;\r\n  border-radius: 50%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  position: relative;\r\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\r\n  transition: all 0.3s;\r\n  overflow: hidden;\r\n}\r\n\r\n/* 按钮悬停效果 */\r\n.back-to-top:hover .back-to-top-inner {\r\n  background-color: #40a9ff;\r\n  transform: translateY(-2px);\r\n  box-shadow: 0 6px 16px rgba(0, 0, 0, 0.2);\r\n}\r\n\r\n/* 按钮点击效果 */\r\n.back-to-top:active .back-to-top-inner {\r\n  transform: translateY(0);\r\n}\r\n\r\n/* 渐变背景效果 */\r\n.back-to-top-inner::before {\r\n  content: '';\r\n  position: absolute;\r\n  top: -50%;\r\n  left: -50%;\r\n  width: 200%;\r\n  height: 200%;\r\n  background: linear-gradient(\r\n    45deg,\r\n    transparent 0%,\r\n    rgba(255, 255, 255, 0.2) 50%,\r\n    transparent 100%\r\n  );\r\n  transform: rotate(-45deg);\r\n  transition: all 0.6s;\r\n}\r\n\r\n.back-to-top:hover .back-to-top-inner::before {\r\n  animation: shimmer 1.5s infinite;\r\n}\r\n\r\n/* 闪烁动画 */\r\n@keyframes shimmer {\r\n  0% {\r\n    transform: translateX(-100%) rotate(-45deg);\r\n  }\r\n  100% {\r\n    transform: translateX(100%) rotate(-45deg);\r\n  }\r\n}\r\n\r\n/* 图标样式 */\r\n.back-to-top-icon {\r\n  font-size: 20px;\r\n  color: white;\r\n  animation: pulse 2s infinite;\r\n}\r\n\r\n/* 脉冲动画 */\r\n@keyframes pulse {\r\n  0%, 100% {\r\n    transform: scale(1);\r\n  }\r\n  50% {\r\n    transform: scale(1.1);\r\n  }\r\n}\r\n\r\n/* 文字样式 */\r\n.back-to-top-text {\r\n  position: absolute;\r\n  right: 65px;\r\n  background-color: white;\r\n  color: #333;\r\n  font-size: 14px;\r\n  padding: 8px 16px;\r\n  border-radius: 20px;\r\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\r\n  white-space: nowrap;\r\n  opacity: 0;\r\n  transform: translateX(10px);\r\n  transition: all 0.3s;\r\n  pointer-events: none;\r\n}\r\n\r\n/* 悬停时显示文字 */\r\n.back-to-top:hover .back-to-top-text {\r\n  opacity: 1;\r\n  transform: translateX(0);\r\n}\r\n\r\n/* 响应式设计 */\r\n@media (max-width: 768px) {\r\n  .back-to-top {\r\n    bottom: 30px;\r\n    right: 30px;\r\n  }\r\n  \r\n  .back-to-top-inner {\r\n    width: 48px;\r\n    height: 48px;\r\n  }\r\n  \r\n  .back-to-top-icon {\r\n    font-size: 18px;\r\n  }\r\n  \r\n  .back-to-top-text {\r\n    display: none;\r\n  }\r\n}\r\n</style>","import script from \"./BackToTop.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./BackToTop.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./BackToTop.vue?vue&type=style&index=0&id=01289707&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-01289707\"]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createElementVNode as _createElementVNode, normalizeStyle as _normalizeStyle, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, withModifiers as _withModifiers, createCommentVNode as _createCommentVNode, vModelText as _vModelText, withDirectives as _withDirectives } from \"vue\"\nimport _imports_0 from '../assets/images/milet/milet底部.jpg'\n\n\nconst _hoisted_1 = [\"src\", \"alt\"]\nconst _hoisted_2 = { class: \"music-player-container\" }\nconst _hoisted_3 = { class: \"player-controls\" }\nconst _hoisted_4 = { class: \"song-info\" }\nconst _hoisted_5 = { class: \"song-title\" }\nconst _hoisted_6 = { class: \"song-artist\" }\nconst _hoisted_7 = { class: \"progress-container\" }\nconst _hoisted_8 = { class: \"progress-time\" }\nconst _hoisted_9 = { class: \"progress-bar\" }\nconst _hoisted_10 = { class: \"progress-time\" }\nconst _hoisted_11 = { class: \"control-buttons\" }\nconst _hoisted_12 = [\"title\"]\nconst _hoisted_13 = { class: \"icon\" }\nconst _hoisted_14 = { class: \"icon\" }\nconst _hoisted_15 = { class: \"playlist-container\" }\nconst _hoisted_16 = { class: \"playlist-content\" }\nconst _hoisted_17 = [\"onClick\"]\nconst _hoisted_18 = { class: \"playlist-item-info\" }\nconst _hoisted_19 = { class: \"playlist-item-title\" }\nconst _hoisted_20 = { class: \"playlist-item-artist\" }\nconst _hoisted_21 = { class: \"playlist-item-duration\" }\nconst _hoisted_22 = {\n  key: 1,\n  class: \"volume-control\"\n}\n\nimport { ref, onMounted, onUnmounted, computed, reactive } from 'vue';\n\n// 定义歌曲类型\ninterface Song {\n  id: number;\n  title: string;\n  artist: string;\n  src: string;\n  duration?: string;\n}\n\n// 创建音频上下文\ninterface FloatingImage {\n  id: number;\n  src: string;\n  style: { [key: string]: string };\n}\n\n// 悬浮图片数据\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'MusicPlayer',\n  setup(__props) {\n\nconst audio = new Audio();\n\n// 播放列表\nconst playlist = ref<Song[]>([]);\n\n// 当前状态\nconst currentIndex = ref(0);\nconst isPlaying = ref(false);\nconst showPlaylist = ref(false);\nconst showVolume = ref(false);\nconst volume = ref(0.7);\nconst isMuted = ref(false);\nconst currentTime = ref(0);\nconst duration = ref(0);\nconst isDragging = ref(false);\n\n// 当前歌曲\nconst currentSong = computed(() => {\n  if (playlist.value.length === 0) {\n    return { title: '暂无歌曲', artist: '', src: '' };\n  }\n  return playlist.value[currentIndex.value];\n});\n\n// 定义悬浮图片的接口类型\nconst floatingImages = reactive<FloatingImage[]>([\n  { id: 1, src: require('../assets/images/milet/milet_01.jpg'), style: {} },\n  { id: 2, src: require('../assets/images/milet/milet_02.jpg'), style: {} },\n  { id: 3, src: require('../assets/images/milet/milet_03.jpg'), style: {} },\n  { id: 4, src: require('../assets/images/milet/milet_04.jpg'), style: {} }\n]);\n\n// 随机调整图片位置，避免重叠\nconst randomizeImagePositions = () => {\n  // 随机打乱图片数组\n  const shuffledImages = [...floatingImages].sort(() => Math.random() - 0.5);\n  \n  // 定义左右两侧的图片\n  const leftImages = shuffledImages.slice(0, 2);\n  const rightImages = shuffledImages.slice(2, 4);\n  \n  // 设置左侧图片位置 - 覆盖上下部分\n  leftImages.forEach((img, index) => {\n    img.style.left = `${3 + Math.random() * 2}%`; // 3%-5% 随机位置\n    img.style.right = 'auto';\n    // 一个在15%-35%（上部分），一个在55%-75%（下部分）\n    const topPosition = index === 0 ? \n      `${15 + Math.floor(Math.random() * 20)}%` : \n      `${55 + Math.floor(Math.random() * 20)}%`;\n    img.style.top = topPosition;\n    img.style.animationDelay = `${Math.random() * 2}s`;\n    img.style.zIndex = `${10 + index}`; // 确保层级不同\n  });\n  \n  // 设置右侧图片位置 - 覆盖上下部分\n  rightImages.forEach((img, index) => {\n    img.style.left = 'auto';\n    img.style.right = `${3 + Math.random() * 2}%`; // 3%-5% 随机位置\n    // 一个在25%-45%（上部分），一个在65%-85%（下部分）\n    const topPosition = index === 0 ? \n      `${25 + Math.floor(Math.random() * 20)}%` : \n      `${65 + Math.floor(Math.random() * 20)}%`;\n    img.style.top = topPosition;\n    img.style.animationDelay = `${Math.random() * 2}s`;\n    img.style.zIndex = `${10 + index}`; // 确保层级不同\n  });\n};\n\n// 定时随机变换图片位置\nlet positionInterval: number | null = null;\nconst startPositionAnimation = () => {\n  if (positionInterval) clearInterval(positionInterval);\n  positionInterval = window.setInterval(randomizeImagePositions, 8000);\n};\n\nconst stopPositionAnimation = () => {\n  if (positionInterval) {\n    clearInterval(positionInterval);\n    positionInterval = null;\n  }\n};\n\n// 进度百分比\nconst progressPercentage = computed(() => {\n  if (duration.value === 0) return 0;\n  return (currentTime.value / duration.value) * 100;\n});\n\n// 格式化时间\nconst formatTime = (seconds: number) => {\n  const mins = Math.floor(seconds / 60);\n  const secs = Math.floor(seconds % 60);\n  return `${mins}:${secs < 10 ? '0' + secs : secs}`;\n};\n\n// 解析歌曲标题和艺术家\nconst parseSongInfo = (fileName: string): { title: string; artist: string } => {\n  // 处理不同格式的文件名\n  let artist = 'milet';\n  let title = fileName.replace('.mp3', '');\n  \n  // 处理特殊格式如 \"milet,Aimer,幾田りら - おもかげ\"\n  if (fileName.includes(' - ')) {\n    const parts = fileName.split(' - ');\n    artist = parts[0];\n    title = parts[1].replace('.mp3', '');\n  } \n  // 处理 \"MAN WITH A MISSION,milet - 絆ノ奇跡\"\n  else if (fileName.includes(',')) {\n    const parts = fileName.split('.mp3');\n    title = parts[0];\n  }\n  \n  return { title, artist };\n};\n\n// 加载音乐文件\nconst loadMusicFiles = async () => {\n  // 获取音乐文件夹中的所有mp3文件\n  const musicFiles = [\n    'MAN WITH A MISSION,milet - 絆ノ奇跡.mp3',\n    'milet & Aimer & 幾田りら - おもかげ (produced by Vaundy).mp3',\n    'milet - Again and Again.mp3',\n    'milet - Anytime Anywhere.mp3',\n    'milet - Bluer.mp3',\n    'milet - Come Here (Session1).mp3',\n    'milet - December.mp3',\n    'milet - Final Call.mp3',\n    'milet - Fine Line.mp3',\n    'milet - Flare.mp3',\n    'milet - Fly High.mp3',\n    'milet - Grab the air.mp3',\n    'milet - HALFWAY.mp3',\n    'milet - Hey Song.mp3',\n    'milet - Higher.mp3',\n    'milet - Hit the Lights.mp3',\n    'milet - I still.mp3',\n    'milet - Nobody Knows.mp3',\n    'milet - Noёl In July.mp3',\n    'milet - On the Edge.mp3',\n    'milet - One Reason.mp3',\n    'milet - One Touch.mp3',\n    'milet - Ordinary days.mp3',\n    'milet - Outsider.mp3',\n    'milet - Parachute.mp3',\n    'milet - Prover.mp3',\n    'milet - Rewrite.mp3',\n    'milet - SEVENTH HEAVEN.mp3',\n    'milet - Tell me.mp3',\n    'milet - The Love We\\'ve Made.mp3',\n    'milet - Time Is On Our Side.mp3',\n    'milet - Walkin\\' In My Lane.mp3',\n    'milet - Waterfall.mp3',\n    'milet - Who I Am.mp3',\n    'milet - You & I.mp3',\n    'milet - Your Light.mp3',\n    'milet - b r o k e n.mp3',\n    'milet - checkmate.mp3',\n    'milet - hanataba.mp3',\n    'milet - inside you - From THE FIRST TAKE.mp3',\n    'milet - inside you.mp3',\n    'milet - jam.mp3',\n    'milet - us - From THE FIRST TAKE.mp3',\n    'milet - us.mp3',\n    'milet,Aimer,幾田りら - おもかげ (produced by Vaundy).mp3',\n    'milet,MAN WITH A MISSION - コイコガレ.mp3'\n  ];\n\n  // 创建播放列表\n  playlist.value = musicFiles.map((file, index) => {\n    const { title, artist } = parseSongInfo(file);\n    return {\n      id: index + 1,\n      title,\n      artist,\n      src: require(`../assets/music/${file}`)\n    };\n  });\n\n  // 如果有歌曲，初始化第一首\n  if (playlist.value.length > 0) {\n    await loadSong(currentIndex.value);\n  }\n};\n\n// 加载指定歌曲\nconst loadSong = async (index: number) => {\n  if (index < 0 || index >= playlist.value.length) return;\n  \n  currentIndex.value = index;\n  const song = playlist.value[index];\n  \n  audio.src = song.src;\n  audio.volume = volume.value;\n  \n  // 尝试获取歌曲时长\n  try {\n    await audio.load();\n    if (audio.duration) {\n      duration.value = audio.duration;\n      song.duration = formatTime(audio.duration);\n    }\n  } catch (error) {\n    console.error('加载歌曲失败:', error);\n  }\n};\n\n// 播放/暂停切换\nconst togglePlay = async () => {\n  if (playlist.value.length === 0) return;\n  \n  if (isPlaying.value) {\n    audio.pause();\n  } else {\n    try {\n      await audio.play();\n    } catch (error) {\n      console.error('播放失败:', error);\n      // 处理浏览器的自动播放限制\n      alert('请点击播放器以开始播放音乐');\n    }\n  }\n  isPlaying.value = !isPlaying.value;\n};\n\n// 播放指定歌曲\nconst playSong = async (index: number) => {\n  const wasPlaying = isPlaying.value;\n  await loadSong(index);\n  if (wasPlaying) {\n    await togglePlay();\n  }\n  showPlaylist.value = false;\n};\n\n// 下一首\nconst nextSong = () => {\n  const nextIndex = (currentIndex.value + 1) % playlist.value.length;\n  playSong(nextIndex);\n};\n\n// 上一首\nconst prevSong = () => {\n  const prevIndex = (currentIndex.value - 1 + playlist.value.length) % playlist.value.length;\n  playSong(prevIndex);\n};\n\n// 切换播放列表显示\nconst togglePlaylist = () => {\n  showPlaylist.value = !showPlaylist.value;\n};\n\n// 切换音量控制显示\nconst toggleVolume = () => {\n  showVolume.value = !showVolume.value;\n};\n\n// 更新音量\nconst updateVolume = () => {\n  audio.volume = volume.value;\n  isMuted.value = volume.value === 0;\n};\n\n// 开始拖动进度条\nconst startDragging = () => {\n  isDragging.value = true;\n};\n\n// 设置进度\nconst setProgress = (percentage: number) => {\n  if (duration.value === 0) return;\n  \n  const newTime = (percentage / 100) * duration.value;\n  currentTime.value = newTime;\n  audio.currentTime = newTime;\n};\n\n// 监听鼠标移动（拖动进度条时）\nconst handleMouseMove = (e: MouseEvent) => {\n  if (!isDragging.value) return;\n  \n  const progressBar = document.querySelector('.progress-bar') as HTMLElement;\n  if (!progressBar) return;\n  \n  const rect = progressBar.getBoundingClientRect();\n  const x = e.clientX - rect.left;\n  const percentage = Math.max(0, Math.min(100, (x / rect.width) * 100));\n  \n  // 只更新UI，不更新音频.currentTime\n  currentTime.value = (percentage / 100) * duration.value;\n};\n\n// 监听鼠标释放（结束拖动进度条时）\nconst handleMouseUp = () => {\n  if (!isDragging.value) return;\n  \n  setProgress(progressPercentage.value);\n  isDragging.value = false;\n};\n\n// 音频事件监听\nconst setupAudioEvents = () => {\n  // 更新当前播放时间\n  audio.ontimeupdate = () => {\n    if (!isDragging.value) {\n      currentTime.value = audio.currentTime;\n    }\n  };\n\n  // 歌曲结束时自动播放下一首\n  audio.onended = () => {\n    nextSong();\n  };\n\n  // 加载完成时获取时长\n  audio.onloadedmetadata = () => {\n    duration.value = audio.duration;\n    if (currentSong.value && 'duration' in currentSong.value) {\n      (currentSong.value as Song).duration = formatTime(audio.duration);\n    }\n  };\n};\n\n// 生命周期钩子\nonMounted(() => {\n  loadMusicFiles();\n  setupAudioEvents();\n  \n  // 添加全局鼠标事件监听\n  document.addEventListener('mousemove', handleMouseMove);\n  document.addEventListener('mouseup', handleMouseUp);\n  \n  // 初始化悬浮图片动画\n  randomizeImagePositions();\n  startPositionAnimation();\n});\n\nonUnmounted(() => {\n  // 清理资源\n  audio.pause();\n  document.removeEventListener('mousemove', handleMouseMove);\n  document.removeEventListener('mouseup', handleMouseUp);\n  \n  // 清理定时器\n  stopPositionAnimation();\n});\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(floatingImages, (img) => {\n      return (_openBlock(), _createElementBlock(\"div\", {\n        key: img.id,\n        class: \"floating-image\",\n        style: _normalizeStyle(img.style)\n      }, [\n        _createElementVNode(\"img\", {\n          src: img.src,\n          alt: 'milet ' + img.id,\n          class: \"floating-img\"\n        }, null, 8, _hoisted_1)\n      ], 4))\n    }), 128)),\n    _createElementVNode(\"div\", _hoisted_2, [\n      _cache[6] || (_cache[6] = _createElementVNode(\"div\", { class: \"player-top-image\" }, [\n        _createElementVNode(\"img\", {\n          src: _imports_0,\n          alt: \"milet\",\n          class: \"top-image\"\n        })\n      ], -1)),\n      _createElementVNode(\"div\", _hoisted_3, [\n        _createElementVNode(\"div\", _hoisted_4, [\n          _createElementVNode(\"h3\", _hoisted_5, _toDisplayString(currentSong.value.title), 1),\n          _createElementVNode(\"p\", _hoisted_6, _toDisplayString(currentSong.value.artist), 1)\n        ]),\n        _createElementVNode(\"div\", _hoisted_7, [\n          _createElementVNode(\"span\", _hoisted_8, _toDisplayString(formatTime(currentTime.value)), 1),\n          _createElementVNode(\"div\", _hoisted_9, [\n            _createElementVNode(\"div\", {\n              class: \"progress-fill\",\n              style: _normalizeStyle({ width: progressPercentage.value + '%' })\n            }, null, 4),\n            _createElementVNode(\"div\", {\n              class: \"progress-handle\",\n              style: _normalizeStyle({ left: progressPercentage.value + '%' }),\n              onMousedown: startDragging\n            }, null, 36)\n          ]),\n          _createElementVNode(\"span\", _hoisted_10, _toDisplayString(formatTime(duration.value)), 1)\n        ]),\n        _createElementVNode(\"div\", _hoisted_11, [\n          _createElementVNode(\"button\", {\n            class: \"control-btn list-btn\",\n            onClick: togglePlaylist,\n            title: \"查看播放列表\"\n          }, [...(_cache[2] || (_cache[2] = [\n            _createElementVNode(\"span\", { class: \"icon\" }, \"📋\", -1)\n          ]))]),\n          _createElementVNode(\"button\", {\n            class: \"control-btn prev-btn\",\n            onClick: prevSong,\n            title: \"上一首\"\n          }, [...(_cache[3] || (_cache[3] = [\n            _createElementVNode(\"span\", { class: \"icon\" }, \"⏮️\", -1)\n          ]))]),\n          _createElementVNode(\"button\", {\n            class: \"control-btn play-btn\",\n            onClick: togglePlay,\n            title: isPlaying.value ? '暂停' : '播放'\n          }, [\n            _createElementVNode(\"span\", _hoisted_13, _toDisplayString(isPlaying.value ? '⏸️' : '▶️'), 1)\n          ], 8, _hoisted_12),\n          _createElementVNode(\"button\", {\n            class: \"control-btn next-btn\",\n            onClick: nextSong,\n            title: \"下一首\"\n          }, [...(_cache[4] || (_cache[4] = [\n            _createElementVNode(\"span\", { class: \"icon\" }, \"⏭️\", -1)\n          ]))]),\n          _createElementVNode(\"button\", {\n            class: \"control-btn volume-btn\",\n            onClick: toggleVolume,\n            onDblclick: _cache[0] || (_cache[0] = () => { volume.value = volume.value > 0 ? 0 : 0.7; updateVolume(); }),\n            title: \"音量 (双击静音)\"\n          }, [\n            _createElementVNode(\"span\", _hoisted_14, _toDisplayString(isMuted.value ? '🔇' : '🔊'), 1)\n          ], 32)\n        ])\n      ]),\n      (showPlaylist.value)\n        ? (_openBlock(), _createElementBlock(\"div\", {\n            key: 0,\n            class: \"playlist-overlay\",\n            onClick: _withModifiers(togglePlaylist, [\"self\"])\n          }, [\n            _createElementVNode(\"div\", _hoisted_15, [\n              _createElementVNode(\"div\", { class: \"playlist-header\" }, [\n                _cache[5] || (_cache[5] = _createElementVNode(\"h3\", null, \"播放列表\", -1)),\n                _createElementVNode(\"button\", {\n                  class: \"close-btn\",\n                  onClick: togglePlaylist\n                }, \"×\")\n              ]),\n              _createElementVNode(\"div\", _hoisted_16, [\n                (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(playlist.value, (song, index) => {\n                  return (_openBlock(), _createElementBlock(\"div\", {\n                    key: index,\n                    class: _normalizeClass([\"playlist-item\", { 'active': index === currentIndex.value }]),\n                    onClick: ($event: any) => (playSong(index))\n                  }, [\n                    _createElementVNode(\"div\", _hoisted_18, [\n                      _createElementVNode(\"div\", _hoisted_19, _toDisplayString(song.title), 1),\n                      _createElementVNode(\"div\", _hoisted_20, _toDisplayString(song.artist), 1)\n                    ]),\n                    _createElementVNode(\"div\", _hoisted_21, _toDisplayString(song.duration), 1)\n                  ], 10, _hoisted_17))\n                }), 128))\n              ])\n            ])\n          ]))\n        : _createCommentVNode(\"\", true),\n      (showVolume.value)\n        ? (_openBlock(), _createElementBlock(\"div\", _hoisted_22, [\n            _withDirectives(_createElementVNode(\"input\", {\n              type: \"range\",\n              min: \"0\",\n              max: \"1\",\n              step: \"0.01\",\n              \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => ((volume).value = $event)),\n              onInput: updateVolume,\n              class: \"volume-slider\"\n            }, null, 544), [\n              [_vModelText, volume.value]\n            ])\n          ]))\n        : _createCommentVNode(\"\", true)\n    ])\n  ], 64))\n}\n}\n\n})","<template>\n  <!-- 悬浮图片（放在播放器外部） -->\n  <div \n    v-for=\"img in floatingImages\" \n    :key=\"img.id\" \n    class=\"floating-image\"\n    :style=\"img.style\"\n  >\n    <img :src=\"img.src\" :alt=\"'milet ' + img.id\" class=\"floating-img\">\n  </div>\n  \n  <div class=\"music-player-container\">\n    <!-- 播放器上半部分图片 -->\n    <div class=\"player-top-image\">\n      <img src=\"../assets/images/milet/milet底部.jpg\" alt=\"milet\" class=\"top-image\">\n    </div>\n\n    <!-- 播放器控制 -->\n    <div class=\"player-controls\">\n      <!-- 歌曲信息 -->\n      <div class=\"song-info\">\n        <h3 class=\"song-title\">{{ currentSong.title }}</h3>\n        <p class=\"song-artist\">{{ currentSong.artist }}</p>\n      </div>\n\n      <!-- 进度条 -->\n      <div class=\"progress-container\">\n        <span class=\"progress-time\">{{ formatTime(currentTime) }}</span>\n        <div class=\"progress-bar\">\n          <div \n            class=\"progress-fill\"\n            :style=\"{ width: progressPercentage + '%' }\"\n          ></div>\n          <div \n            class=\"progress-handle\"\n            :style=\"{ left: progressPercentage + '%' }\"\n            @mousedown=\"startDragging\"\n          ></div>\n        </div>\n        <span class=\"progress-time\">{{ formatTime(duration) }}</span>\n      </div>\n\n      <!-- 控制按钮 -->\n      <div class=\"control-buttons\">\n        <button \n          class=\"control-btn list-btn\"\n          @click=\"togglePlaylist\"\n          title=\"查看播放列表\"\n        >\n          <span class=\"icon\">📋</span>\n        </button>\n        <button \n          class=\"control-btn prev-btn\"\n          @click=\"prevSong\"\n          title=\"上一首\"\n        >\n          <span class=\"icon\">⏮️</span>\n        </button>\n        <button \n          class=\"control-btn play-btn\"\n          @click=\"togglePlay\"\n          :title=\"isPlaying ? '暂停' : '播放'\"\n        >\n          <span class=\"icon\">{{ isPlaying ? '⏸️' : '▶️' }}</span>\n        </button>\n        <button \n          class=\"control-btn next-btn\"\n          @click=\"nextSong\"\n          title=\"下一首\"\n        >\n          <span class=\"icon\">⏭️</span>\n        </button>\n        <button \n          class=\"control-btn volume-btn\"\n          @click=\"toggleVolume\"\n          @dblclick=\"() => { volume = volume > 0 ? 0 : 0.7; updateVolume(); }\"\n          title=\"音量 (双击静音)\"\n        >\n          <span class=\"icon\">{{ isMuted ? '🔇' : '🔊' }}</span>\n        </button>\n      </div>\n    </div>\n\n    <!-- 播放列表 -->\n    <div class=\"playlist-overlay\" v-if=\"showPlaylist\" @click.self=\"togglePlaylist\">\n      <div class=\"playlist-container\">\n        <div class=\"playlist-header\">\n          <h3>播放列表</h3>\n          <button class=\"close-btn\" @click=\"togglePlaylist\">×</button>\n        </div>\n        <div class=\"playlist-content\">\n          <div \n            v-for=\"(song, index) in playlist\"\n            :key=\"index\"\n            class=\"playlist-item\"\n            :class=\"{ 'active': index === currentIndex }\"\n            @click=\"playSong(index)\"\n          >\n            <div class=\"playlist-item-info\">\n              <div class=\"playlist-item-title\">{{ song.title }}</div>\n              <div class=\"playlist-item-artist\">{{ song.artist }}</div>\n            </div>\n            <div class=\"playlist-item-duration\">{{ song.duration }}</div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- 音量控制条 -->\n    <div class=\"volume-control\" v-if=\"showVolume\">\n      <input \n        type=\"range\"\n        min=\"0\"\n        max=\"1\"\n        step=\"0.01\"\n        v-model=\"volume\"\n        @input=\"updateVolume\"\n        class=\"volume-slider\"\n      >\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, onMounted, onUnmounted, computed, reactive } from 'vue';\n\n// 定义歌曲类型\ninterface Song {\n  id: number;\n  title: string;\n  artist: string;\n  src: string;\n  duration?: string;\n}\n\n// 创建音频上下文\nconst audio = new Audio();\n\n// 播放列表\nconst playlist = ref<Song[]>([]);\n\n// 当前状态\nconst currentIndex = ref(0);\nconst isPlaying = ref(false);\nconst showPlaylist = ref(false);\nconst showVolume = ref(false);\nconst volume = ref(0.7);\nconst isMuted = ref(false);\nconst currentTime = ref(0);\nconst duration = ref(0);\nconst isDragging = ref(false);\n\n// 当前歌曲\nconst currentSong = computed(() => {\n  if (playlist.value.length === 0) {\n    return { title: '暂无歌曲', artist: '', src: '' };\n  }\n  return playlist.value[currentIndex.value];\n});\n\n// 定义悬浮图片的接口类型\ninterface FloatingImage {\n  id: number;\n  src: string;\n  style: { [key: string]: string };\n}\n\n// 悬浮图片数据\nconst floatingImages = reactive<FloatingImage[]>([\n  { id: 1, src: require('../assets/images/milet/milet_01.jpg'), style: {} },\n  { id: 2, src: require('../assets/images/milet/milet_02.jpg'), style: {} },\n  { id: 3, src: require('../assets/images/milet/milet_03.jpg'), style: {} },\n  { id: 4, src: require('../assets/images/milet/milet_04.jpg'), style: {} }\n]);\n\n// 随机调整图片位置，避免重叠\nconst randomizeImagePositions = () => {\n  // 随机打乱图片数组\n  const shuffledImages = [...floatingImages].sort(() => Math.random() - 0.5);\n  \n  // 定义左右两侧的图片\n  const leftImages = shuffledImages.slice(0, 2);\n  const rightImages = shuffledImages.slice(2, 4);\n  \n  // 设置左侧图片位置 - 覆盖上下部分\n  leftImages.forEach((img, index) => {\n    img.style.left = `${3 + Math.random() * 2}%`; // 3%-5% 随机位置\n    img.style.right = 'auto';\n    // 一个在15%-35%（上部分），一个在55%-75%（下部分）\n    const topPosition = index === 0 ? \n      `${15 + Math.floor(Math.random() * 20)}%` : \n      `${55 + Math.floor(Math.random() * 20)}%`;\n    img.style.top = topPosition;\n    img.style.animationDelay = `${Math.random() * 2}s`;\n    img.style.zIndex = `${10 + index}`; // 确保层级不同\n  });\n  \n  // 设置右侧图片位置 - 覆盖上下部分\n  rightImages.forEach((img, index) => {\n    img.style.left = 'auto';\n    img.style.right = `${3 + Math.random() * 2}%`; // 3%-5% 随机位置\n    // 一个在25%-45%（上部分），一个在65%-85%（下部分）\n    const topPosition = index === 0 ? \n      `${25 + Math.floor(Math.random() * 20)}%` : \n      `${65 + Math.floor(Math.random() * 20)}%`;\n    img.style.top = topPosition;\n    img.style.animationDelay = `${Math.random() * 2}s`;\n    img.style.zIndex = `${10 + index}`; // 确保层级不同\n  });\n};\n\n// 定时随机变换图片位置\nlet positionInterval: number | null = null;\nconst startPositionAnimation = () => {\n  if (positionInterval) clearInterval(positionInterval);\n  positionInterval = window.setInterval(randomizeImagePositions, 8000);\n};\n\nconst stopPositionAnimation = () => {\n  if (positionInterval) {\n    clearInterval(positionInterval);\n    positionInterval = null;\n  }\n};\n\n// 进度百分比\nconst progressPercentage = computed(() => {\n  if (duration.value === 0) return 0;\n  return (currentTime.value / duration.value) * 100;\n});\n\n// 格式化时间\nconst formatTime = (seconds: number) => {\n  const mins = Math.floor(seconds / 60);\n  const secs = Math.floor(seconds % 60);\n  return `${mins}:${secs < 10 ? '0' + secs : secs}`;\n};\n\n// 解析歌曲标题和艺术家\nconst parseSongInfo = (fileName: string): { title: string; artist: string } => {\n  // 处理不同格式的文件名\n  let artist = 'milet';\n  let title = fileName.replace('.mp3', '');\n  \n  // 处理特殊格式如 \"milet,Aimer,幾田りら - おもかげ\"\n  if (fileName.includes(' - ')) {\n    const parts = fileName.split(' - ');\n    artist = parts[0];\n    title = parts[1].replace('.mp3', '');\n  } \n  // 处理 \"MAN WITH A MISSION,milet - 絆ノ奇跡\"\n  else if (fileName.includes(',')) {\n    const parts = fileName.split('.mp3');\n    title = parts[0];\n  }\n  \n  return { title, artist };\n};\n\n// 加载音乐文件\nconst loadMusicFiles = async () => {\n  // 获取音乐文件夹中的所有mp3文件\n  const musicFiles = [\n    'MAN WITH A MISSION,milet - 絆ノ奇跡.mp3',\n    'milet & Aimer & 幾田りら - おもかげ (produced by Vaundy).mp3',\n    'milet - Again and Again.mp3',\n    'milet - Anytime Anywhere.mp3',\n    'milet - Bluer.mp3',\n    'milet - Come Here (Session1).mp3',\n    'milet - December.mp3',\n    'milet - Final Call.mp3',\n    'milet - Fine Line.mp3',\n    'milet - Flare.mp3',\n    'milet - Fly High.mp3',\n    'milet - Grab the air.mp3',\n    'milet - HALFWAY.mp3',\n    'milet - Hey Song.mp3',\n    'milet - Higher.mp3',\n    'milet - Hit the Lights.mp3',\n    'milet - I still.mp3',\n    'milet - Nobody Knows.mp3',\n    'milet - Noёl In July.mp3',\n    'milet - On the Edge.mp3',\n    'milet - One Reason.mp3',\n    'milet - One Touch.mp3',\n    'milet - Ordinary days.mp3',\n    'milet - Outsider.mp3',\n    'milet - Parachute.mp3',\n    'milet - Prover.mp3',\n    'milet - Rewrite.mp3',\n    'milet - SEVENTH HEAVEN.mp3',\n    'milet - Tell me.mp3',\n    'milet - The Love We\\'ve Made.mp3',\n    'milet - Time Is On Our Side.mp3',\n    'milet - Walkin\\' In My Lane.mp3',\n    'milet - Waterfall.mp3',\n    'milet - Who I Am.mp3',\n    'milet - You & I.mp3',\n    'milet - Your Light.mp3',\n    'milet - b r o k e n.mp3',\n    'milet - checkmate.mp3',\n    'milet - hanataba.mp3',\n    'milet - inside you - From THE FIRST TAKE.mp3',\n    'milet - inside you.mp3',\n    'milet - jam.mp3',\n    'milet - us - From THE FIRST TAKE.mp3',\n    'milet - us.mp3',\n    'milet,Aimer,幾田りら - おもかげ (produced by Vaundy).mp3',\n    'milet,MAN WITH A MISSION - コイコガレ.mp3'\n  ];\n\n  // 创建播放列表\n  playlist.value = musicFiles.map((file, index) => {\n    const { title, artist } = parseSongInfo(file);\n    return {\n      id: index + 1,\n      title,\n      artist,\n      src: require(`../assets/music/${file}`)\n    };\n  });\n\n  // 如果有歌曲，初始化第一首\n  if (playlist.value.length > 0) {\n    await loadSong(currentIndex.value);\n  }\n};\n\n// 加载指定歌曲\nconst loadSong = async (index: number) => {\n  if (index < 0 || index >= playlist.value.length) return;\n  \n  currentIndex.value = index;\n  const song = playlist.value[index];\n  \n  audio.src = song.src;\n  audio.volume = volume.value;\n  \n  // 尝试获取歌曲时长\n  try {\n    await audio.load();\n    if (audio.duration) {\n      duration.value = audio.duration;\n      song.duration = formatTime(audio.duration);\n    }\n  } catch (error) {\n    console.error('加载歌曲失败:', error);\n  }\n};\n\n// 播放/暂停切换\nconst togglePlay = async () => {\n  if (playlist.value.length === 0) return;\n  \n  if (isPlaying.value) {\n    audio.pause();\n  } else {\n    try {\n      await audio.play();\n    } catch (error) {\n      console.error('播放失败:', error);\n      // 处理浏览器的自动播放限制\n      alert('请点击播放器以开始播放音乐');\n    }\n  }\n  isPlaying.value = !isPlaying.value;\n};\n\n// 播放指定歌曲\nconst playSong = async (index: number) => {\n  const wasPlaying = isPlaying.value;\n  await loadSong(index);\n  if (wasPlaying) {\n    await togglePlay();\n  }\n  showPlaylist.value = false;\n};\n\n// 下一首\nconst nextSong = () => {\n  const nextIndex = (currentIndex.value + 1) % playlist.value.length;\n  playSong(nextIndex);\n};\n\n// 上一首\nconst prevSong = () => {\n  const prevIndex = (currentIndex.value - 1 + playlist.value.length) % playlist.value.length;\n  playSong(prevIndex);\n};\n\n// 切换播放列表显示\nconst togglePlaylist = () => {\n  showPlaylist.value = !showPlaylist.value;\n};\n\n// 切换音量控制显示\nconst toggleVolume = () => {\n  showVolume.value = !showVolume.value;\n};\n\n// 更新音量\nconst updateVolume = () => {\n  audio.volume = volume.value;\n  isMuted.value = volume.value === 0;\n};\n\n// 开始拖动进度条\nconst startDragging = () => {\n  isDragging.value = true;\n};\n\n// 设置进度\nconst setProgress = (percentage: number) => {\n  if (duration.value === 0) return;\n  \n  const newTime = (percentage / 100) * duration.value;\n  currentTime.value = newTime;\n  audio.currentTime = newTime;\n};\n\n// 监听鼠标移动（拖动进度条时）\nconst handleMouseMove = (e: MouseEvent) => {\n  if (!isDragging.value) return;\n  \n  const progressBar = document.querySelector('.progress-bar') as HTMLElement;\n  if (!progressBar) return;\n  \n  const rect = progressBar.getBoundingClientRect();\n  const x = e.clientX - rect.left;\n  const percentage = Math.max(0, Math.min(100, (x / rect.width) * 100));\n  \n  // 只更新UI，不更新音频.currentTime\n  currentTime.value = (percentage / 100) * duration.value;\n};\n\n// 监听鼠标释放（结束拖动进度条时）\nconst handleMouseUp = () => {\n  if (!isDragging.value) return;\n  \n  setProgress(progressPercentage.value);\n  isDragging.value = false;\n};\n\n// 音频事件监听\nconst setupAudioEvents = () => {\n  // 更新当前播放时间\n  audio.ontimeupdate = () => {\n    if (!isDragging.value) {\n      currentTime.value = audio.currentTime;\n    }\n  };\n\n  // 歌曲结束时自动播放下一首\n  audio.onended = () => {\n    nextSong();\n  };\n\n  // 加载完成时获取时长\n  audio.onloadedmetadata = () => {\n    duration.value = audio.duration;\n    if (currentSong.value && 'duration' in currentSong.value) {\n      (currentSong.value as Song).duration = formatTime(audio.duration);\n    }\n  };\n};\n\n// 生命周期钩子\nonMounted(() => {\n  loadMusicFiles();\n  setupAudioEvents();\n  \n  // 添加全局鼠标事件监听\n  document.addEventListener('mousemove', handleMouseMove);\n  document.addEventListener('mouseup', handleMouseUp);\n  \n  // 初始化悬浮图片动画\n  randomizeImagePositions();\n  startPositionAnimation();\n});\n\nonUnmounted(() => {\n  // 清理资源\n  audio.pause();\n  document.removeEventListener('mousemove', handleMouseMove);\n  document.removeEventListener('mouseup', handleMouseUp);\n  \n  // 清理定时器\n  stopPositionAnimation();\n});\n</script>\n\n<style scoped>\n.music-player-container {\n  width: 400px;\n  background: linear-gradient(135deg, #1a1a1a 0%, #2d2d2d 100%);\n  border-radius: 20px;\n  padding: 30px;\n  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.5);\n  color: #ffffff;\n  position: relative;\n  border: 2px solid #333;\n}\n\n/* 乐盘动画 */\n.vinyl-container {\n  width: 200px;\n  height: 200px;\n  margin: 0 auto 30px;\n  perspective: 1000px;\n}\n\n.vinyl-record {\n  width: 100%;\n  height: 100%;\n  background: radial-gradient(circle, #000000 0%, #333333 70%, #000000 71%, #000000 100%);\n  border-radius: 50%;\n  position: relative;\n  transform-style: preserve-3d;\n  box-shadow: 0 0 20px rgba(0, 0, 0, 0.7);\n}\n\n.vinyl-center {\n  width: 40px;\n  height: 40px;\n  background: linear-gradient(135deg, #ffffff 0%, #cccccc 100%);\n  border-radius: 50%;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  z-index: 1;\n}\n\n.vinyl-grooves {\n  position: absolute;\n  top: 15%;\n  left: 15%;\n  right: 15%;\n  bottom: 15%;\n  border-radius: 50%;\n  background: repeating-radial-gradient(\n    circle at center,\n    #333 0%,\n    #000 2%,\n    #333 4%,\n    #000 6%,\n    #333 8%\n  );\n  opacity: 0.6;\n}\n\n/* 乐盘旋转动画 */\n@keyframes vinylSpin {\n  from { transform: rotate(0deg); }\n  to { transform: rotate(360deg); }\n}\n\n/* 悬浮图片样式 */\n.floating-image {\n  position: fixed;\n  z-index: 10;\n  opacity: 0.7;\n  transform: scale(0.9);\n  transition: all 0.5s ease;\n  animation: floatAnimation 8s ease-in-out infinite;\n  pointer-events: none;\n  width: 220px;\n  height: 280px;\n  overflow: hidden;\n  border-radius: 10px;\n  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);\n}\n\n/* 播放器上半部分图片样式 */\n.player-top-image {\n  width: 100%;\n  height: 200px;\n  overflow: hidden;\n  border-radius: 10px 10px 0 0;\n  position: relative;\n  margin-bottom: 20px;\n}\n\n.top-image {\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  transition: transform 0.3s ease;\n}\n\n.music-player-container:hover .top-image {\n  transform: scale(1.05);\n}\n\n/* 浮动动画 - 使用transform-origin确保旋转围绕中心 */\n@keyframes floatAnimation {\n  0% {\n    transform: scale(0.9) translateY(0) rotate(0deg);\n    transform-origin: center center;\n  }\n  25% {\n    transform: scale(0.92) translateY(-10px) rotate(1deg);\n    transform-origin: center center;\n  }\n  50% {\n    transform: scale(0.95) translateY(-15px) rotate(2deg);\n    transform-origin: center center;\n  }\n  75% {\n    transform: scale(0.92) translateY(-10px) rotate(1deg);\n    transform-origin: center center;\n  }\n  100% {\n    transform: scale(0.9) translateY(0) rotate(0deg);\n    transform-origin: center center;\n  }\n}\n\n.floating-image:hover {\n  opacity: 0.9;\n  transform: scale(1.05) !important;\n  z-index: 20;\n  pointer-events: auto;\n}\n\n.floating-img {\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  transition: filter 0.3s ease;\n}\n\n.floating-image:hover .floating-img {\n  filter: brightness(1.1) saturate(1.2);\n}\n\n.floating-img {\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  transition: filter 0.3s ease;\n}\n\n/* 悬浮动画 */\n@keyframes floatAnimation {\n  0%, 100% {\n    transform: translateY(0) scale(0.9) rotate(0deg);\n    opacity: 0.7;\n  }\n  50% {\n    transform: translateY(-15px) scale(1) rotate(2deg);\n    opacity: 0.9;\n  }\n}\n\n/* 音乐播放时图片效果增强 */\n.music-player-container:hover .floating-image {\n  transform: scale(1);\n  opacity: 0.8;\n}\n\n.music-player-container:hover .floating-img {\n  filter: brightness(1.1) saturate(1.2);\n}\n\n/* 响应式调整悬浮图片 */\n@media (max-width: 768px) {\n  .floating-image {\n    max-width: 100px;\n    max-height: 100px;\n  }\n}\n\n@media (max-width: 450px) {\n  .floating-image {\n    max-width: 70px;\n    max-height: 70px;\n  }\n}\n\n.vinyl-spin .vinyl-record {\n  animation: vinylSpin 20s linear infinite;\n}\n\n/* 播放器控制 */\n.player-controls {\n  text-align: center;\n}\n\n/* 歌曲信息 */\n.song-info {\n  margin-bottom: 20px;\n}\n\n.song-title {\n  font-size: 18px;\n  font-weight: bold;\n  margin: 0 0 5px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\n.song-artist {\n  font-size: 14px;\n  color: #cccccc;\n  margin: 0;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\n/* 进度条 */\n.progress-container {\n  display: flex;\n  align-items: center;\n  margin-bottom: 20px;\n  gap: 10px;\n}\n\n.progress-time {\n  font-size: 12px;\n  color: #cccccc;\n  min-width: 40px;\n}\n\n.progress-bar {\n  flex: 1;\n  height: 8px;\n  background: #444;\n  border-radius: 4px;\n  position: relative;\n  cursor: pointer;\n}\n\n.progress-fill {\n  height: 100%;\n  background: linear-gradient(90deg, #6366f1, #8b5cf6);\n  border-radius: 4px;\n  transition: width 0.1s ease;\n}\n\n.progress-handle {\n  width: 16px;\n  height: 16px;\n  background: #ffffff;\n  border-radius: 50%;\n  position: absolute;\n  top: 50%;\n  transform: translate(-50%, -50%);\n  cursor: pointer;\n  box-shadow: 0 0 10px rgba(99, 102, 241, 0.5);\n  transition: all 0.2s ease;\n}\n\n.progress-handle:hover {\n  transform: translate(-50%, -50%) scale(1.2);\n  box-shadow: 0 0 15px rgba(99, 102, 241, 0.8);\n}\n\n/* 控制按钮 */\n.control-buttons {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 15px;\n}\n\n.control-btn {\n  background: none;\n  border: none;\n  color: #ffffff;\n  cursor: pointer;\n  padding: 10px;\n  border-radius: 50%;\n  transition: all 0.3s ease;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.control-btn:hover {\n  background: rgba(255, 255, 255, 0.1);\n  transform: scale(1.1);\n}\n\n.play-btn {\n  background: linear-gradient(135deg, #6366f1, #8b5cf6);\n  width: 50px;\n  height: 50px;\n  box-shadow: 0 5px 15px rgba(99, 102, 241, 0.5);\n}\n\n.play-btn:hover {\n  background: linear-gradient(135deg, #4f46e5, #7c3aed);\n  box-shadow: 0 5px 20px rgba(99, 102, 241, 0.7);\n}\n\n.icon {\n  font-size: 18px;\n}\n\n.play-btn .icon {\n  font-size: 20px;\n}\n\n/* 播放列表 */\n.playlist-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.7);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 1000;\n}\n\n.playlist-container {\n  width: 400px;\n  max-height: 600px;\n  background: #1a1a1a;\n  border-radius: 10px;\n  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.5);\n  overflow: hidden;\n}\n\n.playlist-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 20px;\n  background: #2d2d2d;\n  border-bottom: 1px solid #333;\n}\n\n.playlist-header h3 {\n  margin: 0;\n  color: #ffffff;\n}\n\n.close-btn {\n  background: none;\n  border: none;\n  color: #ffffff;\n  font-size: 24px;\n  cursor: pointer;\n  padding: 0;\n  width: 30px;\n  height: 30px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 50%;\n  transition: background 0.3s ease;\n}\n\n.close-btn:hover {\n  background: rgba(255, 255, 255, 0.1);\n}\n\n.playlist-content {\n  max-height: 500px;\n  overflow-y: auto;\n}\n\n.playlist-item {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 15px 20px;\n  border-bottom: 1px solid #333;\n  cursor: pointer;\n  transition: background 0.3s ease;\n}\n\n.playlist-item:hover {\n  background: rgba(255, 255, 255, 0.05);\n}\n\n.playlist-item.active {\n  background: rgba(99, 102, 241, 0.2);\n}\n\n.playlist-item-info {\n  flex: 1;\n  text-align: left;\n}\n\n.playlist-item-title {\n  font-size: 14px;\n  font-weight: 500;\n  margin-bottom: 5px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\n.playlist-item-artist {\n  font-size: 12px;\n  color: #cccccc;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\n.playlist-item-duration {\n  font-size: 12px;\n  color: #cccccc;\n  margin-left: 15px;\n}\n\n/* 音量控制 */\n.volume-control {\n  position: absolute;\n  bottom: 100px;\n  right: 30px;\n  transform: rotate(-90deg) translateX(50%);\n  transform-origin: right center;\n  z-index: 10;\n  background: #2d2d2d;\n  padding: 10px;\n  border-radius: 20px;\n  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);\n}\n\n.volume-slider {\n  width: 100px;\n  height: 5px;\n  -webkit-appearance: none;\n  appearance: none;\n  background: #444;\n  outline: none;\n  border-radius: 5px;\n}\n\n.volume-slider::-webkit-slider-thumb {\n  -webkit-appearance: none;\n  appearance: none;\n  width: 15px;\n  height: 15px;\n  background: #6366f1;\n  cursor: pointer;\n  border-radius: 50%;\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.3);\n}\n\n.volume-slider::-moz-range-thumb {\n  width: 15px;\n  height: 15px;\n  background: #6366f1;\n  cursor: pointer;\n  border-radius: 50%;\n  border: none;\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.3);\n}\n\n/* 响应式调整 */\n@media (max-width: 450px) {\n  .music-player-container {\n    width: 90%;\n    padding: 20px;\n  }\n  \n  .vinyl-container {\n    width: 150px;\n    height: 150px;\n  }\n  \n  .control-buttons {\n    gap: 10px;\n  }\n  \n  .playlist-container {\n    width: 90%;\n  }\n}\n</style>","<template>\n  <!-- 悬浮图片（放在播放器外部） -->\n  <div \n    v-for=\"img in floatingImages\" \n    :key=\"img.id\" \n    class=\"floating-image\"\n    :style=\"img.style\"\n  >\n    <img :src=\"img.src\" :alt=\"'milet ' + img.id\" class=\"floating-img\">\n  </div>\n  \n  <div class=\"music-player-container\">\n    <!-- 播放器上半部分图片 -->\n    <div class=\"player-top-image\">\n      <img src=\"../assets/images/milet/milet底部.jpg\" alt=\"milet\" class=\"top-image\">\n    </div>\n\n    <!-- 播放器控制 -->\n    <div class=\"player-controls\">\n      <!-- 歌曲信息 -->\n      <div class=\"song-info\">\n        <h3 class=\"song-title\">{{ currentSong.title }}</h3>\n        <p class=\"song-artist\">{{ currentSong.artist }}</p>\n      </div>\n\n      <!-- 进度条 -->\n      <div class=\"progress-container\">\n        <span class=\"progress-time\">{{ formatTime(currentTime) }}</span>\n        <div class=\"progress-bar\">\n          <div \n            class=\"progress-fill\"\n            :style=\"{ width: progressPercentage + '%' }\"\n          ></div>\n          <div \n            class=\"progress-handle\"\n            :style=\"{ left: progressPercentage + '%' }\"\n            @mousedown=\"startDragging\"\n          ></div>\n        </div>\n        <span class=\"progress-time\">{{ formatTime(duration) }}</span>\n      </div>\n\n      <!-- 控制按钮 -->\n      <div class=\"control-buttons\">\n        <button \n          class=\"control-btn list-btn\"\n          @click=\"togglePlaylist\"\n          title=\"查看播放列表\"\n        >\n          <span class=\"icon\">📋</span>\n        </button>\n        <button \n          class=\"control-btn prev-btn\"\n          @click=\"prevSong\"\n          title=\"上一首\"\n        >\n          <span class=\"icon\">⏮️</span>\n        </button>\n        <button \n          class=\"control-btn play-btn\"\n          @click=\"togglePlay\"\n          :title=\"isPlaying ? '暂停' : '播放'\"\n        >\n          <span class=\"icon\">{{ isPlaying ? '⏸️' : '▶️' }}</span>\n        </button>\n        <button \n          class=\"control-btn next-btn\"\n          @click=\"nextSong\"\n          title=\"下一首\"\n        >\n          <span class=\"icon\">⏭️</span>\n        </button>\n        <button \n          class=\"control-btn volume-btn\"\n          @click=\"toggleVolume\"\n          @dblclick=\"() => { volume = volume > 0 ? 0 : 0.7; updateVolume(); }\"\n          title=\"音量 (双击静音)\"\n        >\n          <span class=\"icon\">{{ isMuted ? '🔇' : '🔊' }}</span>\n        </button>\n      </div>\n    </div>\n\n    <!-- 播放列表 -->\n    <div class=\"playlist-overlay\" v-if=\"showPlaylist\" @click.self=\"togglePlaylist\">\n      <div class=\"playlist-container\">\n        <div class=\"playlist-header\">\n          <h3>播放列表</h3>\n          <button class=\"close-btn\" @click=\"togglePlaylist\">×</button>\n        </div>\n        <div class=\"playlist-content\">\n          <div \n            v-for=\"(song, index) in playlist\"\n            :key=\"index\"\n            class=\"playlist-item\"\n            :class=\"{ 'active': index === currentIndex }\"\n            @click=\"playSong(index)\"\n          >\n            <div class=\"playlist-item-info\">\n              <div class=\"playlist-item-title\">{{ song.title }}</div>\n              <div class=\"playlist-item-artist\">{{ song.artist }}</div>\n            </div>\n            <div class=\"playlist-item-duration\">{{ song.duration }}</div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- 音量控制条 -->\n    <div class=\"volume-control\" v-if=\"showVolume\">\n      <input \n        type=\"range\"\n        min=\"0\"\n        max=\"1\"\n        step=\"0.01\"\n        v-model=\"volume\"\n        @input=\"updateVolume\"\n        class=\"volume-slider\"\n      >\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, onMounted, onUnmounted, computed, reactive } from 'vue';\n\n// 定义歌曲类型\ninterface Song {\n  id: number;\n  title: string;\n  artist: string;\n  src: string;\n  duration?: string;\n}\n\n// 创建音频上下文\nconst audio = new Audio();\n\n// 播放列表\nconst playlist = ref<Song[]>([]);\n\n// 当前状态\nconst currentIndex = ref(0);\nconst isPlaying = ref(false);\nconst showPlaylist = ref(false);\nconst showVolume = ref(false);\nconst volume = ref(0.7);\nconst isMuted = ref(false);\nconst currentTime = ref(0);\nconst duration = ref(0);\nconst isDragging = ref(false);\n\n// 当前歌曲\nconst currentSong = computed(() => {\n  if (playlist.value.length === 0) {\n    return { title: '暂无歌曲', artist: '', src: '' };\n  }\n  return playlist.value[currentIndex.value];\n});\n\n// 定义悬浮图片的接口类型\ninterface FloatingImage {\n  id: number;\n  src: string;\n  style: { [key: string]: string };\n}\n\n// 悬浮图片数据\nconst floatingImages = reactive<FloatingImage[]>([\n  { id: 1, src: require('../assets/images/milet/milet_01.jpg'), style: {} },\n  { id: 2, src: require('../assets/images/milet/milet_02.jpg'), style: {} },\n  { id: 3, src: require('../assets/images/milet/milet_03.jpg'), style: {} },\n  { id: 4, src: require('../assets/images/milet/milet_04.jpg'), style: {} }\n]);\n\n// 随机调整图片位置，避免重叠\nconst randomizeImagePositions = () => {\n  // 随机打乱图片数组\n  const shuffledImages = [...floatingImages].sort(() => Math.random() - 0.5);\n  \n  // 定义左右两侧的图片\n  const leftImages = shuffledImages.slice(0, 2);\n  const rightImages = shuffledImages.slice(2, 4);\n  \n  // 设置左侧图片位置 - 覆盖上下部分\n  leftImages.forEach((img, index) => {\n    img.style.left = `${3 + Math.random() * 2}%`; // 3%-5% 随机位置\n    img.style.right = 'auto';\n    // 一个在15%-35%（上部分），一个在55%-75%（下部分）\n    const topPosition = index === 0 ? \n      `${15 + Math.floor(Math.random() * 20)}%` : \n      `${55 + Math.floor(Math.random() * 20)}%`;\n    img.style.top = topPosition;\n    img.style.animationDelay = `${Math.random() * 2}s`;\n    img.style.zIndex = `${10 + index}`; // 确保层级不同\n  });\n  \n  // 设置右侧图片位置 - 覆盖上下部分\n  rightImages.forEach((img, index) => {\n    img.style.left = 'auto';\n    img.style.right = `${3 + Math.random() * 2}%`; // 3%-5% 随机位置\n    // 一个在25%-45%（上部分），一个在65%-85%（下部分）\n    const topPosition = index === 0 ? \n      `${25 + Math.floor(Math.random() * 20)}%` : \n      `${65 + Math.floor(Math.random() * 20)}%`;\n    img.style.top = topPosition;\n    img.style.animationDelay = `${Math.random() * 2}s`;\n    img.style.zIndex = `${10 + index}`; // 确保层级不同\n  });\n};\n\n// 定时随机变换图片位置\nlet positionInterval: number | null = null;\nconst startPositionAnimation = () => {\n  if (positionInterval) clearInterval(positionInterval);\n  positionInterval = window.setInterval(randomizeImagePositions, 8000);\n};\n\nconst stopPositionAnimation = () => {\n  if (positionInterval) {\n    clearInterval(positionInterval);\n    positionInterval = null;\n  }\n};\n\n// 进度百分比\nconst progressPercentage = computed(() => {\n  if (duration.value === 0) return 0;\n  return (currentTime.value / duration.value) * 100;\n});\n\n// 格式化时间\nconst formatTime = (seconds: number) => {\n  const mins = Math.floor(seconds / 60);\n  const secs = Math.floor(seconds % 60);\n  return `${mins}:${secs < 10 ? '0' + secs : secs}`;\n};\n\n// 解析歌曲标题和艺术家\nconst parseSongInfo = (fileName: string): { title: string; artist: string } => {\n  // 处理不同格式的文件名\n  let artist = 'milet';\n  let title = fileName.replace('.mp3', '');\n  \n  // 处理特殊格式如 \"milet,Aimer,幾田りら - おもかげ\"\n  if (fileName.includes(' - ')) {\n    const parts = fileName.split(' - ');\n    artist = parts[0];\n    title = parts[1].replace('.mp3', '');\n  } \n  // 处理 \"MAN WITH A MISSION,milet - 絆ノ奇跡\"\n  else if (fileName.includes(',')) {\n    const parts = fileName.split('.mp3');\n    title = parts[0];\n  }\n  \n  return { title, artist };\n};\n\n// 加载音乐文件\nconst loadMusicFiles = async () => {\n  // 获取音乐文件夹中的所有mp3文件\n  const musicFiles = [\n    'MAN WITH A MISSION,milet - 絆ノ奇跡.mp3',\n    'milet & Aimer & 幾田りら - おもかげ (produced by Vaundy).mp3',\n    'milet - Again and Again.mp3',\n    'milet - Anytime Anywhere.mp3',\n    'milet - Bluer.mp3',\n    'milet - Come Here (Session1).mp3',\n    'milet - December.mp3',\n    'milet - Final Call.mp3',\n    'milet - Fine Line.mp3',\n    'milet - Flare.mp3',\n    'milet - Fly High.mp3',\n    'milet - Grab the air.mp3',\n    'milet - HALFWAY.mp3',\n    'milet - Hey Song.mp3',\n    'milet - Higher.mp3',\n    'milet - Hit the Lights.mp3',\n    'milet - I still.mp3',\n    'milet - Nobody Knows.mp3',\n    'milet - Noёl In July.mp3',\n    'milet - On the Edge.mp3',\n    'milet - One Reason.mp3',\n    'milet - One Touch.mp3',\n    'milet - Ordinary days.mp3',\n    'milet - Outsider.mp3',\n    'milet - Parachute.mp3',\n    'milet - Prover.mp3',\n    'milet - Rewrite.mp3',\n    'milet - SEVENTH HEAVEN.mp3',\n    'milet - Tell me.mp3',\n    'milet - The Love We\\'ve Made.mp3',\n    'milet - Time Is On Our Side.mp3',\n    'milet - Walkin\\' In My Lane.mp3',\n    'milet - Waterfall.mp3',\n    'milet - Who I Am.mp3',\n    'milet - You & I.mp3',\n    'milet - Your Light.mp3',\n    'milet - b r o k e n.mp3',\n    'milet - checkmate.mp3',\n    'milet - hanataba.mp3',\n    'milet - inside you - From THE FIRST TAKE.mp3',\n    'milet - inside you.mp3',\n    'milet - jam.mp3',\n    'milet - us - From THE FIRST TAKE.mp3',\n    'milet - us.mp3',\n    'milet,Aimer,幾田りら - おもかげ (produced by Vaundy).mp3',\n    'milet,MAN WITH A MISSION - コイコガレ.mp3'\n  ];\n\n  // 创建播放列表\n  playlist.value = musicFiles.map((file, index) => {\n    const { title, artist } = parseSongInfo(file);\n    return {\n      id: index + 1,\n      title,\n      artist,\n      src: require(`../assets/music/${file}`)\n    };\n  });\n\n  // 如果有歌曲，初始化第一首\n  if (playlist.value.length > 0) {\n    await loadSong(currentIndex.value);\n  }\n};\n\n// 加载指定歌曲\nconst loadSong = async (index: number) => {\n  if (index < 0 || index >= playlist.value.length) return;\n  \n  currentIndex.value = index;\n  const song = playlist.value[index];\n  \n  audio.src = song.src;\n  audio.volume = volume.value;\n  \n  // 尝试获取歌曲时长\n  try {\n    await audio.load();\n    if (audio.duration) {\n      duration.value = audio.duration;\n      song.duration = formatTime(audio.duration);\n    }\n  } catch (error) {\n    console.error('加载歌曲失败:', error);\n  }\n};\n\n// 播放/暂停切换\nconst togglePlay = async () => {\n  if (playlist.value.length === 0) return;\n  \n  if (isPlaying.value) {\n    audio.pause();\n  } else {\n    try {\n      await audio.play();\n    } catch (error) {\n      console.error('播放失败:', error);\n      // 处理浏览器的自动播放限制\n      alert('请点击播放器以开始播放音乐');\n    }\n  }\n  isPlaying.value = !isPlaying.value;\n};\n\n// 播放指定歌曲\nconst playSong = async (index: number) => {\n  const wasPlaying = isPlaying.value;\n  await loadSong(index);\n  if (wasPlaying) {\n    await togglePlay();\n  }\n  showPlaylist.value = false;\n};\n\n// 下一首\nconst nextSong = () => {\n  const nextIndex = (currentIndex.value + 1) % playlist.value.length;\n  playSong(nextIndex);\n};\n\n// 上一首\nconst prevSong = () => {\n  const prevIndex = (currentIndex.value - 1 + playlist.value.length) % playlist.value.length;\n  playSong(prevIndex);\n};\n\n// 切换播放列表显示\nconst togglePlaylist = () => {\n  showPlaylist.value = !showPlaylist.value;\n};\n\n// 切换音量控制显示\nconst toggleVolume = () => {\n  showVolume.value = !showVolume.value;\n};\n\n// 更新音量\nconst updateVolume = () => {\n  audio.volume = volume.value;\n  isMuted.value = volume.value === 0;\n};\n\n// 开始拖动进度条\nconst startDragging = () => {\n  isDragging.value = true;\n};\n\n// 设置进度\nconst setProgress = (percentage: number) => {\n  if (duration.value === 0) return;\n  \n  const newTime = (percentage / 100) * duration.value;\n  currentTime.value = newTime;\n  audio.currentTime = newTime;\n};\n\n// 监听鼠标移动（拖动进度条时）\nconst handleMouseMove = (e: MouseEvent) => {\n  if (!isDragging.value) return;\n  \n  const progressBar = document.querySelector('.progress-bar') as HTMLElement;\n  if (!progressBar) return;\n  \n  const rect = progressBar.getBoundingClientRect();\n  const x = e.clientX - rect.left;\n  const percentage = Math.max(0, Math.min(100, (x / rect.width) * 100));\n  \n  // 只更新UI，不更新音频.currentTime\n  currentTime.value = (percentage / 100) * duration.value;\n};\n\n// 监听鼠标释放（结束拖动进度条时）\nconst handleMouseUp = () => {\n  if (!isDragging.value) return;\n  \n  setProgress(progressPercentage.value);\n  isDragging.value = false;\n};\n\n// 音频事件监听\nconst setupAudioEvents = () => {\n  // 更新当前播放时间\n  audio.ontimeupdate = () => {\n    if (!isDragging.value) {\n      currentTime.value = audio.currentTime;\n    }\n  };\n\n  // 歌曲结束时自动播放下一首\n  audio.onended = () => {\n    nextSong();\n  };\n\n  // 加载完成时获取时长\n  audio.onloadedmetadata = () => {\n    duration.value = audio.duration;\n    if (currentSong.value && 'duration' in currentSong.value) {\n      (currentSong.value as Song).duration = formatTime(audio.duration);\n    }\n  };\n};\n\n// 生命周期钩子\nonMounted(() => {\n  loadMusicFiles();\n  setupAudioEvents();\n  \n  // 添加全局鼠标事件监听\n  document.addEventListener('mousemove', handleMouseMove);\n  document.addEventListener('mouseup', handleMouseUp);\n  \n  // 初始化悬浮图片动画\n  randomizeImagePositions();\n  startPositionAnimation();\n});\n\nonUnmounted(() => {\n  // 清理资源\n  audio.pause();\n  document.removeEventListener('mousemove', handleMouseMove);\n  document.removeEventListener('mouseup', handleMouseUp);\n  \n  // 清理定时器\n  stopPositionAnimation();\n});\n</script>\n\n<style scoped>\n.music-player-container {\n  width: 400px;\n  background: linear-gradient(135deg, #1a1a1a 0%, #2d2d2d 100%);\n  border-radius: 20px;\n  padding: 30px;\n  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.5);\n  color: #ffffff;\n  position: relative;\n  border: 2px solid #333;\n}\n\n/* 乐盘动画 */\n.vinyl-container {\n  width: 200px;\n  height: 200px;\n  margin: 0 auto 30px;\n  perspective: 1000px;\n}\n\n.vinyl-record {\n  width: 100%;\n  height: 100%;\n  background: radial-gradient(circle, #000000 0%, #333333 70%, #000000 71%, #000000 100%);\n  border-radius: 50%;\n  position: relative;\n  transform-style: preserve-3d;\n  box-shadow: 0 0 20px rgba(0, 0, 0, 0.7);\n}\n\n.vinyl-center {\n  width: 40px;\n  height: 40px;\n  background: linear-gradient(135deg, #ffffff 0%, #cccccc 100%);\n  border-radius: 50%;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  z-index: 1;\n}\n\n.vinyl-grooves {\n  position: absolute;\n  top: 15%;\n  left: 15%;\n  right: 15%;\n  bottom: 15%;\n  border-radius: 50%;\n  background: repeating-radial-gradient(\n    circle at center,\n    #333 0%,\n    #000 2%,\n    #333 4%,\n    #000 6%,\n    #333 8%\n  );\n  opacity: 0.6;\n}\n\n/* 乐盘旋转动画 */\n@keyframes vinylSpin {\n  from { transform: rotate(0deg); }\n  to { transform: rotate(360deg); }\n}\n\n/* 悬浮图片样式 */\n.floating-image {\n  position: fixed;\n  z-index: 10;\n  opacity: 0.7;\n  transform: scale(0.9);\n  transition: all 0.5s ease;\n  animation: floatAnimation 8s ease-in-out infinite;\n  pointer-events: none;\n  width: 220px;\n  height: 280px;\n  overflow: hidden;\n  border-radius: 10px;\n  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);\n}\n\n/* 播放器上半部分图片样式 */\n.player-top-image {\n  width: 100%;\n  height: 200px;\n  overflow: hidden;\n  border-radius: 10px 10px 0 0;\n  position: relative;\n  margin-bottom: 20px;\n}\n\n.top-image {\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  transition: transform 0.3s ease;\n}\n\n.music-player-container:hover .top-image {\n  transform: scale(1.05);\n}\n\n/* 浮动动画 - 使用transform-origin确保旋转围绕中心 */\n@keyframes floatAnimation {\n  0% {\n    transform: scale(0.9) translateY(0) rotate(0deg);\n    transform-origin: center center;\n  }\n  25% {\n    transform: scale(0.92) translateY(-10px) rotate(1deg);\n    transform-origin: center center;\n  }\n  50% {\n    transform: scale(0.95) translateY(-15px) rotate(2deg);\n    transform-origin: center center;\n  }\n  75% {\n    transform: scale(0.92) translateY(-10px) rotate(1deg);\n    transform-origin: center center;\n  }\n  100% {\n    transform: scale(0.9) translateY(0) rotate(0deg);\n    transform-origin: center center;\n  }\n}\n\n.floating-image:hover {\n  opacity: 0.9;\n  transform: scale(1.05) !important;\n  z-index: 20;\n  pointer-events: auto;\n}\n\n.floating-img {\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  transition: filter 0.3s ease;\n}\n\n.floating-image:hover .floating-img {\n  filter: brightness(1.1) saturate(1.2);\n}\n\n.floating-img {\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  transition: filter 0.3s ease;\n}\n\n/* 悬浮动画 */\n@keyframes floatAnimation {\n  0%, 100% {\n    transform: translateY(0) scale(0.9) rotate(0deg);\n    opacity: 0.7;\n  }\n  50% {\n    transform: translateY(-15px) scale(1) rotate(2deg);\n    opacity: 0.9;\n  }\n}\n\n/* 音乐播放时图片效果增强 */\n.music-player-container:hover .floating-image {\n  transform: scale(1);\n  opacity: 0.8;\n}\n\n.music-player-container:hover .floating-img {\n  filter: brightness(1.1) saturate(1.2);\n}\n\n/* 响应式调整悬浮图片 */\n@media (max-width: 768px) {\n  .floating-image {\n    max-width: 100px;\n    max-height: 100px;\n  }\n}\n\n@media (max-width: 450px) {\n  .floating-image {\n    max-width: 70px;\n    max-height: 70px;\n  }\n}\n\n.vinyl-spin .vinyl-record {\n  animation: vinylSpin 20s linear infinite;\n}\n\n/* 播放器控制 */\n.player-controls {\n  text-align: center;\n}\n\n/* 歌曲信息 */\n.song-info {\n  margin-bottom: 20px;\n}\n\n.song-title {\n  font-size: 18px;\n  font-weight: bold;\n  margin: 0 0 5px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\n.song-artist {\n  font-size: 14px;\n  color: #cccccc;\n  margin: 0;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\n/* 进度条 */\n.progress-container {\n  display: flex;\n  align-items: center;\n  margin-bottom: 20px;\n  gap: 10px;\n}\n\n.progress-time {\n  font-size: 12px;\n  color: #cccccc;\n  min-width: 40px;\n}\n\n.progress-bar {\n  flex: 1;\n  height: 8px;\n  background: #444;\n  border-radius: 4px;\n  position: relative;\n  cursor: pointer;\n}\n\n.progress-fill {\n  height: 100%;\n  background: linear-gradient(90deg, #6366f1, #8b5cf6);\n  border-radius: 4px;\n  transition: width 0.1s ease;\n}\n\n.progress-handle {\n  width: 16px;\n  height: 16px;\n  background: #ffffff;\n  border-radius: 50%;\n  position: absolute;\n  top: 50%;\n  transform: translate(-50%, -50%);\n  cursor: pointer;\n  box-shadow: 0 0 10px rgba(99, 102, 241, 0.5);\n  transition: all 0.2s ease;\n}\n\n.progress-handle:hover {\n  transform: translate(-50%, -50%) scale(1.2);\n  box-shadow: 0 0 15px rgba(99, 102, 241, 0.8);\n}\n\n/* 控制按钮 */\n.control-buttons {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 15px;\n}\n\n.control-btn {\n  background: none;\n  border: none;\n  color: #ffffff;\n  cursor: pointer;\n  padding: 10px;\n  border-radius: 50%;\n  transition: all 0.3s ease;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.control-btn:hover {\n  background: rgba(255, 255, 255, 0.1);\n  transform: scale(1.1);\n}\n\n.play-btn {\n  background: linear-gradient(135deg, #6366f1, #8b5cf6);\n  width: 50px;\n  height: 50px;\n  box-shadow: 0 5px 15px rgba(99, 102, 241, 0.5);\n}\n\n.play-btn:hover {\n  background: linear-gradient(135deg, #4f46e5, #7c3aed);\n  box-shadow: 0 5px 20px rgba(99, 102, 241, 0.7);\n}\n\n.icon {\n  font-size: 18px;\n}\n\n.play-btn .icon {\n  font-size: 20px;\n}\n\n/* 播放列表 */\n.playlist-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.7);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 1000;\n}\n\n.playlist-container {\n  width: 400px;\n  max-height: 600px;\n  background: #1a1a1a;\n  border-radius: 10px;\n  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.5);\n  overflow: hidden;\n}\n\n.playlist-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 20px;\n  background: #2d2d2d;\n  border-bottom: 1px solid #333;\n}\n\n.playlist-header h3 {\n  margin: 0;\n  color: #ffffff;\n}\n\n.close-btn {\n  background: none;\n  border: none;\n  color: #ffffff;\n  font-size: 24px;\n  cursor: pointer;\n  padding: 0;\n  width: 30px;\n  height: 30px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 50%;\n  transition: background 0.3s ease;\n}\n\n.close-btn:hover {\n  background: rgba(255, 255, 255, 0.1);\n}\n\n.playlist-content {\n  max-height: 500px;\n  overflow-y: auto;\n}\n\n.playlist-item {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 15px 20px;\n  border-bottom: 1px solid #333;\n  cursor: pointer;\n  transition: background 0.3s ease;\n}\n\n.playlist-item:hover {\n  background: rgba(255, 255, 255, 0.05);\n}\n\n.playlist-item.active {\n  background: rgba(99, 102, 241, 0.2);\n}\n\n.playlist-item-info {\n  flex: 1;\n  text-align: left;\n}\n\n.playlist-item-title {\n  font-size: 14px;\n  font-weight: 500;\n  margin-bottom: 5px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\n.playlist-item-artist {\n  font-size: 12px;\n  color: #cccccc;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\n.playlist-item-duration {\n  font-size: 12px;\n  color: #cccccc;\n  margin-left: 15px;\n}\n\n/* 音量控制 */\n.volume-control {\n  position: absolute;\n  bottom: 100px;\n  right: 30px;\n  transform: rotate(-90deg) translateX(50%);\n  transform-origin: right center;\n  z-index: 10;\n  background: #2d2d2d;\n  padding: 10px;\n  border-radius: 20px;\n  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);\n}\n\n.volume-slider {\n  width: 100px;\n  height: 5px;\n  -webkit-appearance: none;\n  appearance: none;\n  background: #444;\n  outline: none;\n  border-radius: 5px;\n}\n\n.volume-slider::-webkit-slider-thumb {\n  -webkit-appearance: none;\n  appearance: none;\n  width: 15px;\n  height: 15px;\n  background: #6366f1;\n  cursor: pointer;\n  border-radius: 50%;\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.3);\n}\n\n.volume-slider::-moz-range-thumb {\n  width: 15px;\n  height: 15px;\n  background: #6366f1;\n  cursor: pointer;\n  border-radius: 50%;\n  border: none;\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.3);\n}\n\n/* 响应式调整 */\n@media (max-width: 450px) {\n  .music-player-container {\n    width: 90%;\n    padding: 20px;\n  }\n  \n  .vinyl-container {\n    width: 150px;\n    height: 150px;\n  }\n  \n  .control-buttons {\n    gap: 10px;\n  }\n  \n  .playlist-container {\n    width: 90%;\n  }\n}\n</style>","import script from \"./MusicPlayer.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./MusicPlayer.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./MusicPlayer.vue?vue&type=style&index=0&id=5e7f18bf&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-5e7f18bf\"]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, unref as _unref, createVNode as _createVNode, toDisplayString as _toDisplayString, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeClass as _normalizeClass } from \"vue\"\n\nconst _hoisted_1 = { class: \"anime-recommendation\" }\nconst _hoisted_2 = { class: \"current-recommendation\" }\nconst _hoisted_3 = { class: \"recommendation-content\" }\nconst _hoisted_4 = { class: \"anime-image-container\" }\nconst _hoisted_5 = [\"src\", \"alt\"]\nconst _hoisted_6 = { class: \"anime-info\" }\nconst _hoisted_7 = { class: \"anime-title\" }\nconst _hoisted_8 = { class: \"anime-description\" }\nconst _hoisted_9 = { class: \"recommendation-reason\" }\nconst _hoisted_10 = { class: \"reason-text\" }\nconst _hoisted_11 = { class: \"indicator-container\" }\nconst _hoisted_12 = [\"onClick\"]\n\nimport { ref, computed } from 'vue';\nimport { LeftOutlined, RightOutlined } from '@ant-design/icons-vue';\n\n// 定义动画推荐数据类型\ninterface AnimeRecommendation {\n  id: number;\n  title: string;\n  description: string;\n  imageUrl: string;\n  reason: string;\n}\n\n// 动画推荐数据\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'AnimeRecommendation',\n  setup(__props) {\n\nconst animeList = ref<AnimeRecommendation[]>([\n  {\n    id: 1,\n    title: '死亡笔记',\n    description: '一部关于天才与死亡的心理战动画',\n    imageUrl: require('../assets/images/animation/death note。jpg.jpg'),\n    reason: '智斗启蒙作了属于是，难以超越的经典'\n  },\n  {\n    id: 2,\n    title: 'Fate/Zero',\n    description: '圣杯战争的史诗篇章',\n    imageUrl: require('../assets/images/animation/fz.jpg'),\n    reason: '同样的，开启我月丑生涯的启蒙作，也是fate系列最喜欢的一作，切嗣也是我觉得最有魅力的男主角'\n  },\n  {\n    id: 3,\n    title: '游戏人生',\n    description: '空白永不败北',\n    imageUrl: require('../assets/images/animation/no game no life.jpg'),\n    reason: '智斗和有趣的神作，剧场版更是传说。但你说的对，我第二季呢'\n  },\n  {\n    id: 4,\n    title: 'OVERLORD',\n    description: '骨傲天的异世界冒险',\n    imageUrl: require('../assets/images/animation/overlord.jpg'),\n    reason: '世界观和人设十分有趣，牢骨和旧友的关系是最吸引人的'\n  },\n  {\n    id: 5,\n    title: '魔法少女小圆',\n    description: '爱的战士虚渊玄的代表作',\n    imageUrl: require('../assets/images/animation/圆神.jpg'),\n    reason: '军火女王和圆神是这部番吸引我的G点'\n  },\n  {\n    id: 6,\n    title: '无职转生',\n    description: '关于成长与救赎的异世界物语',\n    imageUrl: require('../assets/images/animation/无职转生.jpg'),\n    reason: '没什么好说的，异世界的神'\n  },\n  {\n    id: 7,\n    title: '想要成为影之实力者',\n    description: '迪化最严重的一集',\n    imageUrl: require('../assets/images/animation/暗影大人.jpg'),\n    reason: '主打一个黄金厕纸有趣就完了'\n  },\n  {\n    id: 8,\n    title: '为美好的世界献上祝福！',\n    description: '轻松搞笑的异世界喜剧',\n    imageUrl: require('../assets/images/animation/素晴.jpg'),\n    reason: '这类型的神，什么时候看到和真能不笑呢'\n  },\n  {\n    id: 9,\n    title: '某科学的超电磁炮',\n    description: '炮姐的传奇故事',\n    imageUrl: require('../assets/images/animation/超炮.jpg'),\n    reason: '学园都市发生的一切都深刻吸引着我，那还说啥了，黑子是我的'\n  },\n  {\n    id: 10,\n    title: '反叛的鲁路修',\n    description: '关于权谋与复仇的经典之作',\n    imageUrl: require('../assets/images/animation/鲁鲁修.jpg'),\n    reason: '你说的对，这部在智斗上略显儿科，但鲁鲁修最后我是真的掉小珍珠了好不好'\n  }\n]);\n\n// 当前显示的动画索引\nconst currentIndex = ref(0);\n\n// 计算当前显示的动画\nconst currentAnime = computed(() => {\n  return animeList.value[currentIndex.value];\n});\n\n// 切换到上一个动画\nconst prevAnime = () => {\n  currentIndex.value = (currentIndex.value - 1 + animeList.value.length) % animeList.value.length;\n};\n\n// 切换到下一个动画\nconst nextAnime = () => {\n  currentIndex.value = (currentIndex.value + 1) % animeList.value.length;\n};\n\n// 跳转到指定动画\nconst goToAnime = (index: number) => {\n  currentIndex.value = index;\n};\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _cache[1] || (_cache[1] = _createElementVNode(\"h2\", {\n      class: \"section-title\",\n      \"data-aos\": \"fade-up\"\n    }, \"🎬 动画推荐\", -1)),\n    _createElementVNode(\"div\", _hoisted_2, [\n      _createElementVNode(\"button\", {\n        class: \"nav-button left-button\",\n        onClick: prevAnime,\n        \"aria-label\": \"上一个推荐\"\n      }, [\n        _createVNode(_unref(LeftOutlined))\n      ]),\n      _createElementVNode(\"div\", _hoisted_3, [\n        _createElementVNode(\"div\", _hoisted_4, [\n          _createElementVNode(\"img\", {\n            src: currentAnime.value.imageUrl,\n            alt: currentAnime.value.title,\n            class: \"anime-image\",\n            loading: \"lazy\"\n          }, null, 8, _hoisted_5)\n        ]),\n        _createElementVNode(\"div\", _hoisted_6, [\n          _createElementVNode(\"h3\", _hoisted_7, _toDisplayString(currentAnime.value.title), 1),\n          _createElementVNode(\"p\", _hoisted_8, _toDisplayString(currentAnime.value.description), 1)\n        ])\n      ]),\n      _createElementVNode(\"button\", {\n        class: \"nav-button right-button\",\n        onClick: nextAnime,\n        \"aria-label\": \"下一个推荐\"\n      }, [\n        _createVNode(_unref(RightOutlined))\n      ])\n    ]),\n    _createElementVNode(\"div\", _hoisted_9, [\n      _cache[0] || (_cache[0] = _createElementVNode(\"h4\", { class: \"reason-title\" }, \"推荐理由\", -1)),\n      _createElementVNode(\"p\", _hoisted_10, _toDisplayString(currentAnime.value.reason), 1)\n    ]),\n    _createElementVNode(\"div\", _hoisted_11, [\n      (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(animeList.value, (anime, index) => {\n        return (_openBlock(), _createElementBlock(\"div\", {\n          key: anime.id,\n          class: _normalizeClass([\"indicator\", { 'active': currentIndex.value === index }]),\n          onClick: ($event: any) => (goToAnime(index))\n        }, null, 10, _hoisted_12))\n      }), 128))\n    ])\n  ]))\n}\n}\n\n})","<template>\n  <div class=\"anime-recommendation\">\n    <h2 class=\"section-title\" data-aos=\"fade-up\">🎬 动画推荐</h2>\n    \n    <!-- 当前推荐显示区域 -->\n    <div class=\"current-recommendation\">\n      <!-- 切换按钮 -->\n      <button \n        class=\"nav-button left-button\" \n        @click=\"prevAnime\" \n        aria-label=\"上一个推荐\"\n      >\n        <LeftOutlined />\n      </button>\n      \n      <!-- 推荐内容 -->\n      <div class=\"recommendation-content\">\n        <div class=\"anime-image-container\">\n          <img \n            :src=\"currentAnime.imageUrl\" \n            :alt=\"currentAnime.title\" \n            class=\"anime-image\" \n            loading=\"lazy\"\n          />\n        </div>\n        <div class=\"anime-info\">\n          <h3 class=\"anime-title\">{{ currentAnime.title }}</h3>\n          <p class=\"anime-description\">{{ currentAnime.description }}</p>\n        </div>\n      </div>\n      \n      <button \n        class=\"nav-button right-button\" \n        @click=\"nextAnime\" \n        aria-label=\"下一个推荐\"\n      >\n        <RightOutlined />\n      </button>\n    </div>\n    \n    <!-- 推荐理由区域 -->\n    <div class=\"recommendation-reason\">\n      <h4 class=\"reason-title\">推荐理由</h4>\n      <p class=\"reason-text\">{{ currentAnime.reason }}</p>\n    </div>\n    \n    <!-- 指示器 -->\n    <div class=\"indicator-container\">\n      <div \n        v-for=\"(anime, index) in animeList\" \n        :key=\"anime.id\"\n        class=\"indicator\"\n        :class=\"{ 'active': currentIndex === index }\"\n        @click=\"goToAnime(index)\"\n      ></div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, computed } from 'vue';\nimport { LeftOutlined, RightOutlined } from '@ant-design/icons-vue';\n\n// 定义动画推荐数据类型\ninterface AnimeRecommendation {\n  id: number;\n  title: string;\n  description: string;\n  imageUrl: string;\n  reason: string;\n}\n\n// 动画推荐数据\nconst animeList = ref<AnimeRecommendation[]>([\n  {\n    id: 1,\n    title: '死亡笔记',\n    description: '一部关于天才与死亡的心理战动画',\n    imageUrl: require('../assets/images/animation/death note。jpg.jpg'),\n    reason: '智斗启蒙作了属于是，难以超越的经典'\n  },\n  {\n    id: 2,\n    title: 'Fate/Zero',\n    description: '圣杯战争的史诗篇章',\n    imageUrl: require('../assets/images/animation/fz.jpg'),\n    reason: '同样的，开启我月丑生涯的启蒙作，也是fate系列最喜欢的一作，切嗣也是我觉得最有魅力的男主角'\n  },\n  {\n    id: 3,\n    title: '游戏人生',\n    description: '空白永不败北',\n    imageUrl: require('../assets/images/animation/no game no life.jpg'),\n    reason: '智斗和有趣的神作，剧场版更是传说。但你说的对，我第二季呢'\n  },\n  {\n    id: 4,\n    title: 'OVERLORD',\n    description: '骨傲天的异世界冒险',\n    imageUrl: require('../assets/images/animation/overlord.jpg'),\n    reason: '世界观和人设十分有趣，牢骨和旧友的关系是最吸引人的'\n  },\n  {\n    id: 5,\n    title: '魔法少女小圆',\n    description: '爱的战士虚渊玄的代表作',\n    imageUrl: require('../assets/images/animation/圆神.jpg'),\n    reason: '军火女王和圆神是这部番吸引我的G点'\n  },\n  {\n    id: 6,\n    title: '无职转生',\n    description: '关于成长与救赎的异世界物语',\n    imageUrl: require('../assets/images/animation/无职转生.jpg'),\n    reason: '没什么好说的，异世界的神'\n  },\n  {\n    id: 7,\n    title: '想要成为影之实力者',\n    description: '迪化最严重的一集',\n    imageUrl: require('../assets/images/animation/暗影大人.jpg'),\n    reason: '主打一个黄金厕纸有趣就完了'\n  },\n  {\n    id: 8,\n    title: '为美好的世界献上祝福！',\n    description: '轻松搞笑的异世界喜剧',\n    imageUrl: require('../assets/images/animation/素晴.jpg'),\n    reason: '这类型的神，什么时候看到和真能不笑呢'\n  },\n  {\n    id: 9,\n    title: '某科学的超电磁炮',\n    description: '炮姐的传奇故事',\n    imageUrl: require('../assets/images/animation/超炮.jpg'),\n    reason: '学园都市发生的一切都深刻吸引着我，那还说啥了，黑子是我的'\n  },\n  {\n    id: 10,\n    title: '反叛的鲁路修',\n    description: '关于权谋与复仇的经典之作',\n    imageUrl: require('../assets/images/animation/鲁鲁修.jpg'),\n    reason: '你说的对，这部在智斗上略显儿科，但鲁鲁修最后我是真的掉小珍珠了好不好'\n  }\n]);\n\n// 当前显示的动画索引\nconst currentIndex = ref(0);\n\n// 计算当前显示的动画\nconst currentAnime = computed(() => {\n  return animeList.value[currentIndex.value];\n});\n\n// 切换到上一个动画\nconst prevAnime = () => {\n  currentIndex.value = (currentIndex.value - 1 + animeList.value.length) % animeList.value.length;\n};\n\n// 切换到下一个动画\nconst nextAnime = () => {\n  currentIndex.value = (currentIndex.value + 1) % animeList.value.length;\n};\n\n// 跳转到指定动画\nconst goToAnime = (index: number) => {\n  currentIndex.value = index;\n};\n</script>\n\n<style scoped>\n.anime-recommendation {\n  background-color: var(--bg-color);\n  border-radius: var(--radius-lg);\n  padding: var(--spacing-xl);\n  box-shadow: var(--shadow-light);\n  margin-bottom: var(--spacing-xl);\n}\n\n.section-title {\n  font-size: var(--font-size-xl);\n  color: var(--text-primary);\n  margin-bottom: var(--spacing-xl);\n  text-align: center;\n}\n\n.current-recommendation {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: relative;\n  margin-bottom: var(--spacing-xl);\n}\n\n.nav-button {\n  position: absolute;\n  width: 48px;\n  height: 48px;\n  border-radius: var(--radius-full);\n  background-color: rgba(255, 255, 255, 0.9);\n  border: none;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  box-shadow: var(--shadow-medium);\n  transition: all var(--transition-normal);\n  z-index: 10;\n}\n\n.nav-button:hover {\n  background-color: var(--bg-color);\n  transform: scale(1.1);\n}\n\n.left-button {\n  left: -24px;\n}\n\n.right-button {\n  right: -24px;\n}\n\n.recommendation-content {\n  width: 100%;\n  max-width: 800px;\n  text-align: center;\n}\n\n.anime-image-container {\n  margin-bottom: var(--spacing-lg);\n  border-radius: var(--radius-lg);\n  overflow: hidden;\n  box-shadow: var(--shadow-medium);\n  transition: all var(--transition-normal);\n}\n\n.anime-image-container:hover {\n  box-shadow: var(--shadow-heavy);\n  transform: translateY(-4px);\n}\n\n.anime-image {\n  width: 100%;\n  height: auto;\n  display: block;\n  transition: transform var(--transition-normal);\n}\n\n.anime-image:hover {\n  transform: scale(1.02);\n}\n\n.anime-info {\n  padding: 0 var(--spacing-lg);\n}\n\n.anime-title {\n  font-size: var(--font-size-lg);\n  color: var(--text-primary);\n  margin-bottom: var(--spacing-md);\n}\n\n.anime-description {\n  font-size: var(--font-size-base);\n  color: var(--text-secondary);\n  margin-bottom: var(--spacing-lg);\n}\n\n.recommendation-reason {\n  background-color: var(--bg-secondary);\n  border-radius: var(--radius-lg);\n  padding: var(--spacing-lg);\n  margin-bottom: var(--spacing-lg);\n}\n\n.reason-title {\n  font-size: var(--font-size-lg);\n  color: var(--text-primary);\n  margin-bottom: var(--spacing-md);\n}\n\n.reason-text {\n  font-size: var(--font-size-base);\n  color: var(--text-secondary);\n  line-height: 1.8;\n}\n\n.indicator-container {\n  display: flex;\n  justify-content: center;\n  gap: var(--spacing-sm);\n}\n\n.indicator {\n  width: 12px;\n  height: 12px;\n  border-radius: var(--radius-full);\n  background-color: var(--border-color);\n  cursor: pointer;\n  transition: all var(--transition-normal);\n}\n\n.indicator:hover {\n  background-color: var(--text-tertiary);\n}\n\n.indicator.active {\n  background-color: var(--primary-color);\n  width: 32px;\n}\n\n/* 响应式设计 */\n@media (max-width: 768px) {\n  .anime-recommendation {\n    padding: var(--spacing-lg);\n  }\n  \n  .nav-button {\n    width: 40px;\n    height: 40px;\n  }\n  \n  .left-button {\n    left: -20px;\n  }\n  \n  .right-button {\n    right: -20px;\n  }\n  \n  .anime-image {\n    max-height: 300px;\n    object-fit: cover;\n  }\n}\n\n@media (max-width: 480px) {\n  .nav-button {\n    width: 32px;\n    height: 32px;\n  }\n  \n  .left-button {\n    left: -16px;\n  }\n  \n  .right-button {\n    right: -16px;\n  }\n  \n  .anime-image {\n    max-height: 200px;\n  }\n}\n</style>","<template>\n  <div class=\"anime-recommendation\">\n    <h2 class=\"section-title\" data-aos=\"fade-up\">🎬 动画推荐</h2>\n    \n    <!-- 当前推荐显示区域 -->\n    <div class=\"current-recommendation\">\n      <!-- 切换按钮 -->\n      <button \n        class=\"nav-button left-button\" \n        @click=\"prevAnime\" \n        aria-label=\"上一个推荐\"\n      >\n        <LeftOutlined />\n      </button>\n      \n      <!-- 推荐内容 -->\n      <div class=\"recommendation-content\">\n        <div class=\"anime-image-container\">\n          <img \n            :src=\"currentAnime.imageUrl\" \n            :alt=\"currentAnime.title\" \n            class=\"anime-image\" \n            loading=\"lazy\"\n          />\n        </div>\n        <div class=\"anime-info\">\n          <h3 class=\"anime-title\">{{ currentAnime.title }}</h3>\n          <p class=\"anime-description\">{{ currentAnime.description }}</p>\n        </div>\n      </div>\n      \n      <button \n        class=\"nav-button right-button\" \n        @click=\"nextAnime\" \n        aria-label=\"下一个推荐\"\n      >\n        <RightOutlined />\n      </button>\n    </div>\n    \n    <!-- 推荐理由区域 -->\n    <div class=\"recommendation-reason\">\n      <h4 class=\"reason-title\">推荐理由</h4>\n      <p class=\"reason-text\">{{ currentAnime.reason }}</p>\n    </div>\n    \n    <!-- 指示器 -->\n    <div class=\"indicator-container\">\n      <div \n        v-for=\"(anime, index) in animeList\" \n        :key=\"anime.id\"\n        class=\"indicator\"\n        :class=\"{ 'active': currentIndex === index }\"\n        @click=\"goToAnime(index)\"\n      ></div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, computed } from 'vue';\nimport { LeftOutlined, RightOutlined } from '@ant-design/icons-vue';\n\n// 定义动画推荐数据类型\ninterface AnimeRecommendation {\n  id: number;\n  title: string;\n  description: string;\n  imageUrl: string;\n  reason: string;\n}\n\n// 动画推荐数据\nconst animeList = ref<AnimeRecommendation[]>([\n  {\n    id: 1,\n    title: '死亡笔记',\n    description: '一部关于天才与死亡的心理战动画',\n    imageUrl: require('../assets/images/animation/death note。jpg.jpg'),\n    reason: '智斗启蒙作了属于是，难以超越的经典'\n  },\n  {\n    id: 2,\n    title: 'Fate/Zero',\n    description: '圣杯战争的史诗篇章',\n    imageUrl: require('../assets/images/animation/fz.jpg'),\n    reason: '同样的，开启我月丑生涯的启蒙作，也是fate系列最喜欢的一作，切嗣也是我觉得最有魅力的男主角'\n  },\n  {\n    id: 3,\n    title: '游戏人生',\n    description: '空白永不败北',\n    imageUrl: require('../assets/images/animation/no game no life.jpg'),\n    reason: '智斗和有趣的神作，剧场版更是传说。但你说的对，我第二季呢'\n  },\n  {\n    id: 4,\n    title: 'OVERLORD',\n    description: '骨傲天的异世界冒险',\n    imageUrl: require('../assets/images/animation/overlord.jpg'),\n    reason: '世界观和人设十分有趣，牢骨和旧友的关系是最吸引人的'\n  },\n  {\n    id: 5,\n    title: '魔法少女小圆',\n    description: '爱的战士虚渊玄的代表作',\n    imageUrl: require('../assets/images/animation/圆神.jpg'),\n    reason: '军火女王和圆神是这部番吸引我的G点'\n  },\n  {\n    id: 6,\n    title: '无职转生',\n    description: '关于成长与救赎的异世界物语',\n    imageUrl: require('../assets/images/animation/无职转生.jpg'),\n    reason: '没什么好说的，异世界的神'\n  },\n  {\n    id: 7,\n    title: '想要成为影之实力者',\n    description: '迪化最严重的一集',\n    imageUrl: require('../assets/images/animation/暗影大人.jpg'),\n    reason: '主打一个黄金厕纸有趣就完了'\n  },\n  {\n    id: 8,\n    title: '为美好的世界献上祝福！',\n    description: '轻松搞笑的异世界喜剧',\n    imageUrl: require('../assets/images/animation/素晴.jpg'),\n    reason: '这类型的神，什么时候看到和真能不笑呢'\n  },\n  {\n    id: 9,\n    title: '某科学的超电磁炮',\n    description: '炮姐的传奇故事',\n    imageUrl: require('../assets/images/animation/超炮.jpg'),\n    reason: '学园都市发生的一切都深刻吸引着我，那还说啥了，黑子是我的'\n  },\n  {\n    id: 10,\n    title: '反叛的鲁路修',\n    description: '关于权谋与复仇的经典之作',\n    imageUrl: require('../assets/images/animation/鲁鲁修.jpg'),\n    reason: '你说的对，这部在智斗上略显儿科，但鲁鲁修最后我是真的掉小珍珠了好不好'\n  }\n]);\n\n// 当前显示的动画索引\nconst currentIndex = ref(0);\n\n// 计算当前显示的动画\nconst currentAnime = computed(() => {\n  return animeList.value[currentIndex.value];\n});\n\n// 切换到上一个动画\nconst prevAnime = () => {\n  currentIndex.value = (currentIndex.value - 1 + animeList.value.length) % animeList.value.length;\n};\n\n// 切换到下一个动画\nconst nextAnime = () => {\n  currentIndex.value = (currentIndex.value + 1) % animeList.value.length;\n};\n\n// 跳转到指定动画\nconst goToAnime = (index: number) => {\n  currentIndex.value = index;\n};\n</script>\n\n<style scoped>\n.anime-recommendation {\n  background-color: var(--bg-color);\n  border-radius: var(--radius-lg);\n  padding: var(--spacing-xl);\n  box-shadow: var(--shadow-light);\n  margin-bottom: var(--spacing-xl);\n}\n\n.section-title {\n  font-size: var(--font-size-xl);\n  color: var(--text-primary);\n  margin-bottom: var(--spacing-xl);\n  text-align: center;\n}\n\n.current-recommendation {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: relative;\n  margin-bottom: var(--spacing-xl);\n}\n\n.nav-button {\n  position: absolute;\n  width: 48px;\n  height: 48px;\n  border-radius: var(--radius-full);\n  background-color: rgba(255, 255, 255, 0.9);\n  border: none;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  box-shadow: var(--shadow-medium);\n  transition: all var(--transition-normal);\n  z-index: 10;\n}\n\n.nav-button:hover {\n  background-color: var(--bg-color);\n  transform: scale(1.1);\n}\n\n.left-button {\n  left: -24px;\n}\n\n.right-button {\n  right: -24px;\n}\n\n.recommendation-content {\n  width: 100%;\n  max-width: 800px;\n  text-align: center;\n}\n\n.anime-image-container {\n  margin-bottom: var(--spacing-lg);\n  border-radius: var(--radius-lg);\n  overflow: hidden;\n  box-shadow: var(--shadow-medium);\n  transition: all var(--transition-normal);\n}\n\n.anime-image-container:hover {\n  box-shadow: var(--shadow-heavy);\n  transform: translateY(-4px);\n}\n\n.anime-image {\n  width: 100%;\n  height: auto;\n  display: block;\n  transition: transform var(--transition-normal);\n}\n\n.anime-image:hover {\n  transform: scale(1.02);\n}\n\n.anime-info {\n  padding: 0 var(--spacing-lg);\n}\n\n.anime-title {\n  font-size: var(--font-size-lg);\n  color: var(--text-primary);\n  margin-bottom: var(--spacing-md);\n}\n\n.anime-description {\n  font-size: var(--font-size-base);\n  color: var(--text-secondary);\n  margin-bottom: var(--spacing-lg);\n}\n\n.recommendation-reason {\n  background-color: var(--bg-secondary);\n  border-radius: var(--radius-lg);\n  padding: var(--spacing-lg);\n  margin-bottom: var(--spacing-lg);\n}\n\n.reason-title {\n  font-size: var(--font-size-lg);\n  color: var(--text-primary);\n  margin-bottom: var(--spacing-md);\n}\n\n.reason-text {\n  font-size: var(--font-size-base);\n  color: var(--text-secondary);\n  line-height: 1.8;\n}\n\n.indicator-container {\n  display: flex;\n  justify-content: center;\n  gap: var(--spacing-sm);\n}\n\n.indicator {\n  width: 12px;\n  height: 12px;\n  border-radius: var(--radius-full);\n  background-color: var(--border-color);\n  cursor: pointer;\n  transition: all var(--transition-normal);\n}\n\n.indicator:hover {\n  background-color: var(--text-tertiary);\n}\n\n.indicator.active {\n  background-color: var(--primary-color);\n  width: 32px;\n}\n\n/* 响应式设计 */\n@media (max-width: 768px) {\n  .anime-recommendation {\n    padding: var(--spacing-lg);\n  }\n  \n  .nav-button {\n    width: 40px;\n    height: 40px;\n  }\n  \n  .left-button {\n    left: -20px;\n  }\n  \n  .right-button {\n    right: -20px;\n  }\n  \n  .anime-image {\n    max-height: 300px;\n    object-fit: cover;\n  }\n}\n\n@media (max-width: 480px) {\n  .nav-button {\n    width: 32px;\n    height: 32px;\n  }\n  \n  .left-button {\n    left: -16px;\n  }\n  \n  .right-button {\n    right: -16px;\n  }\n  \n  .anime-image {\n    max-height: 200px;\n  }\n}\n</style>","import script from \"./AnimeRecommendation.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./AnimeRecommendation.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./AnimeRecommendation.vue?vue&type=style&index=0&id=30a972ec&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-30a972ec\"]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\"\n\nconst _hoisted_1 = { class: \"data-display\" }\nconst _hoisted_2 = { class: \"data-container\" }\nconst _hoisted_3 = { class: \"data-title\" }\nconst _hoisted_4 = [\"href\"]\nconst _hoisted_5 = { class: \"data-date\" }\n\nimport { ref, onMounted } from 'vue';\r\n\r\n// 定义数据类型\r\ninterface DataItem {\r\n  '标题': string;\r\n  '链接': string;\r\n  '日期': string;\r\n}\r\n\r\n// 数据状态\r\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'DataDisplay',\n  setup(__props) {\n\r\nconst dataItems = ref<DataItem[]>([]);\r\n\r\n// 加载数据\r\nonMounted(async () => {\r\n  try {\r\n    // 从GitHub仓库获取JSON数据\r\n    const response = await fetch('https://raw.githubusercontent.com/shiki-desu/shiki-web.github.io/main/data/notices.json');\r\n    if (!response.ok) {\r\n      throw new Error('网络响应异常');\r\n    }\r\n    dataItems.value = await response.json();\r\n  } catch (error) {\r\n    console.error('加载数据失败:', error);\r\n    // 可以在这里添加备用方案，比如使用本地数据\r\n  }\r\n});\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _cache[0] || (_cache[0] = _createElementVNode(\"h2\", { class: \"section-title\" }, \"📋 蜗师通知实时更新\", -1)),\n    _createElementVNode(\"div\", _hoisted_2, [\n      (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(dataItems.value, (item, index) => {\n        return (_openBlock(), _createElementBlock(\"div\", {\n          key: index,\n          class: \"data-item\"\n        }, [\n          _createElementVNode(\"div\", _hoisted_3, [\n            _createElementVNode(\"a\", {\n              href: item['链接'],\n              target: \"_blank\",\n              rel: \"noopener noreferrer\"\n            }, _toDisplayString(item['标题']), 9, _hoisted_4)\n          ]),\n          _createElementVNode(\"div\", _hoisted_5, _toDisplayString(item['日期']), 1)\n        ]))\n      }), 128))\n    ])\n  ]))\n}\n}\n\n})","<template>\r\n  <div class=\"data-display\">\r\n    <h2 class=\"section-title\">📋 蜗师通知实时更新</h2>\r\n    <div class=\"data-container\">\r\n      <div v-for=\"(item, index) in dataItems\" :key=\"index\" class=\"data-item\">\r\n        <div class=\"data-title\">\r\n          <a :href=\"item['链接']\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n            {{ item['标题'] }}\r\n          </a>\r\n        </div>\r\n        <div class=\"data-date\">{{ item['日期'] }}</div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { ref, onMounted } from 'vue';\r\n\r\n// 定义数据类型\r\ninterface DataItem {\r\n  '标题': string;\r\n  '链接': string;\r\n  '日期': string;\r\n}\r\n\r\n// 数据状态\r\nconst dataItems = ref<DataItem[]>([]);\r\n\r\n// 加载数据\r\nonMounted(async () => {\r\n  try {\r\n    // 从GitHub仓库获取JSON数据\r\n    const response = await fetch('https://raw.githubusercontent.com/shiki-desu/shiki-web.github.io/main/data/notices.json');\r\n    if (!response.ok) {\r\n      throw new Error('网络响应异常');\r\n    }\r\n    dataItems.value = await response.json();\r\n  } catch (error) {\r\n    console.error('加载数据失败:', error);\r\n    // 可以在这里添加备用方案，比如使用本地数据\r\n  }\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n.data-display {\r\n  background-color: var(--bg-color);\r\n  border-radius: var(--radius-lg);\r\n  padding: var(--spacing-xl);\r\n  box-shadow: var(--shadow-light);\r\n  margin-bottom: var(--spacing-xl);\r\n}\r\n\r\n.section-title {\r\n  font-size: var(--font-size-xl);\r\n  color: var(--text-primary);\r\n  margin-bottom: var(--spacing-xl);\r\n  text-align: center;\r\n}\r\n\r\n.data-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: var(--spacing-md);\r\n}\r\n\r\n.data-item {\r\n  background-color: var(--bg-secondary);\r\n  border-radius: var(--radius-md);\r\n  padding: var(--spacing-lg);\r\n  transition: all var(--transition-normal);\r\n  border-left: 4px solid var(--primary-color);\r\n}\r\n\r\n.data-item:hover {\r\n  transform: translateX(5px);\r\n  box-shadow: var(--shadow-medium);\r\n  border-left-color: var(--primary-light);\r\n}\r\n\r\n.data-title {\r\n  font-size: var(--font-size-base);\r\n  font-weight: 600;\r\n  margin-bottom: var(--spacing-xs);\r\n}\r\n\r\n.data-title a {\r\n  color: var(--text-primary);\r\n  text-decoration: none;\r\n  transition: color var(--transition-fast);\r\n}\r\n\r\n.data-title a:hover {\r\n  color: var(--primary-color);\r\n  text-decoration: underline;\r\n}\r\n\r\n.data-date {\r\n  font-size: var(--font-size-sm);\r\n  color: var(--text-tertiary);\r\n}\r\n\r\n/* 响应式设计 */\r\n@media (max-width: 768px) {\r\n  .data-display {\r\n    padding: var(--spacing-lg);\r\n  }\r\n  \r\n  .section-title {\r\n    font-size: var(--font-size-lg);\r\n  }\r\n  \r\n  .data-item {\r\n    padding: var(--spacing-md);\r\n  }\r\n}\r\n</style>","<template>\r\n  <div class=\"data-display\">\r\n    <h2 class=\"section-title\">📋 蜗师通知实时更新</h2>\r\n    <div class=\"data-container\">\r\n      <div v-for=\"(item, index) in dataItems\" :key=\"index\" class=\"data-item\">\r\n        <div class=\"data-title\">\r\n          <a :href=\"item['链接']\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n            {{ item['标题'] }}\r\n          </a>\r\n        </div>\r\n        <div class=\"data-date\">{{ item['日期'] }}</div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { ref, onMounted } from 'vue';\r\n\r\n// 定义数据类型\r\ninterface DataItem {\r\n  '标题': string;\r\n  '链接': string;\r\n  '日期': string;\r\n}\r\n\r\n// 数据状态\r\nconst dataItems = ref<DataItem[]>([]);\r\n\r\n// 加载数据\r\nonMounted(async () => {\r\n  try {\r\n    // 从GitHub仓库获取JSON数据\r\n    const response = await fetch('https://raw.githubusercontent.com/shiki-desu/shiki-web.github.io/main/data/notices.json');\r\n    if (!response.ok) {\r\n      throw new Error('网络响应异常');\r\n    }\r\n    dataItems.value = await response.json();\r\n  } catch (error) {\r\n    console.error('加载数据失败:', error);\r\n    // 可以在这里添加备用方案，比如使用本地数据\r\n  }\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n.data-display {\r\n  background-color: var(--bg-color);\r\n  border-radius: var(--radius-lg);\r\n  padding: var(--spacing-xl);\r\n  box-shadow: var(--shadow-light);\r\n  margin-bottom: var(--spacing-xl);\r\n}\r\n\r\n.section-title {\r\n  font-size: var(--font-size-xl);\r\n  color: var(--text-primary);\r\n  margin-bottom: var(--spacing-xl);\r\n  text-align: center;\r\n}\r\n\r\n.data-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: var(--spacing-md);\r\n}\r\n\r\n.data-item {\r\n  background-color: var(--bg-secondary);\r\n  border-radius: var(--radius-md);\r\n  padding: var(--spacing-lg);\r\n  transition: all var(--transition-normal);\r\n  border-left: 4px solid var(--primary-color);\r\n}\r\n\r\n.data-item:hover {\r\n  transform: translateX(5px);\r\n  box-shadow: var(--shadow-medium);\r\n  border-left-color: var(--primary-light);\r\n}\r\n\r\n.data-title {\r\n  font-size: var(--font-size-base);\r\n  font-weight: 600;\r\n  margin-bottom: var(--spacing-xs);\r\n}\r\n\r\n.data-title a {\r\n  color: var(--text-primary);\r\n  text-decoration: none;\r\n  transition: color var(--transition-fast);\r\n}\r\n\r\n.data-title a:hover {\r\n  color: var(--primary-color);\r\n  text-decoration: underline;\r\n}\r\n\r\n.data-date {\r\n  font-size: var(--font-size-sm);\r\n  color: var(--text-tertiary);\r\n}\r\n\r\n/* 响应式设计 */\r\n@media (max-width: 768px) {\r\n  .data-display {\r\n    padding: var(--spacing-lg);\r\n  }\r\n  \r\n  .section-title {\r\n    font-size: var(--font-size-lg);\r\n  }\r\n  \r\n  .data-item {\r\n    padding: var(--spacing-md);\r\n  }\r\n}\r\n</style>","import script from \"./DataDisplay.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./DataDisplay.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./DataDisplay.vue?vue&type=style&index=0&id=c7adfd6a&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-c7adfd6a\"]])\n\nexport default __exports__","// 定义文章数据类型\nexport interface Article {\n  id: number;\n  title: string;\n  date: string;\n  content: string;\n  coverImg: string;\n}\n\n// 文章列表数据\nexport const getArticles = (): Article[] => {\n  return [\n    {\n      id: 1,\n      title: \"目前已公开的情报\",\n      date: \"2025-9-16 · 个人微简介\",\n      content: \"目前是大一在读生，喜欢游戏和动漫。\" +\n        \"\\n\\n性格较为内向，但和我混熟了会发现我是相当奔放不要脸的人哦\" +\n        \"\\n\\n做这个网站是自己学了一些前端，并加上ai的辅佐（虽然大部分是ai大人的功劳）建立的\" +\n        \"\\n\\n未来我更牛逼了会让它变得更加漂亮的！\",\n      coverImg: require('../assets/images/希露菲.jpg')\n    },\n    {\n      id: 2,\n      title: \"在世上留下爪痕！\",\n      date: \"2025-9-16 · 目标与未来\",\n      content: \"我未来的目标在大学是升学，去到更好的地方深造自己\" +\n        \"\\n\\n未来希望在芯片和人工智能领域做出贡献，同时我还有的研究兴趣是脑科学，十分美妙哦\" +\n        \"\\n\\n对未来的态度是憧憬且带有希望的，希望能变得更强\",\n      coverImg: require('../assets/images/洛琪希.jpg')\n    },\n    {\n      id: 3,\n      title: \"和我玩喵\",\n      date: \"2025-9-16 · 联系与共斗\",\n      content: \"我steam大号的id是888410264\" +\n        \"\\n\\n希望找到共同爱好的人一起共斗哇，加我wx也可,简单说一些我喜欢的游戏：神之天平，赛博朋克2077\"+\n        \"各种各样的单机游戏，我将来也会试着玩网游或二游的。如果说一个最喜欢的类型，是MMO哒\",\n      coverImg: require('../assets/images/爱丽丝.jpg')\n    }\n  ];\n}\n\n// 根据ID获取文章详情\nexport const getArticleById = (id: number): Article | undefined => {\n  const articles = getArticles();\n  return articles.find(article => article.id === id);\n};","// 控制页面滚动\n\nexport const disablePageScroll = (): void => {\n  document.body.classList.add('modal-open');\n  document.body.style.overflow = 'hidden';\n};\n\nexport const enablePageScroll = (): void => {\n  document.body.classList.remove('modal-open');\n  document.body.style.overflow = '';\n};\n\n// 为元素添加渐入动画\nexport const addFadeInAnimation = (elements: HTMLElement[], delay = 100): void => {\n  elements.forEach((element, index) => {\n    setTimeout(() => {\n      element.classList.add('animate-in');\n    }, delay * index);\n  });\n};","import { defineComponent as _defineComponent } from 'vue'\nimport { normalizeClass as _normalizeClass, createElementVNode as _createElementVNode, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createBlock as _createBlock, createStaticVNode as _createStaticVNode } from \"vue\"\nimport _imports_0 from '../assets/images/凉宫春日.jpg'\nimport _imports_1 from '../assets/images/github.png'\n\n\nconst _hoisted_1 = { class: \"shiki-home\" }\nconst _hoisted_2 = { class: \"article-section\" }\nconst _hoisted_3 = { class: \"container\" }\nconst _hoisted_4 = { class: \"article-list\" }\nconst _hoisted_5 = { class: \"anime-section\" }\nconst _hoisted_6 = { class: \"container\" }\nconst _hoisted_7 = { class: \"data-section\" }\nconst _hoisted_8 = { class: \"container\" }\nconst _hoisted_9 = { class: \"music-section\" }\nconst _hoisted_10 = { class: \"container\" }\nconst _hoisted_11 = { class: \"music-player-wrapper\" }\n\nimport BannerSection from '../components/BannerSection.vue';\nimport ArticleCard from '../components/ArticleCard.vue';\nimport DetailModal from '../components/DetailModal.vue';\nimport BackToTop from '../components/BackToTop.vue';\nimport MusicPlayer from '../components/MusicPlayer.vue';\nimport AnimeRecommendation from '../components/AnimeRecommendation.vue';\nimport DataDisplay from '../components/DataDisplay.vue';\n\n// 导入外部资源\nimport { ref, onMounted } from 'vue';\nimport { Article, getArticles, getArticleById } from '../services/articleService';\nimport { disablePageScroll, enablePageScroll, addFadeInAnimation } from '../utils/scrollUtils';\n\n// 加载样式\nimport '../assets/styles/shikiHomeStyles.css';\n\n// 数据和状态\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'ShikiHome',\n  setup(__props) {\n\n// 导入组件\nconst articles = ref<Article[]>(getArticles());\nconst showDetail = ref(false);\nconst currentDetail = ref<Article | null>(null);\nconst isLoaded = ref(false);\n\n// 打开详情弹窗\nconst openDetail = (id: number) => {\n  const detail = getArticleById(id);\n  if (detail) {\n    currentDetail.value = detail;\n    showDetail.value = true;\n    disablePageScroll();\n  }\n};\n\n// 关闭详情弹窗\nconst closeDetail = () => {\n  showDetail.value = false;\n  enablePageScroll();\n};\n\n// 页面加载完成\nonMounted(() => {\n  // 模拟页面加载\n  setTimeout(() => {\n    isLoaded.value = true;\n    \n    // 添加卡片的渐入动画\n    const cards = Array.from(document.querySelectorAll('.article-card-item')) as HTMLElement[];\n    addFadeInAnimation(cards);\n  }, 800);\n});\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"div\", {\n      class: _normalizeClass([\"page-loader\", { 'page-loaded': isLoaded.value }])\n    }, null, 2),\n    _createVNode(BannerSection),\n    _createElementVNode(\"section\", _hoisted_2, [\n      _createElementVNode(\"div\", _hoisted_3, [\n        _cache[0] || (_cache[0] = _createElementVNode(\"h2\", {\n          class: \"section-title\",\n          \"data-aos\": \"fade-up\"\n        }, \"简单介绍自己\", -1)),\n        _createElementVNode(\"div\", _hoisted_4, [\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(articles.value, (article, index) => {\n            return (_openBlock(), _createBlock(ArticleCard, {\n              key: article.id,\n              article: article,\n              \"data-index\": index,\n              onClick: ($event: any) => (openDetail(article.id)),\n              class: \"article-card-item\"\n            }, null, 8, [\"article\", \"data-index\", \"onClick\"]))\n          }), 128))\n        ])\n      ])\n    ]),\n    _createVNode(DetailModal, {\n      show: showDetail.value,\n      detail: currentDetail.value,\n      onClose: closeDetail\n    }, null, 8, [\"show\", \"detail\"]),\n    _createVNode(BackToTop),\n    _createElementVNode(\"section\", _hoisted_5, [\n      _createElementVNode(\"div\", _hoisted_6, [\n        _createVNode(AnimeRecommendation)\n      ])\n    ]),\n    _createElementVNode(\"section\", _hoisted_7, [\n      _createElementVNode(\"div\", _hoisted_8, [\n        _createVNode(DataDisplay)\n      ])\n    ]),\n    _createElementVNode(\"section\", _hoisted_9, [\n      _createElementVNode(\"div\", _hoisted_10, [\n        _cache[1] || (_cache[1] = _createElementVNode(\"h2\", {\n          class: \"section-title\",\n          \"data-aos\": \"fade-up\"\n        }, \"🎵 不听milet的人生是相对失败的\", -1)),\n        _createElementVNode(\"div\", _hoisted_11, [\n          _createVNode(MusicPlayer)\n        ])\n      ])\n    ]),\n    _cache[2] || (_cache[2] = _createStaticVNode(\"<footer class=\\\"footer-section\\\"><div class=\\\"container\\\"><div class=\\\"footer-content\\\"><div class=\\\"haruhi-image\\\"><img src=\\\"\" + _imports_0 + \"\\\" alt=\\\"凉宫春日\\\"></div><div class=\\\"haruhi-quote\\\"> 我对普通的人类没有兴趣，你们当中要是有外星人、未来人、异世界人以及超能力者的话，就尽管来找我吧！ </div><a href=\\\"https://github.com/shiki-desu\\\" target=\\\"_blank\\\" class=\\\"github-icon\\\"><img src=\\\"\" + _imports_1 + \"\\\" alt=\\\"GitHub\\\"></a></div></div></footer>\", 1))\n  ]))\n}\n}\n\n})","<template>\n  <div class=\"shiki-home\">\n    <!-- 顶部加载指示器 -->\n    <div \n      class=\"page-loader\"\n      :class=\"{ 'page-loaded': isLoaded }\"\n    ></div>\n    \n    <!-- 顶部Banner -->\n    <BannerSection />\n    \n    <!-- 文章列表区 -->\n    <section class=\"article-section\">\n      <div class=\"container\">\n        <h2 class=\"section-title\" data-aos=\"fade-up\">简单介绍自己</h2>\n        <div class=\"article-list\">\n          <ArticleCard \n            v-for=\"(article, index) in articles\" \n            :key=\"article.id\"\n            :article=\"article\"\n            :data-index=\"index\"\n            @click=\"openDetail(article.id)\"\n            class=\"article-card-item\"\n          />\n        </div>\n      </div>\n    </section>\n    \n    <!-- 文章详情弹窗 -->\n    <DetailModal \n      :show=\"showDetail\"\n      :detail=\"currentDetail\"\n      @close=\"closeDetail\"\n    />\n\n    <!-- 回到顶部按钮 -->\n    <BackToTop />\n    \n    <!-- 动画推荐区域 -->\n    <section class=\"anime-section\">\n      <div class=\"container\">\n        <AnimeRecommendation />\n      </div>\n    </section>\n\n    <!-- 数据展示区域 -->\n    <section class=\"data-section\">\n      <div class=\"container\">\n        <DataDisplay />\n      </div>\n    </section>\n\n    <!-- 音乐播放器区域 -->\n    <section class=\"music-section\">\n      <div class=\"container\">\n        <h2 class=\"section-title\" data-aos=\"fade-up\">🎵 不听milet的人生是相对失败的</h2>\n        <div class=\"music-player-wrapper\">\n          <MusicPlayer />\n        </div>\n      </div>\n    </section>\n\n    <!-- 底部区域 -->\n    <footer class=\"footer-section\">\n      <div class=\"container\">\n        <div class=\"footer-content\">\n          <div class=\"haruhi-image\">\n            <img src=\"../assets/images/凉宫春日.jpg\" alt=\"凉宫春日\" />\n          </div>\n          <div class=\"haruhi-quote\">\n            我对普通的人类没有兴趣，你们当中要是有外星人、未来人、异世界人以及超能力者的话，就尽管来找我吧！\n          </div>\n          <a href=\"https://github.com/shiki-desu\" target=\"_blank\" class=\"github-icon\">\n            <img src=\"../assets/images/github.png\" alt=\"GitHub\" />\n          </a>\n        </div>\n      </div>\n    </footer>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\n// 导入组件\nimport BannerSection from '../components/BannerSection.vue';\nimport ArticleCard from '../components/ArticleCard.vue';\nimport DetailModal from '../components/DetailModal.vue';\nimport BackToTop from '../components/BackToTop.vue';\nimport MusicPlayer from '../components/MusicPlayer.vue';\nimport AnimeRecommendation from '../components/AnimeRecommendation.vue';\nimport DataDisplay from '../components/DataDisplay.vue';\n\n// 导入外部资源\nimport { ref, onMounted } from 'vue';\nimport { Article, getArticles, getArticleById } from '../services/articleService';\nimport { disablePageScroll, enablePageScroll, addFadeInAnimation } from '../utils/scrollUtils';\n\n// 加载样式\nimport '../assets/styles/shikiHomeStyles.css';\n\n// 数据和状态\nconst articles = ref<Article[]>(getArticles());\nconst showDetail = ref(false);\nconst currentDetail = ref<Article | null>(null);\nconst isLoaded = ref(false);\n\n// 打开详情弹窗\nconst openDetail = (id: number) => {\n  const detail = getArticleById(id);\n  if (detail) {\n    currentDetail.value = detail;\n    showDetail.value = true;\n    disablePageScroll();\n  }\n};\n\n// 关闭详情弹窗\nconst closeDetail = () => {\n  showDetail.value = false;\n  enablePageScroll();\n};\n\n// 页面加载完成\nonMounted(() => {\n  // 模拟页面加载\n  setTimeout(() => {\n    isLoaded.value = true;\n    \n    // 添加卡片的渐入动画\n    const cards = Array.from(document.querySelectorAll('.article-card-item')) as HTMLElement[];\n    addFadeInAnimation(cards);\n  }, 800);\n});\n</script>","<template>\n  <div class=\"shiki-home\">\n    <!-- 顶部加载指示器 -->\n    <div \n      class=\"page-loader\"\n      :class=\"{ 'page-loaded': isLoaded }\"\n    ></div>\n    \n    <!-- 顶部Banner -->\n    <BannerSection />\n    \n    <!-- 文章列表区 -->\n    <section class=\"article-section\">\n      <div class=\"container\">\n        <h2 class=\"section-title\" data-aos=\"fade-up\">简单介绍自己</h2>\n        <div class=\"article-list\">\n          <ArticleCard \n            v-for=\"(article, index) in articles\" \n            :key=\"article.id\"\n            :article=\"article\"\n            :data-index=\"index\"\n            @click=\"openDetail(article.id)\"\n            class=\"article-card-item\"\n          />\n        </div>\n      </div>\n    </section>\n    \n    <!-- 文章详情弹窗 -->\n    <DetailModal \n      :show=\"showDetail\"\n      :detail=\"currentDetail\"\n      @close=\"closeDetail\"\n    />\n\n    <!-- 回到顶部按钮 -->\n    <BackToTop />\n    \n    <!-- 动画推荐区域 -->\n    <section class=\"anime-section\">\n      <div class=\"container\">\n        <AnimeRecommendation />\n      </div>\n    </section>\n\n    <!-- 数据展示区域 -->\n    <section class=\"data-section\">\n      <div class=\"container\">\n        <DataDisplay />\n      </div>\n    </section>\n\n    <!-- 音乐播放器区域 -->\n    <section class=\"music-section\">\n      <div class=\"container\">\n        <h2 class=\"section-title\" data-aos=\"fade-up\">🎵 不听milet的人生是相对失败的</h2>\n        <div class=\"music-player-wrapper\">\n          <MusicPlayer />\n        </div>\n      </div>\n    </section>\n\n    <!-- 底部区域 -->\n    <footer class=\"footer-section\">\n      <div class=\"container\">\n        <div class=\"footer-content\">\n          <div class=\"haruhi-image\">\n            <img src=\"../assets/images/凉宫春日.jpg\" alt=\"凉宫春日\" />\n          </div>\n          <div class=\"haruhi-quote\">\n            我对普通的人类没有兴趣，你们当中要是有外星人、未来人、异世界人以及超能力者的话，就尽管来找我吧！\n          </div>\n          <a href=\"https://github.com/shiki-desu\" target=\"_blank\" class=\"github-icon\">\n            <img src=\"../assets/images/github.png\" alt=\"GitHub\" />\n          </a>\n        </div>\n      </div>\n    </footer>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\n// 导入组件\nimport BannerSection from '../components/BannerSection.vue';\nimport ArticleCard from '../components/ArticleCard.vue';\nimport DetailModal from '../components/DetailModal.vue';\nimport BackToTop from '../components/BackToTop.vue';\nimport MusicPlayer from '../components/MusicPlayer.vue';\nimport AnimeRecommendation from '../components/AnimeRecommendation.vue';\nimport DataDisplay from '../components/DataDisplay.vue';\n\n// 导入外部资源\nimport { ref, onMounted } from 'vue';\nimport { Article, getArticles, getArticleById } from '../services/articleService';\nimport { disablePageScroll, enablePageScroll, addFadeInAnimation } from '../utils/scrollUtils';\n\n// 加载样式\nimport '../assets/styles/shikiHomeStyles.css';\n\n// 数据和状态\nconst articles = ref<Article[]>(getArticles());\nconst showDetail = ref(false);\nconst currentDetail = ref<Article | null>(null);\nconst isLoaded = ref(false);\n\n// 打开详情弹窗\nconst openDetail = (id: number) => {\n  const detail = getArticleById(id);\n  if (detail) {\n    currentDetail.value = detail;\n    showDetail.value = true;\n    disablePageScroll();\n  }\n};\n\n// 关闭详情弹窗\nconst closeDetail = () => {\n  showDetail.value = false;\n  enablePageScroll();\n};\n\n// 页面加载完成\nonMounted(() => {\n  // 模拟页面加载\n  setTimeout(() => {\n    isLoaded.value = true;\n    \n    // 添加卡片的渐入动画\n    const cards = Array.from(document.querySelectorAll('.article-card-item')) as HTMLElement[];\n    addFadeInAnimation(cards);\n  }, 800);\n});\n</script>","import script from \"./ShikiHome.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./ShikiHome.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","var map = {\n\t\"./MAN WITH A MISSION,milet - 絆ノ奇跡.mp3\": 1036,\n\t\"./milet & Aimer & 幾田りら - おもかげ (produced by Vaundy).mp3\": 956,\n\t\"./milet - Again and Again.mp3\": 3362,\n\t\"./milet - Anytime Anywhere.mp3\": 6031,\n\t\"./milet - Bluer.mp3\": 6455,\n\t\"./milet - Come Here (Session1).mp3\": 523,\n\t\"./milet - December.mp3\": 1102,\n\t\"./milet - Final Call.mp3\": 2859,\n\t\"./milet - Fine Line.mp3\": 6799,\n\t\"./milet - Flare.mp3\": 4325,\n\t\"./milet - Fly High.mp3\": 310,\n\t\"./milet - Grab the air.mp3\": 8172,\n\t\"./milet - HALFWAY.mp3\": 7801,\n\t\"./milet - Hey Song.mp3\": 8598,\n\t\"./milet - Higher.mp3\": 7438,\n\t\"./milet - Hit the Lights.mp3\": 1889,\n\t\"./milet - I still.mp3\": 2326,\n\t\"./milet - Nobody Knows.mp3\": 3570,\n\t\"./milet - Noёl In July.mp3\": 1604,\n\t\"./milet - On the Edge.mp3\": 4236,\n\t\"./milet - One Reason.mp3\": 8163,\n\t\"./milet - One Touch.mp3\": 4196,\n\t\"./milet - Ordinary days.mp3\": 710,\n\t\"./milet - Outsider.mp3\": 730,\n\t\"./milet - Parachute.mp3\": 6344,\n\t\"./milet - Prover.mp3\": 3783,\n\t\"./milet - Rewrite.mp3\": 2573,\n\t\"./milet - SEVENTH HEAVEN.mp3\": 4111,\n\t\"./milet - Tell me.mp3\": 4344,\n\t\"./milet - The Love We've Made.mp3\": 3007,\n\t\"./milet - Time Is On Our Side.mp3\": 9966,\n\t\"./milet - Walkin' In My Lane.mp3\": 5841,\n\t\"./milet - Waterfall.mp3\": 7195,\n\t\"./milet - Who I Am.mp3\": 1990,\n\t\"./milet - You & I.mp3\": 3299,\n\t\"./milet - Your Light.mp3\": 3626,\n\t\"./milet - b r o k e n.mp3\": 2262,\n\t\"./milet - checkmate.mp3\": 6514,\n\t\"./milet - hanataba.mp3\": 4271,\n\t\"./milet - inside you - From THE FIRST TAKE.mp3\": 5979,\n\t\"./milet - inside you.mp3\": 7518,\n\t\"./milet - jam.mp3\": 7585,\n\t\"./milet - us - From THE FIRST TAKE.mp3\": 434,\n\t\"./milet - us.mp3\": 3595,\n\t\"./milet,Aimer,幾田りら - おもかげ (produced by Vaundy).mp3\": 5444,\n\t\"./milet,MAN WITH A MISSION - コイコガレ.mp3\": 3946\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 3958;"],"names":["$","call","iterate","aCallable","anObject","getIteratorDirect","iteratorClose","iteratorHelperWithoutClosingOnEarlyError","findWithoutClosingOnEarlyError","TypeError","target","proto","real","forced","find","predicate","this","error","record","counter","value","stop","IS_RECORD","INTERRUPTED","result","_defineComponent","__name","setup","__props","scrollProgress","ref","scrollToArticles","articleSection","document","querySelector","scrollIntoView","behavior","handleScroll","scrollTop","window","scrollY","bannerElement","bannerHeight","HTMLElement","offsetHeight","Math","min","onMounted","addEventListener","onUnmounted","removeEventListener","_ctx","_cache","_openBlock","_createElementBlock","class","_normalizeClass","_createElementVNode","style","_normalizeStyle","opacity","transform","onClick","_createVNode","_unref","CaretDownOutlined","__exports__","_hoisted_1","_hoisted_2","props","article","type","Object","required","emits","emit","__emit","handleClick","id","_component_a_card_meta","_resolveComponent","_component_a_card","_createBlock","hoverable","cover","_withCtx","src","coverImg","alt","title","loading","default","description","date","_","key","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","render","$props","$setup","$data","$options","_component_a_modal","open","show","onCancel","closeModal","handleOpenChange","width","footer","detail","_toDisplayString","_Fragment","_renderList","contentParagraphs","paragraph","index","trim","getImageForParagraph","_createCommentVNode","defineComponent","name","components","Modal","Boolean","computed","content","split","decorativeImages","require","length","methods","$emit","newValue","backToTop","scrollDuration","scrollStep","scrollInterval","setInterval","scrollBy","clearInterval","_Transition","_withDirectives","UpOutlined","_vShow","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_19","_hoisted_20","_hoisted_21","_hoisted_22","audio","Audio","playlist","currentIndex","isPlaying","showPlaylist","showVolume","volume","isMuted","currentTime","duration","isDragging","currentSong","artist","floatingImages","reactive","randomizeImagePositions","shuffledImages","sort","random","leftImages","slice","rightImages","forEach","img","left","right","topPosition","floor","top","animationDelay","zIndex","positionInterval","startPositionAnimation","stopPositionAnimation","progressPercentage","formatTime","seconds","mins","secs","parseSongInfo","fileName","replace","includes","parts","loadMusicFiles","async","musicFiles","map","file","loadSong","song","load","console","togglePlay","pause","play","alert","playSong","wasPlaying","nextSong","nextIndex","prevSong","prevIndex","togglePlaylist","toggleVolume","updateVolume","startDragging","setProgress","percentage","newTime","handleMouseMove","e","progressBar","rect","getBoundingClientRect","x","clientX","max","handleMouseUp","setupAudioEvents","ontimeupdate","onended","onloadedmetadata","_imports_0","onMousedown","onDblclick","_withModifiers","$event","step","onInput","_vModelText","animeList","imageUrl","reason","currentAnime","prevAnime","nextAnime","goToAnime","LeftOutlined","RightOutlined","anime","dataItems","response","fetch","ok","Error","json","item","href","rel","getArticles","getArticleById","articles","disablePageScroll","body","classList","add","overflow","enablePageScroll","remove","addFadeInAnimation","elements","delay","element","setTimeout","showDetail","currentDetail","isLoaded","openDetail","closeDetail","cards","Array","from","querySelectorAll","BannerSection","ArticleCard","DetailModal","onClose","BackToTop","AnimeRecommendation","DataDisplay","MusicPlayer","_createStaticVNode","_imports_1","webpackContext","req","webpackContextResolve","__webpack_require__","o","code","keys","resolve","module","exports"],"sourceRoot":""}