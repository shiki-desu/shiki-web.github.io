{"version":3,"file":"js/vendors-7ebd0c03.6c6fae3a.js","mappings":"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","sources":["webpack://shiki-web/./node_modules/ant-design-vue/es/vc-tree/utils/conductUtil.js","webpack://shiki-web/./node_modules/ant-design-vue/es/vc-trigger/Popup/PopupInner.js","webpack://shiki-web/./node_modules/ant-design-vue/es/vc-trigger/Popup/MobilePopupInner.js","webpack://shiki-web/./node_modules/ant-design-vue/es/vc-tree/useMaxLevel.js","webpack://shiki-web/./node_modules/ant-design-vue/es/vc-trigger/Popup/Mask.js","webpack://shiki-web/./node_modules/ant-design-vue/es/vc-tree/utils/treeUtil.js","webpack://shiki-web/./node_modules/ant-design-vue/es/vc-tree/util.js","webpack://shiki-web/./node_modules/ant-design-vue/es/vc-tree/utils/diffUtil.js"],"sourcesContent":["import { note } from '../../vc-util/warning';\nfunction removeFromCheckedKeys(halfCheckedKeys, checkedKeys) {\n  const filteredKeys = new Set();\n  halfCheckedKeys.forEach(key => {\n    if (!checkedKeys.has(key)) {\n      filteredKeys.add(key);\n    }\n  });\n  return filteredKeys;\n}\nexport function isCheckDisabled(node) {\n  const {\n    disabled,\n    disableCheckbox,\n    checkable\n  } = node || {};\n  return !!(disabled || disableCheckbox) || checkable === false;\n}\n// Fill miss keys\nfunction fillConductCheck(keys, levelEntities, maxLevel, syntheticGetCheckDisabled) {\n  const checkedKeys = new Set(keys);\n  const halfCheckedKeys = new Set();\n  // Add checked keys top to bottom\n  for (let level = 0; level <= maxLevel; level += 1) {\n    const entities = levelEntities.get(level) || new Set();\n    entities.forEach(entity => {\n      const {\n        key,\n        node,\n        children = []\n      } = entity;\n      if (checkedKeys.has(key) && !syntheticGetCheckDisabled(node)) {\n        children.filter(childEntity => !syntheticGetCheckDisabled(childEntity.node)).forEach(childEntity => {\n          checkedKeys.add(childEntity.key);\n        });\n      }\n    });\n  }\n  // Add checked keys from bottom to top\n  const visitedKeys = new Set();\n  for (let level = maxLevel; level >= 0; level -= 1) {\n    const entities = levelEntities.get(level) || new Set();\n    entities.forEach(entity => {\n      const {\n        parent,\n        node\n      } = entity;\n      // Skip if no need to check\n      if (syntheticGetCheckDisabled(node) || !entity.parent || visitedKeys.has(entity.parent.key)) {\n        return;\n      }\n      // Skip if parent is disabled\n      if (syntheticGetCheckDisabled(entity.parent.node)) {\n        visitedKeys.add(parent.key);\n        return;\n      }\n      let allChecked = true;\n      let partialChecked = false;\n      (parent.children || []).filter(childEntity => !syntheticGetCheckDisabled(childEntity.node)).forEach(_ref => {\n        let {\n          key\n        } = _ref;\n        const checked = checkedKeys.has(key);\n        if (allChecked && !checked) {\n          allChecked = false;\n        }\n        if (!partialChecked && (checked || halfCheckedKeys.has(key))) {\n          partialChecked = true;\n        }\n      });\n      if (allChecked) {\n        checkedKeys.add(parent.key);\n      }\n      if (partialChecked) {\n        halfCheckedKeys.add(parent.key);\n      }\n      visitedKeys.add(parent.key);\n    });\n  }\n  return {\n    checkedKeys: Array.from(checkedKeys),\n    halfCheckedKeys: Array.from(removeFromCheckedKeys(halfCheckedKeys, checkedKeys))\n  };\n}\n// Remove useless key\nfunction cleanConductCheck(keys, halfKeys, levelEntities, maxLevel, syntheticGetCheckDisabled) {\n  const checkedKeys = new Set(keys);\n  let halfCheckedKeys = new Set(halfKeys);\n  // Remove checked keys from top to bottom\n  for (let level = 0; level <= maxLevel; level += 1) {\n    const entities = levelEntities.get(level) || new Set();\n    entities.forEach(entity => {\n      const {\n        key,\n        node,\n        children = []\n      } = entity;\n      if (!checkedKeys.has(key) && !halfCheckedKeys.has(key) && !syntheticGetCheckDisabled(node)) {\n        children.filter(childEntity => !syntheticGetCheckDisabled(childEntity.node)).forEach(childEntity => {\n          checkedKeys.delete(childEntity.key);\n        });\n      }\n    });\n  }\n  // Remove checked keys form bottom to top\n  halfCheckedKeys = new Set();\n  const visitedKeys = new Set();\n  for (let level = maxLevel; level >= 0; level -= 1) {\n    const entities = levelEntities.get(level) || new Set();\n    entities.forEach(entity => {\n      const {\n        parent,\n        node\n      } = entity;\n      // Skip if no need to check\n      if (syntheticGetCheckDisabled(node) || !entity.parent || visitedKeys.has(entity.parent.key)) {\n        return;\n      }\n      // Skip if parent is disabled\n      if (syntheticGetCheckDisabled(entity.parent.node)) {\n        visitedKeys.add(parent.key);\n        return;\n      }\n      let allChecked = true;\n      let partialChecked = false;\n      (parent.children || []).filter(childEntity => !syntheticGetCheckDisabled(childEntity.node)).forEach(_ref2 => {\n        let {\n          key\n        } = _ref2;\n        const checked = checkedKeys.has(key);\n        if (allChecked && !checked) {\n          allChecked = false;\n        }\n        if (!partialChecked && (checked || halfCheckedKeys.has(key))) {\n          partialChecked = true;\n        }\n      });\n      if (!allChecked) {\n        checkedKeys.delete(parent.key);\n      }\n      if (partialChecked) {\n        halfCheckedKeys.add(parent.key);\n      }\n      visitedKeys.add(parent.key);\n    });\n  }\n  return {\n    checkedKeys: Array.from(checkedKeys),\n    halfCheckedKeys: Array.from(removeFromCheckedKeys(halfCheckedKeys, checkedKeys))\n  };\n}\n/**\n * Conduct with keys.\n * @param keyList current key list\n * @param keyEntities key - dataEntity map\n * @param mode `fill` to fill missing key, `clean` to remove useless key\n */\nexport function conductCheck(keyList, checked, keyEntities, maxLevel, levelEntities, getCheckDisabled) {\n  const warningMissKeys = [];\n  let syntheticGetCheckDisabled;\n  if (getCheckDisabled) {\n    syntheticGetCheckDisabled = getCheckDisabled;\n  } else {\n    syntheticGetCheckDisabled = isCheckDisabled;\n  }\n  // We only handle exist keys\n  const keys = new Set(keyList.filter(key => {\n    const hasEntity = !!keyEntities[key];\n    if (!hasEntity) {\n      warningMissKeys.push(key);\n    }\n    return hasEntity;\n  }));\n  note(!warningMissKeys.length, `Tree missing follow keys: ${warningMissKeys.slice(0, 100).map(key => `'${key}'`).join(', ')}`);\n  let result;\n  if (checked === true) {\n    result = fillConductCheck(keys, levelEntities, maxLevel, syntheticGetCheckDisabled);\n  } else {\n    result = cleanConductCheck(keys, checked.halfCheckedKeys, levelEntities, maxLevel, syntheticGetCheckDisabled);\n  }\n  return result;\n}","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { withDirectives as _withDirectives, resolveDirective as _resolveDirective, vShow as _vShow, createVNode as _createVNode } from \"vue\";\nimport useVisibleStatus from './useVisibleStatus';\nimport useStretchStyle from './useStretchStyle';\nimport { computed, defineComponent, shallowRef, toRef, Transition, watch, withModifiers } from 'vue';\nimport Align from '../../vc-align/Align';\nimport { getMotion } from '../utils/motionUtil';\nimport { flattenChildren } from '../../_util/props-util';\nimport classNames from '../../_util/classNames';\nimport { innerProps } from './interface';\nimport { getTransitionProps } from '../../_util/transition';\nimport supportsPassive from '../../_util/supportsPassive';\nexport default defineComponent({\n  compatConfig: {\n    MODE: 3\n  },\n  name: 'PopupInner',\n  inheritAttrs: false,\n  props: innerProps,\n  emits: ['mouseenter', 'mouseleave', 'mousedown', 'touchstart', 'align'],\n  setup(props, _ref) {\n    let {\n      expose,\n      attrs,\n      slots\n    } = _ref;\n    const alignRef = shallowRef();\n    const elementRef = shallowRef();\n    const alignedClassName = shallowRef();\n    // ======================= Measure ========================\n    const [stretchStyle, measureStretchStyle] = useStretchStyle(toRef(props, 'stretch'));\n    const doMeasure = () => {\n      if (props.stretch) {\n        measureStretchStyle(props.getRootDomNode());\n      }\n    };\n    const visible = shallowRef(false);\n    let timeoutId;\n    watch(() => props.visible, val => {\n      clearTimeout(timeoutId);\n      if (val) {\n        timeoutId = setTimeout(() => {\n          visible.value = props.visible;\n        });\n      } else {\n        visible.value = false;\n      }\n    }, {\n      immediate: true\n    });\n    // ======================== Status ========================\n    const [status, goNextStatus] = useVisibleStatus(visible, doMeasure);\n    // ======================== Aligns ========================\n    const prepareResolveRef = shallowRef();\n    // `target` on `rc-align` can accept as a function to get the bind element or a point.\n    // ref: https://www.npmjs.com/package/rc-align\n    const getAlignTarget = () => {\n      if (props.point) {\n        return props.point;\n      }\n      return props.getRootDomNode;\n    };\n    const forceAlign = () => {\n      var _a;\n      (_a = alignRef.value) === null || _a === void 0 ? void 0 : _a.forceAlign();\n    };\n    const onInternalAlign = (popupDomNode, matchAlign) => {\n      var _a;\n      const nextAlignedClassName = props.getClassNameFromAlign(matchAlign);\n      const preAlignedClassName = alignedClassName.value;\n      if (alignedClassName.value !== nextAlignedClassName) {\n        alignedClassName.value = nextAlignedClassName;\n      }\n      if (status.value === 'align') {\n        // Repeat until not more align needed\n        if (preAlignedClassName !== nextAlignedClassName) {\n          Promise.resolve().then(() => {\n            forceAlign();\n          });\n        } else {\n          goNextStatus(() => {\n            var _a;\n            (_a = prepareResolveRef.value) === null || _a === void 0 ? void 0 : _a.call(prepareResolveRef);\n          });\n        }\n        (_a = props.onAlign) === null || _a === void 0 ? void 0 : _a.call(props, popupDomNode, matchAlign);\n      }\n    };\n    // ======================== Motion ========================\n    const motion = computed(() => {\n      const m = typeof props.animation === 'object' ? props.animation : getMotion(props);\n      ['onAfterEnter', 'onAfterLeave'].forEach(eventName => {\n        const originFn = m[eventName];\n        m[eventName] = node => {\n          goNextStatus();\n          // 结束后，强制 stable\n          status.value = 'stable';\n          originFn === null || originFn === void 0 ? void 0 : originFn(node);\n        };\n      });\n      return m;\n    });\n    const onShowPrepare = () => {\n      return new Promise(resolve => {\n        prepareResolveRef.value = resolve;\n      });\n    };\n    watch([motion, status], () => {\n      if (!motion.value && status.value === 'motion') {\n        goNextStatus();\n      }\n    }, {\n      immediate: true\n    });\n    expose({\n      forceAlign,\n      getElement: () => {\n        return elementRef.value.$el || elementRef.value;\n      }\n    });\n    const alignDisabled = computed(() => {\n      var _a;\n      if (((_a = props.align) === null || _a === void 0 ? void 0 : _a.points) && (status.value === 'align' || status.value === 'stable')) {\n        return false;\n      }\n      return true;\n    });\n    return () => {\n      var _a;\n      const {\n        zIndex,\n        align,\n        prefixCls,\n        destroyPopupOnHide,\n        onMouseenter,\n        onMouseleave,\n        onTouchstart = () => {},\n        onMousedown\n      } = props;\n      const statusValue = status.value;\n      // ======================== Render ========================\n      const mergedStyle = [_extends(_extends({}, stretchStyle.value), {\n        zIndex,\n        opacity: statusValue === 'motion' || statusValue === 'stable' || !visible.value ? null : 0,\n        // pointerEvents: statusValue === 'stable' ? null : 'none',\n        pointerEvents: !visible.value && statusValue !== 'stable' ? 'none' : null\n      }), attrs.style];\n      let childNode = flattenChildren((_a = slots.default) === null || _a === void 0 ? void 0 : _a.call(slots, {\n        visible: props.visible\n      }));\n      // Wrapper when multiple children\n      if (childNode.length > 1) {\n        const _childNode = function () {\n          return childNode;\n        }();\n        childNode = _createVNode(\"div\", {\n          \"class\": `${prefixCls}-content`\n        }, [childNode]);\n      }\n      const mergedClassName = classNames(prefixCls, attrs.class, alignedClassName.value, !props.arrow && `${prefixCls}-arrow-hidden`);\n      const hasAnimate = visible.value || !props.visible;\n      const transitionProps = hasAnimate ? getTransitionProps(motion.value.name, motion.value) : {};\n      return _createVNode(Transition, _objectSpread(_objectSpread({\n        \"ref\": elementRef\n      }, transitionProps), {}, {\n        \"onBeforeEnter\": onShowPrepare\n      }), {\n        default: () => {\n          return !destroyPopupOnHide || props.visible ? _withDirectives(_createVNode(Align, {\n            \"target\": getAlignTarget(),\n            \"key\": \"popup\",\n            \"ref\": alignRef,\n            \"monitorWindowResize\": true,\n            \"disabled\": alignDisabled.value,\n            \"align\": align,\n            \"onAlign\": onInternalAlign\n          }, {\n            default: () => _createVNode(\"div\", {\n              \"class\": mergedClassName,\n              \"onMouseenter\": onMouseenter,\n              \"onMouseleave\": onMouseleave,\n              \"onMousedown\": withModifiers(onMousedown, ['capture']),\n              [supportsPassive ? 'onTouchstartPassive' : 'onTouchstart']: withModifiers(onTouchstart, ['capture']),\n              \"style\": mergedStyle\n            }, [childNode])\n          }), [[_vShow, visible.value]]) : null;\n        }\n      });\n    };\n  }\n});","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { createVNode as _createVNode } from \"vue\";\nimport { defineComponent, ref, Transition } from 'vue';\nimport { flattenChildren } from '../../_util/props-util';\nimport classNames from '../../_util/classNames';\nimport { mobileProps } from './interface';\nexport default defineComponent({\n  compatConfig: {\n    MODE: 3\n  },\n  name: 'MobilePopupInner',\n  inheritAttrs: false,\n  props: mobileProps,\n  emits: ['mouseenter', 'mouseleave', 'mousedown', 'touchstart', 'align'],\n  setup(props, _ref) {\n    let {\n      expose,\n      slots\n    } = _ref;\n    const elementRef = ref();\n    expose({\n      forceAlign: () => {},\n      getElement: () => elementRef.value\n    });\n    return () => {\n      var _a;\n      const {\n        zIndex,\n        visible,\n        prefixCls,\n        mobile: {\n          popupClassName,\n          popupStyle,\n          popupMotion = {},\n          popupRender\n        } = {}\n      } = props;\n      // ======================== Render ========================\n      const mergedStyle = _extends({\n        zIndex\n      }, popupStyle);\n      let childNode = flattenChildren((_a = slots.default) === null || _a === void 0 ? void 0 : _a.call(slots));\n      // Wrapper when multiple children\n      if (childNode.length > 1) {\n        const _childNode = function () {\n          return childNode;\n        }();\n        childNode = _createVNode(\"div\", {\n          \"class\": `${prefixCls}-content`\n        }, [childNode]);\n      }\n      // Mobile support additional render\n      if (popupRender) {\n        childNode = popupRender(childNode);\n      }\n      const mergedClassName = classNames(prefixCls, popupClassName);\n      return _createVNode(Transition, _objectSpread({\n        \"ref\": elementRef\n      }, popupMotion), {\n        default: () => [visible ? _createVNode(\"div\", {\n          \"class\": mergedClassName,\n          \"style\": mergedStyle\n        }, [childNode]) : null]\n      });\n    };\n  }\n});","import { shallowRef, ref, watchEffect } from 'vue';\nexport default function useMaxLevel(keyEntities) {\n  const maxLevel = ref(0);\n  const levelEntities = shallowRef();\n  watchEffect(() => {\n    const newLevelEntities = new Map();\n    let newMaxLevel = 0;\n    const keyEntitiesValue = keyEntities.value || {};\n    // Convert entities by level for calculation\n    for (const key in keyEntitiesValue) {\n      if (Object.prototype.hasOwnProperty.call(keyEntitiesValue, key)) {\n        const entity = keyEntitiesValue[key];\n        const {\n          level\n        } = entity;\n        let levelSet = newLevelEntities.get(level);\n        if (!levelSet) {\n          levelSet = new Set();\n          newLevelEntities.set(level, levelSet);\n        }\n        levelSet.add(entity);\n        newMaxLevel = Math.max(newMaxLevel, level);\n      }\n    }\n    maxLevel.value = newMaxLevel;\n    levelEntities.value = newLevelEntities;\n  });\n  return {\n    maxLevel,\n    levelEntities\n  };\n}","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport { withDirectives as _withDirectives, createVNode as _createVNode, resolveDirective as _resolveDirective } from \"vue\";\nimport { Transition } from 'vue';\nimport { getMotion } from '../utils/motionUtil';\nexport default function Mask(props) {\n  const {\n    prefixCls,\n    visible,\n    zIndex,\n    mask,\n    maskAnimation,\n    maskTransitionName\n  } = props;\n  if (!mask) {\n    return null;\n  }\n  let motion = {};\n  if (maskTransitionName || maskAnimation) {\n    motion = getMotion({\n      prefixCls,\n      transitionName: maskTransitionName,\n      animation: maskAnimation\n    });\n  }\n  return _createVNode(Transition, _objectSpread({\n    \"appear\": true\n  }, motion), {\n    default: () => [_withDirectives(_createVNode(\"div\", {\n      \"style\": {\n        zIndex\n      },\n      \"class\": `${prefixCls}-mask`\n    }, null), [[_resolveDirective(\"if\"), visible]])]\n  });\n}\nMask.displayName = 'Mask';","import _extends from \"@babel/runtime/helpers/esm/extends\";\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport { getPosition, isTreeNode } from '../util';\nimport { warning } from '../../vc-util/warning';\nimport { camelize, filterEmpty } from '../../_util/props-util';\nimport omit from '../../_util/omit';\nexport function getKey(key, pos) {\n  if (key !== null && key !== undefined) {\n    return key;\n  }\n  return pos;\n}\nexport function fillFieldNames(fieldNames) {\n  const {\n    title,\n    _title,\n    key,\n    children\n  } = fieldNames || {};\n  const mergedTitle = title || 'title';\n  return {\n    title: mergedTitle,\n    _title: _title || [mergedTitle],\n    key: key || 'key',\n    children: children || 'children'\n  };\n}\n/**\n * Warning if TreeNode do not provides key\n */\nexport function warningWithoutKey(treeData, fieldNames) {\n  const keys = new Map();\n  function dig(list) {\n    let path = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n    (list || []).forEach(treeNode => {\n      const key = treeNode[fieldNames.key];\n      const children = treeNode[fieldNames.children];\n      warning(key !== null && key !== undefined, `Tree node must have a certain key: [${path}${key}]`);\n      const recordKey = String(key);\n      warning(!keys.has(recordKey) || key === null || key === undefined, `Same 'key' exist in the Tree: ${recordKey}`);\n      keys.set(recordKey, true);\n      dig(children, `${path}${recordKey} > `);\n    });\n  }\n  dig(treeData);\n}\n/**\n * Convert `children` of Tree into `treeData` structure.\n */\nexport function convertTreeToData(rootNodes) {\n  function dig() {\n    let node = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    const treeNodes = filterEmpty(node);\n    return treeNodes.map(treeNode => {\n      var _a, _b, _c, _d;\n      // Filter invalidate node\n      if (!isTreeNode(treeNode)) {\n        warning(!treeNode, 'Tree/TreeNode can only accept TreeNode as children.');\n        return null;\n      }\n      const slots = treeNode.children || {};\n      const key = treeNode.key;\n      const props = {};\n      for (const [k, v] of Object.entries(treeNode.props)) {\n        props[camelize(k)] = v;\n      }\n      const {\n        isLeaf,\n        checkable,\n        selectable,\n        disabled,\n        disableCheckbox\n      } = props;\n      // 默认值为 undefined\n      const newProps = {\n        isLeaf: isLeaf || isLeaf === '' || undefined,\n        checkable: checkable || checkable === '' || undefined,\n        selectable: selectable || selectable === '' || undefined,\n        disabled: disabled || disabled === '' || undefined,\n        disableCheckbox: disableCheckbox || disableCheckbox === '' || undefined\n      };\n      const slotsProps = _extends(_extends({}, props), newProps);\n      const {\n          title = (_a = slots.title) === null || _a === void 0 ? void 0 : _a.call(slots, slotsProps),\n          icon = (_b = slots.icon) === null || _b === void 0 ? void 0 : _b.call(slots, slotsProps),\n          switcherIcon = (_c = slots.switcherIcon) === null || _c === void 0 ? void 0 : _c.call(slots, slotsProps)\n        } = props,\n        rest = __rest(props, [\"title\", \"icon\", \"switcherIcon\"]);\n      const children = (_d = slots.default) === null || _d === void 0 ? void 0 : _d.call(slots);\n      const dataNode = _extends(_extends(_extends({}, rest), {\n        title,\n        icon,\n        switcherIcon,\n        key,\n        isLeaf\n      }), newProps);\n      const parsedChildren = dig(children);\n      if (parsedChildren.length) {\n        dataNode.children = parsedChildren;\n      }\n      return dataNode;\n    });\n  }\n  return dig(rootNodes);\n}\n/**\n * Flat nest tree data into flatten list. This is used for virtual list render.\n * @param treeNodeList Origin data node list\n * @param expandedKeys\n * need expanded keys, provides `true` means all expanded (used in `rc-tree-select`).\n */\nexport function flattenTreeData(treeNodeList, expandedKeys, fieldNames) {\n  const {\n    _title: fieldTitles,\n    key: fieldKey,\n    children: fieldChildren\n  } = fillFieldNames(fieldNames);\n  const expandedKeySet = new Set(expandedKeys === true ? [] : expandedKeys);\n  const flattenList = [];\n  function dig(list) {\n    let parent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    return list.map((treeNode, index) => {\n      const pos = getPosition(parent ? parent.pos : '0', index);\n      const mergedKey = getKey(treeNode[fieldKey], pos);\n      // Pick matched title in field title list\n      let mergedTitle;\n      for (let i = 0; i < fieldTitles.length; i += 1) {\n        const fieldTitle = fieldTitles[i];\n        if (treeNode[fieldTitle] !== undefined) {\n          mergedTitle = treeNode[fieldTitle];\n          break;\n        }\n      }\n      // Add FlattenDataNode into list\n      const flattenNode = _extends(_extends({}, omit(treeNode, [...fieldTitles, fieldKey, fieldChildren])), {\n        title: mergedTitle,\n        key: mergedKey,\n        parent,\n        pos,\n        children: null,\n        data: treeNode,\n        isStart: [...(parent ? parent.isStart : []), index === 0],\n        isEnd: [...(parent ? parent.isEnd : []), index === list.length - 1]\n      });\n      flattenList.push(flattenNode);\n      // Loop treeNode children\n      if (expandedKeys === true || expandedKeySet.has(mergedKey)) {\n        flattenNode.children = dig(treeNode[fieldChildren] || [], flattenNode);\n      } else {\n        flattenNode.children = [];\n      }\n      return flattenNode;\n    });\n  }\n  dig(treeNodeList);\n  return flattenList;\n}\n/**\n * Traverse all the data by `treeData`.\n * Please not use it out of the `rc-tree` since we may refactor this code.\n */\nexport function traverseDataNodes(dataNodes, callback,\n// To avoid too many params, let use config instead of origin param\nconfig) {\n  let mergedConfig = {};\n  if (typeof config === 'object') {\n    mergedConfig = config;\n  } else {\n    mergedConfig = {\n      externalGetKey: config\n    };\n  }\n  mergedConfig = mergedConfig || {};\n  // Init config\n  const {\n    childrenPropName,\n    externalGetKey,\n    fieldNames\n  } = mergedConfig;\n  const {\n    key: fieldKey,\n    children: fieldChildren\n  } = fillFieldNames(fieldNames);\n  const mergeChildrenPropName = childrenPropName || fieldChildren;\n  // Get keys\n  let syntheticGetKey;\n  if (externalGetKey) {\n    if (typeof externalGetKey === 'string') {\n      syntheticGetKey = node => node[externalGetKey];\n    } else if (typeof externalGetKey === 'function') {\n      syntheticGetKey = node => externalGetKey(node);\n    }\n  } else {\n    syntheticGetKey = (node, pos) => getKey(node[fieldKey], pos);\n  }\n  // Process\n  function processNode(node, index, parent, pathNodes) {\n    const children = node ? node[mergeChildrenPropName] : dataNodes;\n    const pos = node ? getPosition(parent.pos, index) : '0';\n    const connectNodes = node ? [...pathNodes, node] : [];\n    // Process node if is not root\n    if (node) {\n      const key = syntheticGetKey(node, pos);\n      const data = {\n        node,\n        index,\n        pos,\n        key,\n        parentPos: parent.node ? parent.pos : null,\n        level: parent.level + 1,\n        nodes: connectNodes\n      };\n      callback(data);\n    }\n    // Process children node\n    if (children) {\n      children.forEach((subNode, subIndex) => {\n        processNode(subNode, subIndex, {\n          node,\n          pos,\n          level: parent ? parent.level + 1 : -1\n        }, connectNodes);\n      });\n    }\n  }\n  processNode(null);\n}\n/**\n * Convert `treeData` into entity records.\n */\nexport function convertDataToEntities(dataNodes) {\n  let {\n    initWrapper,\n    processEntity,\n    onProcessFinished,\n    externalGetKey,\n    childrenPropName,\n    fieldNames\n  } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  let /** @deprecated Use `config.externalGetKey` instead */\n  legacyExternalGetKey = arguments.length > 2 ? arguments[2] : undefined;\n  // Init config\n  const mergedExternalGetKey = externalGetKey || legacyExternalGetKey;\n  const posEntities = {};\n  const keyEntities = {};\n  let wrapper = {\n    posEntities,\n    keyEntities\n  };\n  if (initWrapper) {\n    wrapper = initWrapper(wrapper) || wrapper;\n  }\n  traverseDataNodes(dataNodes, item => {\n    const {\n      node,\n      index,\n      pos,\n      key,\n      parentPos,\n      level,\n      nodes\n    } = item;\n    const entity = {\n      node,\n      nodes,\n      index,\n      key,\n      pos,\n      level\n    };\n    const mergedKey = getKey(key, pos);\n    posEntities[pos] = entity;\n    keyEntities[mergedKey] = entity;\n    // Fill children\n    entity.parent = posEntities[parentPos];\n    if (entity.parent) {\n      entity.parent.children = entity.parent.children || [];\n      entity.parent.children.push(entity);\n    }\n    if (processEntity) {\n      processEntity(entity, wrapper);\n    }\n  }, {\n    externalGetKey: mergedExternalGetKey,\n    childrenPropName,\n    fieldNames\n  });\n  if (onProcessFinished) {\n    onProcessFinished(wrapper);\n  }\n  return wrapper;\n}\n/**\n * Get TreeNode props with Tree props.\n */\nexport function getTreeNodeProps(key, _ref) {\n  let {\n    expandedKeysSet,\n    selectedKeysSet,\n    loadedKeysSet,\n    loadingKeysSet,\n    checkedKeysSet,\n    halfCheckedKeysSet,\n    dragOverNodeKey,\n    dropPosition,\n    keyEntities\n  } = _ref;\n  const entity = keyEntities[key];\n  const treeNodeProps = {\n    eventKey: key,\n    expanded: expandedKeysSet.has(key),\n    selected: selectedKeysSet.has(key),\n    loaded: loadedKeysSet.has(key),\n    loading: loadingKeysSet.has(key),\n    checked: checkedKeysSet.has(key),\n    halfChecked: halfCheckedKeysSet.has(key),\n    pos: String(entity ? entity.pos : ''),\n    parent: entity.parent,\n    // [Legacy] Drag props\n    // Since the interaction of drag is changed, the semantic of the props are\n    // not accuracy, I think it should be finally removed\n    dragOver: dragOverNodeKey === key && dropPosition === 0,\n    dragOverGapTop: dragOverNodeKey === key && dropPosition === -1,\n    dragOverGapBottom: dragOverNodeKey === key && dropPosition === 1\n  };\n  return treeNodeProps;\n}\nexport function convertNodePropsToEventData(props) {\n  const {\n    data,\n    expanded,\n    selected,\n    checked,\n    loaded,\n    loading,\n    halfChecked,\n    dragOver,\n    dragOverGapTop,\n    dragOverGapBottom,\n    pos,\n    active,\n    eventKey\n  } = props;\n  const eventData = _extends(_extends({\n    dataRef: data\n  }, data), {\n    expanded,\n    selected,\n    checked,\n    loaded,\n    loading,\n    halfChecked,\n    dragOver,\n    dragOverGapTop,\n    dragOverGapBottom,\n    pos,\n    active,\n    eventKey,\n    key: eventKey\n  });\n  if (!('props' in eventData)) {\n    Object.defineProperty(eventData, 'props', {\n      get() {\n        warning(false, 'Second param return from event is node data instead of TreeNode instance. Please read value directly instead of reading from `props`.');\n        return props;\n      }\n    });\n  }\n  return eventData;\n}","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport { createVNode as _createVNode } from \"vue\";\n/* eslint-disable no-lonely-if */\n/**\n * Legacy code. Should avoid to use if you are new to import these code.\n */\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport TreeNode from './TreeNode';\nimport { warning } from '../vc-util/warning';\nexport function arrDel(list, value) {\n  if (!list) return [];\n  const clone = list.slice();\n  const index = clone.indexOf(value);\n  if (index >= 0) {\n    clone.splice(index, 1);\n  }\n  return clone;\n}\nexport function arrAdd(list, value) {\n  const clone = (list || []).slice();\n  if (clone.indexOf(value) === -1) {\n    clone.push(value);\n  }\n  return clone;\n}\nexport function posToArr(pos) {\n  return pos.split('-');\n}\nexport function getPosition(level, index) {\n  return `${level}-${index}`;\n}\nexport function isTreeNode(node) {\n  return node && node.type && node.type.isTreeNode;\n}\nexport function getDragChildrenKeys(dragNodeKey, keyEntities) {\n  // not contains self\n  // self for left or right drag\n  const dragChildrenKeys = [];\n  const entity = keyEntities[dragNodeKey];\n  function dig() {\n    let list = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    list.forEach(_ref => {\n      let {\n        key,\n        children\n      } = _ref;\n      dragChildrenKeys.push(key);\n      dig(children);\n    });\n  }\n  dig(entity.children);\n  return dragChildrenKeys;\n}\nexport function isLastChild(treeNodeEntity) {\n  if (treeNodeEntity.parent) {\n    const posArr = posToArr(treeNodeEntity.pos);\n    return Number(posArr[posArr.length - 1]) === treeNodeEntity.parent.children.length - 1;\n  }\n  return false;\n}\nexport function isFirstChild(treeNodeEntity) {\n  const posArr = posToArr(treeNodeEntity.pos);\n  return Number(posArr[posArr.length - 1]) === 0;\n}\n// Only used when drag, not affect SSR.\nexport function calcDropPosition(event, dragNode, targetNode, indent, startMousePosition, allowDrop, flattenedNodes, keyEntities, expandKeysSet, direction) {\n  var _a;\n  const {\n    clientX,\n    clientY\n  } = event;\n  const {\n    top,\n    height\n  } = event.target.getBoundingClientRect();\n  // optional chain for testing\n  const horizontalMouseOffset = (direction === 'rtl' ? -1 : 1) * (((startMousePosition === null || startMousePosition === void 0 ? void 0 : startMousePosition.x) || 0) - clientX);\n  const rawDropLevelOffset = (horizontalMouseOffset - 12) / indent;\n  // find abstract drop node by horizontal offset\n  let abstractDropNodeEntity = keyEntities[targetNode.eventKey];\n  if (clientY < top + height / 2) {\n    // first half, set abstract drop node to previous node\n    const nodeIndex = flattenedNodes.findIndex(flattenedNode => flattenedNode.key === abstractDropNodeEntity.key);\n    const prevNodeIndex = nodeIndex <= 0 ? 0 : nodeIndex - 1;\n    const prevNodeKey = flattenedNodes[prevNodeIndex].key;\n    abstractDropNodeEntity = keyEntities[prevNodeKey];\n  }\n  const initialAbstractDropNodeKey = abstractDropNodeEntity.key;\n  const abstractDragOverEntity = abstractDropNodeEntity;\n  const dragOverNodeKey = abstractDropNodeEntity.key;\n  let dropPosition = 0;\n  let dropLevelOffset = 0;\n  // Only allow cross level drop when dragging on a non-expanded node\n  if (!expandKeysSet.has(initialAbstractDropNodeKey)) {\n    for (let i = 0; i < rawDropLevelOffset; i += 1) {\n      if (isLastChild(abstractDropNodeEntity)) {\n        abstractDropNodeEntity = abstractDropNodeEntity.parent;\n        dropLevelOffset += 1;\n      } else {\n        break;\n      }\n    }\n  }\n  const abstractDragDataNode = dragNode.eventData;\n  const abstractDropDataNode = abstractDropNodeEntity.node;\n  let dropAllowed = true;\n  if (isFirstChild(abstractDropNodeEntity) && abstractDropNodeEntity.level === 0 && clientY < top + height / 2 && allowDrop({\n    dragNode: abstractDragDataNode,\n    dropNode: abstractDropDataNode,\n    dropPosition: -1\n  }) && abstractDropNodeEntity.key === targetNode.eventKey) {\n    // first half of first node in first level\n    dropPosition = -1;\n  } else if ((abstractDragOverEntity.children || []).length && expandKeysSet.has(dragOverNodeKey)) {\n    // drop on expanded node\n    // only allow drop inside\n    if (allowDrop({\n      dragNode: abstractDragDataNode,\n      dropNode: abstractDropDataNode,\n      dropPosition: 0\n    })) {\n      dropPosition = 0;\n    } else {\n      dropAllowed = false;\n    }\n  } else if (dropLevelOffset === 0) {\n    if (rawDropLevelOffset > -1.5) {\n      // | Node     | <- abstractDropNode\n      // | -^-===== | <- mousePosition\n      // 1. try drop after\n      // 2. do not allow drop\n      if (allowDrop({\n        dragNode: abstractDragDataNode,\n        dropNode: abstractDropDataNode,\n        dropPosition: 1\n      })) {\n        dropPosition = 1;\n      } else {\n        dropAllowed = false;\n      }\n    } else {\n      // | Node     | <- abstractDropNode\n      // | ---==^== | <- mousePosition\n      // whether it has children or doesn't has children\n      // always\n      // 1. try drop inside\n      // 2. try drop after\n      // 3. do not allow drop\n      if (allowDrop({\n        dragNode: abstractDragDataNode,\n        dropNode: abstractDropDataNode,\n        dropPosition: 0\n      })) {\n        dropPosition = 0;\n      } else if (allowDrop({\n        dragNode: abstractDragDataNode,\n        dropNode: abstractDropDataNode,\n        dropPosition: 1\n      })) {\n        dropPosition = 1;\n      } else {\n        dropAllowed = false;\n      }\n    }\n  } else {\n    // | Node1 | <- abstractDropNode\n    //      |  Node2  |\n    // --^--|----=====| <- mousePosition\n    // 1. try insert after Node1\n    // 2. do not allow drop\n    if (allowDrop({\n      dragNode: abstractDragDataNode,\n      dropNode: abstractDropDataNode,\n      dropPosition: 1\n    })) {\n      dropPosition = 1;\n    } else {\n      dropAllowed = false;\n    }\n  }\n  return {\n    dropPosition,\n    dropLevelOffset,\n    dropTargetKey: abstractDropNodeEntity.key,\n    dropTargetPos: abstractDropNodeEntity.pos,\n    dragOverNodeKey,\n    dropContainerKey: dropPosition === 0 ? null : ((_a = abstractDropNodeEntity.parent) === null || _a === void 0 ? void 0 : _a.key) || null,\n    dropAllowed\n  };\n}\n/**\n * Return selectedKeys according with multiple prop\n * @param selectedKeys\n * @param props\n * @returns [string]\n */\nexport function calcSelectedKeys(selectedKeys, props) {\n  if (!selectedKeys) return undefined;\n  const {\n    multiple\n  } = props;\n  if (multiple) {\n    return selectedKeys.slice();\n  }\n  if (selectedKeys.length) {\n    return [selectedKeys[0]];\n  }\n  return selectedKeys;\n}\nconst internalProcessProps = props => props;\nexport function convertDataToTree(treeData, processor) {\n  if (!treeData) return [];\n  const {\n    processProps = internalProcessProps\n  } = processor || {};\n  const list = Array.isArray(treeData) ? treeData : [treeData];\n  return list.map(_a => {\n    var {\n        children\n      } = _a,\n      props = __rest(_a, [\"children\"]);\n    const childrenNodes = convertDataToTree(children, processor);\n    return _createVNode(TreeNode, _objectSpread({\n      \"key\": props.key\n    }, processProps(props)), {\n      default: () => [childrenNodes]\n    });\n  });\n}\n/**\n * Parse `checkedKeys` to { checkedKeys, halfCheckedKeys } style\n */\nexport function parseCheckedKeys(keys) {\n  if (!keys) {\n    return null;\n  }\n  // Convert keys to object format\n  let keyProps;\n  if (Array.isArray(keys)) {\n    // [Legacy] Follow the api doc\n    keyProps = {\n      checkedKeys: keys,\n      halfCheckedKeys: undefined\n    };\n  } else if (typeof keys === 'object') {\n    keyProps = {\n      checkedKeys: keys.checked || undefined,\n      halfCheckedKeys: keys.halfChecked || undefined\n    };\n  } else {\n    warning(false, '`checkedKeys` is not an array or an object');\n    return null;\n  }\n  return keyProps;\n}\n/**\n * If user use `autoExpandParent` we should get the list of parent node\n * @param keyList\n * @param keyEntities\n */\nexport function conductExpandParent(keyList, keyEntities) {\n  const expandedKeys = new Set();\n  function conductUp(key) {\n    if (expandedKeys.has(key)) return;\n    const entity = keyEntities[key];\n    if (!entity) return;\n    expandedKeys.add(key);\n    const {\n      parent,\n      node\n    } = entity;\n    if (node.disabled) return;\n    if (parent) {\n      conductUp(parent.key);\n    }\n  }\n  (keyList || []).forEach(key => {\n    conductUp(key);\n  });\n  return [...expandedKeys];\n}","export function findExpandedKeys() {\n  let prev = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let next = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  const prevLen = prev.length;\n  const nextLen = next.length;\n  if (Math.abs(prevLen - nextLen) !== 1) {\n    return {\n      add: false,\n      key: null\n    };\n  }\n  function find(shorter, longer) {\n    const cache = new Map();\n    shorter.forEach(key => {\n      cache.set(key, true);\n    });\n    const keys = longer.filter(key => !cache.has(key));\n    return keys.length === 1 ? keys[0] : null;\n  }\n  if (prevLen < nextLen) {\n    return {\n      add: true,\n      key: find(prev, next)\n    };\n  }\n  return {\n    add: false,\n    key: find(next, prev)\n  };\n}\nexport function getExpandRange(shorter, longer, key) {\n  const shorterStartIndex = shorter.findIndex(item => item.key === key);\n  const shorterEndNode = shorter[shorterStartIndex + 1];\n  const longerStartIndex = longer.findIndex(item => item.key === key);\n  if (shorterEndNode) {\n    const longerEndIndex = longer.findIndex(item => item.key === shorterEndNode.key);\n    return longer.slice(longerStartIndex + 1, longerEndIndex);\n  }\n  return longer.slice(longerStartIndex + 1);\n}"],"names":["removeFromCheckedKeys","halfCheckedKeys","checkedKeys","filteredKeys","Set","forEach","key","has","add","isCheckDisabled","node","disabled","disableCheckbox","checkable","fillConductCheck","keys","levelEntities","maxLevel","syntheticGetCheckDisabled","level","entities","get","entity","children","filter","childEntity","visitedKeys","parent","allChecked","partialChecked","_ref","checked","Array","from","cleanConductCheck","halfKeys","delete","_ref2","conductCheck","keyList","keyEntities","getCheckDisabled","warningMissKeys","hasEntity","push","result","length","slice","map","join","compatConfig","MODE","name","inheritAttrs","props","emits","setup","expose","attrs","slots","alignRef","elementRef","alignedClassName","stretchStyle","measureStretchStyle","doMeasure","stretch","getRootDomNode","visible","timeoutId","val","clearTimeout","setTimeout","value","immediate","status","goNextStatus","prepareResolveRef","getAlignTarget","point","forceAlign","_a","onInternalAlign","popupDomNode","matchAlign","nextAlignedClassName","getClassNameFromAlign","preAlignedClassName","Promise","resolve","then","call","onAlign","motion","m","animation","eventName","originFn","onShowPrepare","getElement","$el","alignDisabled","align","points","zIndex","prefixCls","destroyPopupOnHide","onMouseenter","onMouseleave","onTouchstart","onMousedown","statusValue","mergedStyle","opacity","pointerEvents","style","childNode","default","mergedClassName","class","arrow","hasAnimate","transitionProps","A","mobile","popupClassName","popupStyle","popupMotion","popupRender","useMaxLevel","newLevelEntities","Map","newMaxLevel","keyEntitiesValue","Object","prototype","hasOwnProperty","levelSet","set","Math","max","Mask","mask","maskAnimation","maskTransitionName","transitionName","displayName","__rest","s","e","t","p","indexOf","getOwnPropertySymbols","i","propertyIsEnumerable","getKey","pos","undefined","fillFieldNames","fieldNames","title","_title","mergedTitle","convertTreeToData","rootNodes","dig","arguments","treeNodes","treeNode","_b","_c","_d","k","v","entries","isLeaf","selectable","newProps","slotsProps","icon","switcherIcon","rest","dataNode","parsedChildren","flattenTreeData","treeNodeList","expandedKeys","fieldTitles","fieldKey","fieldChildren","expandedKeySet","flattenList","list","index","mergedKey","fieldTitle","flattenNode","data","isStart","isEnd","traverseDataNodes","dataNodes","callback","config","mergedConfig","externalGetKey","childrenPropName","mergeChildrenPropName","syntheticGetKey","processNode","pathNodes","connectNodes","parentPos","nodes","subNode","subIndex","convertDataToEntities","initWrapper","processEntity","onProcessFinished","legacyExternalGetKey","mergedExternalGetKey","posEntities","wrapper","item","getTreeNodeProps","expandedKeysSet","selectedKeysSet","loadedKeysSet","loadingKeysSet","checkedKeysSet","halfCheckedKeysSet","dragOverNodeKey","dropPosition","treeNodeProps","eventKey","expanded","selected","loaded","loading","halfChecked","String","dragOver","dragOverGapTop","dragOverGapBottom","convertNodePropsToEventData","active","eventData","dataRef","defineProperty","arrDel","clone","splice","arrAdd","posToArr","split","getPosition","isTreeNode","type","getDragChildrenKeys","dragNodeKey","dragChildrenKeys","isLastChild","treeNodeEntity","posArr","Number","isFirstChild","calcDropPosition","event","dragNode","targetNode","indent","startMousePosition","allowDrop","flattenedNodes","expandKeysSet","direction","clientX","clientY","top","height","target","getBoundingClientRect","horizontalMouseOffset","x","rawDropLevelOffset","abstractDropNodeEntity","nodeIndex","findIndex","flattenedNode","prevNodeIndex","prevNodeKey","initialAbstractDropNodeKey","abstractDragOverEntity","dropLevelOffset","abstractDragDataNode","abstractDropDataNode","dropAllowed","dropNode","dropTargetKey","dropTargetPos","dropContainerKey","calcSelectedKeys","selectedKeys","multiple","parseCheckedKeys","keyProps","isArray","conductExpandParent","conductUp","findExpandedKeys","prev","next","prevLen","nextLen","abs","find","shorter","longer","cache","getExpandRange","shorterStartIndex","shorterEndNode","longerStartIndex","longerEndIndex"],"sourceRoot":""}